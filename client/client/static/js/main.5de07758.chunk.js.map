{"version":3,"sources":["sections/AppHeader/assets/solidarity.png","lib/components/AppHeaderSkeleton/assets/solidarity.png","sections/Login/assets/facebook.png","sections/Login/assets/google.png","serviceWorker.ts","lib/graphql/mutations/LogIn/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/HelpRequest/index.ts","lib/graphql/mutations/Signup/index.ts","lib/graphql/mutations/LoginEmail/index.ts","lib/graphql/mutations/ConvertGeoToAddress/index.ts","lib/graphql/mutations/ConvertAddressToGeolocation/index.ts","lib/graphql/mutations/AutoCompleteAddress/index.ts","lib/graphql/mutations/CreateGroupe/index.ts","lib/graphql/mutations/JoinGroup/index.ts","lib/graphql/mutations/VerifyRequest/index.ts","lib/utils/index.ts","sections/AppHeader/components/MenuItems/index.tsx","sections/AppHeader/components/ChangeLanguage/index.tsx","sections/AppHeader/index.tsx","sections/Home/components/Filter/components/assets/svg/InsideSvg/index.tsx","sections/Home/components/Filter/components/assets/svg/OutSideSvg/index.tsx","sections/Home/components/Filter/components/assets/svg/ShoppingSvg/index.tsx","sections/Home/components/Filter/components/FilterTypes/index.tsx","sections/Home/components/Filter/components/FilterLanguage/index.tsx","sections/Home/components/Filter/components/FilterCity/index.tsx","sections/Home/components/Filter/index.tsx","lib/graphql/queries/AuthUrl/index.ts","lib/graphql/queries/User/index.ts","lib/graphql/queries/MapData/index.ts","lib/graphql/queries/Group/index.ts","sections/Home/components/Map/components/MapDataList/components/HelpModal/index.tsx","sections/Home/components/Map/components/MapDataList/index.tsx","sections/Home/components/Map/components/GoogleMap/index.tsx","sections/Home/components/Map/index.tsx","sections/Home/components/HomeHero/assets/svg/person/index.tsx","sections/Home/components/HomeHero/assets/svg/world/index.tsx","sections/Home/components/HomeHero/index.tsx","sections/Home/index.tsx","lib/components/AppHeaderSkeleton/index.tsx","lib/components/ErrorBanner/index.tsx","lib/components/PageSkeleton/index.tsx","lib/components/ListingCard/index.tsx","sections/Login/components/FacebookButton/index.tsx","sections/Login/components/GoogleButton/index.tsx","sections/Login/components/LoginForm/components/Login/index.tsx","sections/Login/components/LoginForm/components/Signup/index.tsx","sections/Login/components/LoginForm/index.tsx","sections/Login/index.tsx","sections/NotFound/index.tsx","sections/User/components/UserProfile/components/UserHelpRequests/index.tsx","sections/User/components/AskForHelp/index.tsx","sections/User/components/UserProfile/index.tsx","sections/User/components/GeoLocationButton/geo.tsx","sections/User/components/GeoLocationButton/index.tsx","sections/User/components/CreateGroupe/index.tsx","sections/User/index.tsx","lib/hooks/useScrollToTop/index.ts","sections/Group/components/GroupProfile/index.tsx","sections/Group/components/JoinGroup/index.tsx","sections/Group/components/GroupInfoAdmin/index.tsx","sections/Group/index.tsx","i18n.ts","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","LOG_IN","gql","LOG_OUT","HELP_REQUEST","SIGNUP","LOGIN_EMAIL","GENERATE_ADDRESS","GENERATE_USER_GEOLOCATION","GENERATE_GEOLOCATION","AUTO_COMPLETE_CITY","CREATE_GROUPE","JOIN_GROUP","VERIFY_REQUEST","displaySuccessNotification","message","description","notification","placement","style","marginTop","displayErrorMessage","error","Item","Menu","SubMenu","MenuItems","viewer","setViewer","useMutation","onCompleted","data","logOut","sessionStorage","removeItem","onError","subMenuLogin","id","avatar","title","src","key","to","UserAddOutlined","onClick","LoginOutlined","type","CustomMenu","mode","selectable","styled","Option","Select","ChangeLanguage","i18n","useTranslation","language","Container","defaultValue","onChange","value","changeLanguage","showArrow","FlagHolder","role","aria-label","div","Header","Layout","Title","Typography","AppHeader","offsetTop","className","flex","display","alignContent","margin","logo","alt","InsideSvg","xmlns","width","height","viewBox","fill","fillRule","stroke","strokeWidth","d","OutsideSvg","xmlnsXlink","transform","xlinkHref","mask","ShoppingSvg","Form","FilterTypes","t","name","Group","CustomRadio","Box","Radio","Button","FilterLanguage","FilterCity","setAddressToGroLocation","useState","searchValue","setSearchValue","addresses","setAddresses","autoCompleteAddress","autoComplete","generateGeoAddress","geoLocation","console","log","generateGeoLocation","options","length","map","a","i","showSearch","placeholder","defaultActiveFirstOption","filterOption","variables","userAddress","onSearch","cityName","notFoundContent","Text","Filter","setFilterValues","filters","onFinish","c","initialValues","textAlign","level","htmlType","AUTH_URL","USER","MAP_DATA","GROUP","HelpModal","visible","setVisible","modalData","onOk","onCancel","centered","MapDataList","page","limit","setPage","helpRequests","simplePagination","setModalData","result","total","userHelpRequestsList","itemLayout","dataSource","undefined","locale","emptyText","color","background","pagination","size","position","current","defaultPageSize","hideOnSinglePage","showLessItems","simple","renderItem","helpRequest","padding","minWidth","adminAtt","Meta","userBookingsElement","Card","Content","IconText","icon","text","React","createElement","marginRight","Mark","zoom","history","useHistory","MarkBody","theme","Dot","CustomCard","loading","actions","StarOutlined","TeamOutlined","push","GoogleMap","setCurrentData","users","addressToGeoLocation","setZoom","bootstrapURLKeys","defaultCenter","lat","lng","center","debounced","event","bounds","boundsData","maxLat","minLat","maxLng","minLng","nw","se","defaultZoom","onChildClick","e","onZoomAnimationStart","onZoomAnimationEnd","backgroundColor","onTilesLoaded","index","MapLeftList","Paragraph","Map","typeOfHelp","currentData","useQuery","fetchPolicy","getCurrentMapData","count","helpRequestsTotal","HideElement","Person","World","HomeHero","top","zIndex","opacity","xs","md","Left","Right","TextHolder","Home","address","AppHeaderSkeleton","ErrorBanner","closable","banner","PageSkeleton","skeletonParagraph","active","paragraph","rows","FaceBookButton","disabled","facebookLogo","GoogleButton","client","useApolloClient","handleGoogleAuthorize","query","href","authUrl","googleLogo","useForm","Login","form","resetFields","loginEmail","token","setItem","login","viewerId","remember","values","input","rules","required","Password","LoadingOutlined","Signup","setActiveTab","imageLoading","setImageLoading","imageBase64Value","setImageBase64Value","signup","listType","showUploadList","action","beforeUpload","beforeImageUpload","info","file","status","originFileObj","getBase64Value","PlusCircleOutlined","fileIsValidImage","fileIsValidSize","img","callback","reader","FileReader","readAsDataURL","onload","TabPane","Tabs","LgoInForm","activeTab","activeKey","tab","logIn","logInData","logInLoading","logInError","logInRef","useRef","useEffect","code","URL","searchParams","get","loInErrorBannerElement","tip","ButtonsHolder","NotFound","UserHelpRequests","helpRequestsPage","setHelpRequestsPage","grid","gutter","sm","lg","AskForHelpContent","refetchUserData","createAskHelp","CustomForm","labelCol","span","wrapperCol","layout","scrollToFirstError","validateMessages","default","CustomItem","label","UserProfileContent","user","viewerIsUser","helpRequestsElements","groupMembersElement","memberAtt","AskForHelpElement","strong","verifiedAccount","CheckCircleTwoTone","twoToneColor","CloseCircleOutlined","contact","defaultActiveKey","geolocated","suppressLocationOnMount","positionOptions","enableHighAccuracy","coords","isGeolocationAvailable","isGeolocationEnabled","longitude","latitude","convertGeo","convertGeoRef","generateUserLocation","GeoLocationButton","innerRef","ref","getLocation","AimOutlined","street","city","state","country","TextArea","Input","CreateGroupe","createGroup","User","useParams","refetch","useLayoutEffect","scrollTo","NotVerifyAccount","userProfileContentElement","geoLocationButtonElement","CreateGroupeElement","GroupProfile","group","groupMembers","by","prefix","LikeOutlined","suffix","HeartTwoTone","JoinGroup","selectedLanguages","setSelectedLanguages","joinGroup","languages","onValuesChange","help","tokenSeparators","lang","List","GroupInfoAdmin","joinRequests","groupId","Error","verifyUser","overflowCount","item","alignItems","justifyContent","CheckCircleOutlined","fontSize","viewerIsCreator","creatorId","letGroupMember","findIndex","groupElement","askToLogin","JoinElement","profileInfoAdminElement","use","Backend","initReactI18next","init","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","useSuspense","ApolloClient","uri","request","operation","getItem","setContext","headers","initialViewer","didRequest","App","logInErrorBannerElement","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5de07758.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/solidarity.dad97e85.png\";","module.exports = __webpack_public_path__ + \"static/media/solidarity.dad97e85.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.eb8d9fb1.png\";","module.exports = __webpack_public_path__ + \"static/media/google.ff629c02.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { gql } from 'apollo-boost'\nexport const LOG_IN = gql`\nmutation LogIn($input:LogInInput){\n  logIn(input:$input){\n    id\n    token\n    avatar\n    didRequest\n    address\n    adminAtt\n  }\n}\n` ","import { gql } from 'apollo-boost'\nexport const LOG_OUT = gql`\nmutation LogOut{\n  logOut{\n    id\n    token\n    avatar\n    didRequest\n  }\n}\n` ","import { gql } from 'apollo-boost'\nexport const HELP_REQUEST = gql`\n  mutation createHelpRequest($input:HelpRequestInputs!){\n    createHelpRequest(input:$input){\n      id\n    }\n  }\n`","import { gql } from 'apollo-boost'\nexport const SIGNUP = gql`\nmutation Signup($input:SignupInputs!){\n  signup(input:$input){\n    id\n  }\n}\n` ","import { gql } from 'apollo-boost'\nexport const LOGIN_EMAIL = gql`\nmutation LoginEmail($input:LoginEmailInputs){\n  loginEmail(input:$input){\n    id\n    didRequest\n    token\n    avatar\n    address\n    adminAtt\n  }\n}\n` ","import { gql } from 'apollo-boost'\nexport const GENERATE_ADDRESS = gql`\nmutation generateUserLocation($lng:Float!,$lat:Float!){\n   generateUserLocation(lng:$lng,lat:$lat)\n}\n`","import { gql } from 'apollo-boost'\n\nexport const GENERATE_USER_GEOLOCATION = gql`\nmutation generateUserAddress($userAddress:String!){\n   generateUserAddress(userAddress:$userAddress){\n      address\n      geoLocation {\n         lat\n         lng\n      }\n   }\n}\n`\nexport const GENERATE_GEOLOCATION = gql`\nmutation generateGeoAddress($userAddress:String!){\n   generateGeoAddress(userAddress:$userAddress){\n      geoLocation {\n         lat\n         lng\n      }\n   }\n}\n`","import { gql } from 'apollo-boost'\nexport const AUTO_COMPLETE_CITY = gql`\nmutation autoCompleteAddress($cityName:String!){\n  autoCompleteAddress(cityName:$cityName)\n}\n` ","import { gql } from 'apollo-boost'\n\nexport const CREATE_GROUPE = gql`\nmutation createGroup($name:String!,$description:String!,$avatar:String!){\n createGroup(name:$name,description:$description,avatar:$avatar){\n   id\n }\n}\n`","import { gql } from 'apollo-boost'\n\nexport const JOIN_GROUP = gql`\nmutation joinGroup($id:String!,$languages:[String!]!){\n    joinGroup(id:$id,languages:$languages){\n      id\n    }\n}\n`","import { gql } from 'apollo-boost'\n\nexport const VERIFY_REQUEST = gql`\nmutation verifyRequest($id:String!,$groupId:String!){\n  verifyRequest(id:$id,groupId:$groupId){\n    id\n  }\n}\n`","import { message, notification } from 'antd'\n\nexport const formatListingPrice = (price: number, round = true) => {\n  const formattedListingPrice = round ? Math.round(price / 100) : price / 100;\n  return `$${formattedListingPrice}`\n}\nexport const iconColor = \"#1890ff\";\nexport const displaySuccessNotification = (message: string, description?: string) => {\n  return notification['success']({\n    message, description, placement: \"topLeft\", style: { marginTop: 50 }\n  })\n}\nexport const displayErrorMessage = (error: string) => {\n  return message.error(error)\n}\n\nexport const mapStyleSettings = {\n  styles: [\n    {\n      \"stylers\": [\n        {\n          \"color\": \"#5f5f5f\"\n        }\n      ]\n    },\n    {\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#f5f5f5\"\n        }\n      ]\n    },\n    {\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [\n        {\n          \"visibility\": \"off\"\n        }\n      ]\n    },\n    {\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#616161\"\n        }\n      ]\n    },\n    {\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n        {\n          \"color\": \"#f5f5f5\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative\",\n      \"stylers\": [\n        {\n          \"weight\": 0.5\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#11053b\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n        {\n          \"visibility\": \"simplified\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative.land_parcel\",\n      \"stylers\": [\n        {\n          \"weight\": 1.5\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative.land_parcel\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#11053b\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative.land_parcel\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n        {\n          \"color\": \"#11053b\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"administrative.land_parcel\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#bdbdbd\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"stylers\": [\n        {\n          \"color\": \"#f1f2f3\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"labels.text\",\n      \"stylers\": [\n        {\n          \"color\": \"#606162\"\n        },\n        {\n          \"saturation\": 20\n        },\n        {\n          \"lightness\": 40\n        },\n        {\n          \"weight\": 0.5\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"visibility\": \"simplified\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"poi\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#eeeeee\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"poi\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#757575\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"poi.park\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#e5e5e5\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"poi.park\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#9e9e9e\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#ffffff\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#ffffff\"\n        },\n        {\n          \"saturation\": 40\n        },\n        {\n          \"lightness\": 70\n        },\n        {\n          \"weight\": 3.5\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#757575\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#dadada\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#616161\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#9e9e9e\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"transit.line\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#e5e5e5\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"transit.station\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#eeeeee\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"stylers\": [\n        {\n          \"color\": \"#cbf1ff\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n        {\n          \"color\": \"#94e4fe\"\n        }\n      ]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n        {\n          \"color\": \"#9e9e9e\"\n        }\n      ]\n    }\n  ]\n}","import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { Button, Menu, Avatar } from 'antd'\nimport { UserAddOutlined, LoginOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport { Viewer } from '../../../../lib/types'\nimport { LOG_OUT } from '../../../../lib/graphql/mutations';\nimport { LogOut as LogOutData } from '../../../../lib/graphql/mutations/LogOut/__generated__/LogOut'\nimport { displaySuccessNotification, displayErrorMessage } from '../../../../lib/utils'\nimport styled from 'styled-components'\nconst { Item, SubMenu } = Menu;\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void\n\n}\nexport const MenuItems: React.FC<Props> = ({ viewer, setViewer }) => {\n  const [logOut] = useMutation<LogOutData>(LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.logOut) {\n        setViewer(data.logOut)\n        window.sessionStorage.removeItem('token')\n        displaySuccessNotification('you have successfully logged out')\n      }\n    },\n    onError: (data) => {\n      displayErrorMessage(\"sorry we weren't able to log you out. please try agin later\")\n    }\n  })\n  const handleLogOut = () => {\n    logOut()\n  }\n  const subMenuLogin = viewer.id && viewer.avatar ? (\n    <SubMenu title={<Avatar src={viewer.avatar} />}>\n      <Item key=\"/user\">\n        <Link to={`/user/${viewer.id}`}>\n          <UserAddOutlined />\n          Profile\n        </Link>\n      </Item>\n      <Item key=\"logout\">\n        <div onClick={handleLogOut}>\n          <LoginOutlined />\n          Log out\n        </div>\n      </Item>\n    </SubMenu>\n  ) : (\n      <Item>\n        <Link to=\"/login\">\n          <Button type=\"primary\">\n            Sign In\n        </Button>\n        </Link>\n      </Item>\n    )\n  return (\n    <CustomMenu mode=\"horizontal\" selectable={false} >\n      {subMenuLogin}\n    </CustomMenu>\n  )\n}\nconst CustomMenu = styled(Menu)`\npadding : 0 5px;\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { Select } from 'antd'\nimport { useTranslation } from 'react-i18next'\n\nconst { Option } = Select\nexport const ChangeLanguage: React.FC<{}> = () => {\n  const { i18n } = useTranslation()\n  const language = i18n.language\n  const changeLanguage = (value: string) => {\n    i18n.changeLanguage(value)\n  }\n  return (\n    <Container>\n      <Select defaultValue={language} onChange={changeLanguage} showArrow={false}>\n        <Option value=\"se\"><FlagHolder ><span role=\"img\" aria-label=\"swedish\">🇸🇪</span></FlagHolder></Option>\n        <Option value=\"ar\"><FlagHolder><span role=\"img\" aria-label=\"arabic\">🇦🇪</span></FlagHolder></Option>\n        <Option value=\"en\"><FlagHolder ><span role=\"img\" aria-label=\"english\">🇬🇧</span></FlagHolder></Option>\n        <Option value=\"so\"><FlagHolder ><span role=\"img\" aria-label=\"somali\">🇸🇴</span></FlagHolder></Option>\n      </Select>\n    </Container>\n  )\n}\nconst FlagHolder = styled.div`\nfont-size:25px;\n`\nconst Container = styled.div`\ndisplay:flex;\njustify-content:flex-end;\nalign-items:center;\n& .ant-select-single:not(.ant-select-customize-input) .ant-select-selector {\n  border:none\n}\n`\n","import React from 'react'\nimport { Layout, Affix, Typography } from 'antd'\nimport { MenuItems, ChangeLanguage } from './components'\nimport { Link } from 'react-router-dom'\nimport logo from './assets/solidarity.png'\nimport { Viewer } from '../../lib/types'\n\ninterface Props {\n  viewer: Viewer,\n  setViewer: (viewer: Viewer) => void\n}\nconst { Header } = Layout;\nconst { Title } = Typography;\nexport const AppHeader: React.FC<Props> = ({ viewer, setViewer }) => {\n  return (\n    <Affix offsetTop={0}>\n      <Header className=\"app-header\">\n        <div className=\"app-header__logo-search-section\">\n          <div className=\"app-header__logo\" style={{ flex: 1 }}>\n            <Link to=\"/\" style={{ display: 'flex', alignContent: 'center', marginTop: 10 }}>\n              <Title style={{ margin: 0 }}>V</Title>\n              <img src={logo} alt=\"app -logo\" />\n              <Title style={{ margin: 0 }}>B</Title>\n            </Link>\n          </div>\n          <ChangeLanguage />\n          <MenuItems viewer={viewer} setViewer={setViewer} />\n        </div>\n        <div className=\"app-header__menu-section\">\n        </div>\n      </Header>\n    </Affix>\n  )\n}","import React from 'react'\n\nexport const InsideSvg: React.FC<{}> = () => {\n  return (\n\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"5000\"\n      height=\"5000\"\n      viewBox=\"0 0 5000 5000\"\n    >\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M422.504 5000L446.366 5000 446.366 0 422.504 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M881.518 5000L905.381 5000 905.381 0 881.518 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M1340.53 5000L1364.4 5000 1364.4 0 1340.53 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M1799.55 5000L1823.41 5000 1823.41 0 1799.55 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M2258.56 5000L2282.42 5000 2282.42 0 2258.56 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M2717.58 5000L2741.44 5000 2741.44 0 2717.58 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M3176.59 5000L3200.45 5000 3200.45 0 3176.59 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M3635.6 5000L3659.47 5000 3659.47 0 3635.6 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M4094.62 5000L4118.48 5000 4118.48 0 4094.62 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M4553.63 5000L4577.5 5000 4577.5 0 4553.63 0z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 446.366L5000 446.366 5000 422.504 0.06 422.504z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 905.381L5000 905.381 5000 881.518 0.06 881.518z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 1364.4L5000 1364.4 5000 1340.53 0.06 1340.53z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 1823.41L5000 1823.41 5000 1799.55 0.06 1799.55z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 2282.42L5000 2282.42 5000 2258.56 0.06 2258.56z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 2741.44L5000 2741.44 5000 2717.58 0.06 2717.58z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 3200.45L5000 3200.45 5000 3176.59 0.06 3176.59z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 3659.47L5000 3659.47 5000 3635.6 0.06 3635.6z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 4118.48L5000 4118.48 5000 4094.62 0.06 4094.62z\"\n          ></path>\n          <path\n            fill=\"#D3ECEA\"\n            d=\"M0.06 4577.5L5000 4577.5 5000 4553.63 0.06 4553.63z\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M2022.32 3383.69c0-183.8 148.99-332.8 332.79-332.8 183.79 0 332.79 149 332.79 332.8 0 183.79-149 332.79-332.79 332.79-183.8 0-332.79-149-332.79-332.79\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1880.46 3540.7c0-183.8 148.99-332.8 332.79-332.8s332.79 149 332.79 332.8c0 183.79-148.99 332.79-332.79 332.79s-332.79-149-332.79-332.79\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1547.66 3630.3c0-183.8 149-332.79 332.8-332.79 183.79 0 332.79 148.99 332.79 332.79s-149 332.79-332.79 332.79c-183.8 0-332.8-148.99-332.8-332.79\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M400.566 3525.79c0-183.8 148.997-332.79 332.793-332.79s332.791 148.99 332.791 332.79-148.995 332.79-332.791 332.79-332.793-148.99-332.793-332.79\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1328.82 3066.4c0-169.86 137.7-307.56 307.56-307.56s307.56 137.7 307.56 307.56-137.7 307.56-307.56 307.56-307.56-137.7-307.56-307.56\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1501.79 2817.82c0-169.86 137.7-307.56 307.56-307.56s307.56 137.7 307.56 307.56-137.7 307.56-307.56 307.56-307.56-137.7-307.56-307.56\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1072.61 2768.56c0-169.86 137.7-307.56 307.57-307.56 169.86 0 307.56 137.7 307.56 307.56 0 169.87-137.7 307.57-307.56 307.57-169.87 0-307.57-137.7-307.57-307.57\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M996.178 3125.38c0-169.86 137.702-307.56 307.562-307.56s307.56 137.7 307.56 307.56-137.7 307.56-307.56 307.56-307.562-137.7-307.562-307.56\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1901.53 2887.66c0-169.86 137.7-307.56 307.56-307.56 169.87 0 307.57 137.7 307.57 307.56s-137.7 307.56-307.57 307.56c-169.86 0-307.56-137.7-307.56-307.56\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M334.934 3218.23c0-169.86 137.7-307.56 307.562-307.56 169.861 0 307.562 137.7 307.562 307.56s-137.701 307.56-307.562 307.56c-169.862 0-307.562-137.7-307.562-307.56\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M398.636 3076.13c0-169.87 137.7-307.57 307.562-307.57 169.861 0 307.562 137.7 307.562 307.57 0 169.86-137.701 307.56-307.562 307.56-169.862 0-307.562-137.7-307.562-307.56\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M2259.01 3066.4c0-126.25 102.34-228.59 228.59-228.59 126.24 0 228.58 102.34 228.58 228.59s-102.34 228.59-228.58 228.59c-126.25 0-228.59-102.34-228.59-228.59\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1715.99 3297.51c0-183.8 149-332.79 332.79-332.79 183.8 0 332.8 148.99 332.8 332.79 0 183.79-149 332.79-332.8 332.79-183.79 0-332.79-149-332.79-332.79\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M1232.09 3478.35c0-156.37 126.76-283.13 283.12-283.13 156.37 0 283.13 126.76 283.13 283.13 0 156.36-126.76 283.12-283.13 283.12-156.36 0-283.12-126.76-283.12-283.12\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M743.289 3384.84c0-175.87 142.572-318.44 318.441-318.44 175.87 0 318.45 142.57 318.45 318.44s-142.58 318.45-318.45 318.45c-175.869 0-318.441-142.58-318.441-318.45\"\n          ></path>\n          <path\n            fill=\"#95CFE6\"\n            d=\"M604.389 3066.4c0-175.87 142.572-318.44 318.443-318.44 175.868 0 318.448 142.57 318.448 318.44s-142.58 318.44-318.448 318.44c-175.871 0-318.443-142.57-318.443-318.44\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M1592.87 2697.98c0-61.78 50.09-111.86 111.87-111.86s111.86 50.08 111.86 111.86-50.08 111.86-111.86 111.86-111.87-50.08-111.87-111.86\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M2341.14 3020.95c0-61.78 50.09-111.86 111.87-111.86s111.86 50.08 111.86 111.86-50.08 111.87-111.86 111.87-111.87-50.09-111.87-111.87\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M1294.11 2809.84c0-98.04 79.48-177.52 177.52-177.52 98.05 0 177.52 79.48 177.52 177.52 0 98.05-79.47 177.52-177.52 177.52-98.04 0-177.52-79.47-177.52-177.52\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M978.436 2794.2c0-109.92 89.104-199.03 199.024-199.03s199.03 89.11 199.03 199.03-89.11 199.02-199.03 199.02-199.024-89.1-199.024-199.02\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M1040.1 3003.5c0-87.28 70.75-158.03 158.03-158.03s158.04 70.75 158.04 158.03-70.76 158.03-158.04 158.03c-87.28 0-158.03-70.75-158.03-158.03\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M733.359 2786.74c0-99.31 80.509-179.82 179.821-179.82 99.31 0 179.82 80.51 179.82 179.82 0 99.31-80.51 179.82-179.82 179.82-99.312 0-179.821-80.51-179.821-179.82\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M764.798 2979.86c0-87.28 70.753-158.03 158.033-158.03 87.279 0 158.029 70.75 158.029 158.03s-70.75 158.03-158.029 158.03c-87.28 0-158.033-70.75-158.033-158.03\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M1939.16 2800.09c0-118.19 95.81-214 214-214s214 95.81 214 214-95.81 214-214 214-214-95.81-214-214\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M2188.15 2925.31c0-98.86 80.14-179.01 179.01-179.01 98.86 0 179.01 80.15 179.01 179.01 0 98.87-80.15 179.02-179.01 179.02-98.87 0-179.01-80.15-179.01-179.02\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M1500.82 2880.76c0-98.87 80.14-179.01 179.01-179.01 98.87 0 179.01 80.14 179.01 179.01 0 98.87-80.14 179.01-179.01 179.01-98.87 0-179.01-80.14-179.01-179.01\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M1737.96 2815.1c0-80.28 65.08-145.35 145.35-145.35s145.35 65.07 145.35 145.35c0 80.27-65.08 145.35-145.35 145.35s-145.35-65.08-145.35-145.35\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M553.886 2941.93c0-68.74 55.726-124.47 124.468-124.47 68.741 0 124.467 55.73 124.467 124.47 0 68.74-55.726 124.47-124.467 124.47-68.742 0-124.468-55.73-124.468-124.47\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M415.779 2989.01c0-45.78 37.116-82.9 82.901-82.9s82.9 37.12 82.9 82.9c0 45.79-37.115 82.9-82.9 82.9-45.785 0-82.901-37.11-82.901-82.9\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M354.185 3066.4c0-29.42 23.845-53.26 53.26-53.26 29.414 0 53.259 23.84 53.259 53.26 0 29.41-23.845 53.26-53.259 53.26-29.415 0-53.26-23.85-53.26-53.26\"\n          ></path>\n          <path\n            fill=\"#CAE9F2\"\n            d=\"M2516.66 3006.91c0-38.23 30.99-69.22 69.21-69.22 38.23 0 69.22 30.99 69.22 69.22 0 38.23-30.99 69.22-69.22 69.22-38.22 0-69.21-30.99-69.21-69.22\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M611.328 3050.91c137.749-1.23 168.495-32.43 167.665-170.15.83 137.72 31.969 168.37 169.696 167.18-137.727 1.19-168.484 32.41-167.672 170.14-.812-137.73-31.94-168.4-169.689-167.17\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M1592.22 2888.83c108.87-.97 133.17-25.63 132.51-134.47.66 108.84 25.26 133.07 134.11 132.12-108.85.95-133.15 25.62-132.51 134.47-.64-108.85-25.24-133.09-134.11-132.12\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M2116.38 3067.77c127.62-1.13 156.11-30.04 155.34-157.63.77 127.59 29.61 155.99 157.21 154.88-127.6 1.11-156.09 30.03-155.34 157.64-.75-127.61-29.59-156.02-157.21-154.89\"\n          ></path>\n          <path\n            fill=\"#A8A9A5\"\n            d=\"M0.06 5000L5000 5000 5000 3837 0.06 3837z\"\n          ></path>\n          <path\n            fill=\"#8B8C88\"\n            d=\"M0.06 3937.07L5000 3937.07 5000 3647.46 0.06 3647.46z\"\n          ></path>\n          <path\n            fill=\"#E15E3E\"\n            d=\"M4073.93 1669.76s31.01 93.93-101.9 419.91c0 0 13.8 28.53 66.91-55.54 0 0 101.55-125.62 113.3-311.14l-72.54-53.22-5.77-.01\"\n          ></path>\n          <path\n            fill=\"#E9B936\"\n            d=\"M3972.16 1614.15l489.83.57c14.25.02 28 5.17 38.69 14.59 43.69 38.51 127.17 148.87-81.2 276.91l-242-.29s-33.81-104.89-205.45-182.88l.13-108.9\"\n          ></path>\n          <path\n            fill=\"#D2A030\"\n            d=\"M4306.5 1614.66l-.34 291.55-128.59-.15s-33.8-104.9-205.44-182.89l.12-108.9 334.25.39\"\n          ></path>\n          <path\n            fill=\"#BE4634\"\n            d=\"M3888.29 1614.05L3972.16 1614.15 3972.03 1724.78 3888.2 1691.83 3888.29 1614.05\"\n          ></path>\n          <path\n            fill=\"#CFCEC9\"\n            d=\"M4419.52 1993.8L4177.54 1993.52 4177.64 1905.93 4419.62 1906.22 4419.52 1993.8\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4197.42 1991.64L4185.91 1991.63 4186.01 1905.94 4197.52 1905.96 4197.42 1991.64\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4227.96 1991.67L4216.44 1991.66 4216.54 1905.98 4228.06 1905.99 4227.96 1991.67\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4258.49 1991.71L4246.97 1991.7 4247.069 1906.02 4258.59 1906.03 4258.49 1991.71\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4289.02 1991.75L4277.51 1991.73 4277.609 1906.05 4289.12 1906.06 4289.02 1991.75\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4319.56 1991.78L4308.04 1991.77 4308.14 1906.09 4319.66 1906.1 4319.56 1991.78\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4350.09 1991.82L4338.569 1991.8 4338.67 1906.12 4350.19 1906.14 4350.09 1991.82\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4380.62 1991.85L4369.109 1991.84 4369.21 1906.16 4380.73 1906.17 4380.62 1991.85\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M4411.16 1991.89L4399.64 1991.88 4399.74 1906.19 4411.26 1906.21 4411.16 1991.89\"\n          ></path>\n          <path\n            fill=\"#9CBE41\"\n            d=\"M4422.11 1996.98l130.71 327.87s125.14 275.43 180.03 641.96c0 0 35.339 267.4 7.39 511.68 0 0-2.97 141.74-181.05 169.19l-557.75-.65c-78.27-.09-142.7-61.64-146.3-139.82-5.79-125.92-.18-345.63 55.42-693.29 6.72-42.06 15.22-83.82 25.38-125.19 38.26-155.66 142.19-552.46 241.44-700.96l242.15.28 2.58 8.93\"\n          ></path>\n          <path\n            fill=\"#E15E3E\"\n            d=\"M2929.66 1882.05L3074.58 1882.05 3074.58 1800.11 2929.66 1800.11z\"\n          ></path>\n          <path\n            fill=\"#BE4634\"\n            d=\"M3077.17 1801.28h-150.86c-5.06 0-9.16-4.1-9.16-9.16v-.96c0-5.06 4.1-9.16 9.16-9.16h150.86c5.06 0 9.16 4.1 9.16 9.16v.96c0 5.06-4.1 9.16-9.16 9.16\"\n          ></path>\n          <path\n            fill=\"#9CBE41\"\n            d=\"M3395.45 3239.24c-5.26-93.63-31.28-388.24-41-497.08-1.96-21.97-5.06-43.78-8.51-65.56-14.18-89.48 8.95-168.13 8.95-168.13l20.61-72.92c39.94-140.45-12.46-201.85-12.46-201.85l-220.47-247.17h-280.52l-220.66 247.17s-52.5 61.62-12.57 202.07l20.57 72.81s23.11 78.6 8.93 168.07c-3.45 21.78-6.55 43.59-8.51 65.55-9.73 108.83-35.76 403.43-41.01 497.07 0 0-19.39 423.4 77.69 407.91h631.26c97.07 15.49 77.7-407.94 77.7-407.94\"\n          ></path>\n          <path\n            fill=\"#BE4634\"\n            d=\"M3074.17 1870.86h-140.83c-6.77 0-13.43 1.69-19.39 4.92l-26.75 14.51c-15.47 8.39-25.1 24.59-25.1 42.2v54.04h280.55v-54.79a48.02 48.02 0 00-24.12-41.66l-24.14-13.84a40.66 40.66 0 00-20.22-5.38\"\n          ></path>\n          <path\n            fill=\"#72873A\"\n            d=\"M2776.99 2991.71L3219.5 2991.71 3219.5 2707.41 2776.99 2707.41z\"\n          ></path>\n          <path\n            fill=\"#D3DF7B\"\n            d=\"M2885.22 2046.78s-267.41 262-139.12 505.93c0 0-37.95-241.14 139.12-505.93\"\n          ></path>\n          <path\n            fill=\"#D2A030\"\n            d=\"M998.346 4211.56c-9.328 3.63-19.774 2.46-28.536-2.38-18.508-10.23-26.748-29.13-34.527-47.33-19.372-45.31-38.728-90.63-58.093-135.94-7.607-17.81-18.783-38.44-39.698-37.05-7.13.49-13.768 3.76-18.887 8.76-12.957 12.67-15.721 30.11-18.277 46.94l-61.535 405.2c-1.058 6.97-3.256 13.74-6.691 19.901-18.083 32.469-50.292 17.669-60.954-4.5-7.466-15.551-7.041-33.561-6.468-50.791l9.753-292.19c.261-7.81-5.081-14.85-12.748-16.29-12.018-2.25-17.196 11.15-19.342 21.81-20.639 102.98-41.277 205.95-61.923 308.94-3.167 15.81-6.519 32.07-15.386 45.56-8.859 13.48-24.692 23.69-40.614 21.08-16.473-2.69-28.365-18.36-31.971-34.65-3.598-16.3-.626-33.25 2.362-49.67l60.724-306.78c2.771-11.42-12.123-15.81-15.319-6.86-23.701 66.43-48.326 135.13-68.83 198.66-13.121 40.63-14.149 80.661-28.953 102-21.354 30.8-79.306 41.21-84.261-11.16-.73-7.72.06-15.5 2.086-22.98l95.452-306.64c3.226-20.62-15.833-16.96-18.806-12.31l-82.077 128.22c-15.438 24.12-33.551 49.84-55.828 67.05-17.331 13.39-35.205-3.19-32.739-24.95 3.584-31.65 15.892-79.44 27.851-108.05 38.818-92.87 84.774-163.94 117.625-259.08 55.083-159.54 58.518-205.88 60.961-255.54l18.948 4.7 36.955 7.99 4.128.9 42.015 7.8 42.931 6.68 43.758 5.55 44.533 4.36 45.255 3.16 45.942 1.91 46.522.65 46.545-.65 17.591-.73c1.706 14.75 3.688 29.45 5.908 44.05 23.463 154.18 72.064 303.37 103.322 456.15 5.18 25.33 6.03 58.87-18.704 68.5\"\n          ></path>\n          <path\n            fill=\"#E9B936\"\n            d=\"M1155.34 4192.26c-8.47 5.33-18.95 6.18-28.47 3.08-20.11-6.54-31.78-23.53-42.88-39.93-27.6-40.82-55.2-81.64-82.81-122.45-10.843-16.05-25.73-34.19-45.996-28.85-6.914 1.82-12.808 6.3-16.883 12.18-10.319 14.89-9.731 32.54-9.053 49.55l16.407 409.51c.283 7.05-.589 14.11-2.794 20.81-11.601 35.32-46.031 26.89-60.701 7.14-10.275-13.85-13.278-31.62-15.982-48.65l-45.822-288.74c-1.222-7.71-7.801-13.61-15.602-13.57-12.227.07-14.775 14.21-14.857 25.08-.737 105.03-1.483 210.05-2.228 315.07-.111 16.13-.32 32.73-6.467 47.66-6.147 14.91-19.752 27.94-35.882 28.4-16.683.48-31.331-12.64-37.962-27.96-6.624-15.32-6.914-32.53-7.1-49.22l1.46-312.73c.559-11.74-14.902-13.23-16.34-3.82-10.676 69.71-21.83 141.841-29.914 208.1-5.179 42.38 1.401 81.87-9.09 105.64-15.125 34.3-70.052 55.5-84.849 5.02-2.183-7.44-2.883-15.24-2.31-22.97l35.585-319.17c-.745-20.86-18.761-13.65-20.802-8.53l-56.276 141.46c-10.587 26.62-23.492 55.3-42.104 76.42-14.477 16.44-35.167 3.55-36.874-18.29-2.481-31.75.537-81.01 6.855-111.36 20.512-98.55 52.155-177.04 66.371-276.69 34.773-243.72 7.311-230.13 3.414-344.08l17.344 3.76 42.015 7.8 42.931 6.68 43.758 5.55 44.533 4.36 45.255 3.16 45.942 1.91 46.522.65 46.545-.65 45.926-1.91 19.149-1.33a1235.539 1235.539 0 0017.486 52.83c52.27 146.93 128.27 284.19 187.92 428.28 9.9 23.9 17.09 56.66-5.37 70.8\"\n          ></path>\n          <path\n            fill=\"#D3DF7B\"\n            d=\"M4235.96 2058.11s-400.21 931.95-197.81 1518.82c0 0-88.69-592.12 197.81-1518.82\"\n          ></path>\n          <path\n            fill=\"#BE4634\"\n            d=\"M3698.33 3113.65c50.12.03 91.14-40.96 91.17-91.08l.86-1508.94c.03-50.12-40.95-91.15-91.07-91.17-50.12-.03-91.15 40.95-91.18 91.07l-.86 1508.94c-.03 50.12 40.96 91.15 91.08 91.18\"\n          ></path>\n          <path\n            fill=\"#E15E3E\"\n            d=\"M3698.33 3113.65l91.12.05.91-1600.07c.03-50.32-40.74-91.15-91.07-91.17l-.96 1691.19\"\n          ></path>\n          <path\n            fill=\"#6A6A67\"\n            d=\"M3577.27 3154.7L3819.34 3154.84 3819.53 2822.12 3577.46 2821.98 3577.27 3154.7\"\n          ></path>\n          <path\n            fill=\"#545451\"\n            d=\"M3698.3 3154.77L3819.34 3154.84 3819.53 2822.12 3698.49 2822.05 3698.3 3154.77\"\n          ></path>\n          <path\n            fill=\"#545451\"\n            d=\"M3690.37 3111.9c524.32.3 470.77 471.32 470.77 471.32l-471.04-.27-470.22-.27s-41.22-471.07 470.49-470.78\"\n          ></path>\n          <path\n            fill=\"#6A6A67\"\n            d=\"M3219.95 3582.68l478.11.27.3-471.02-11.98-.01c-511.64-.29-466.43 470.76-466.43 470.76\"\n          ></path>\n          <path\n            fill=\"#454543\"\n            d=\"M3210.85 3647.04l974.34.55c27.76.02 50.48-22.68 50.5-50.44.02-27.76-22.68-50.48-50.44-50.5l-974.34-.55c-27.76-.02-50.48 22.68-50.5 50.44 0 27.76 22.68 50.48 50.44 50.5\"\n          ></path>\n          <path\n            fill=\"#91928E\"\n            d=\"M3378.26 3514.54l-105.49-.92s3.6-206.78 176.82-301.57c0 0-125.29 150.88-71.33 302.49\"\n          ></path>\n          <path\n            fill=\"#545451\"\n            d=\"M3022.19 3439.73H405.995c-64.614 0-116.995 52.39-116.995 117v90.95h2850.19v-90.95c0-64.61-52.38-117-117-117\"\n          ></path>\n          <path\n            fill=\"#545451\"\n            d=\"M1936.19 3439.73L2144.81 3439.73 2144.81 1724.87 1936.19 1724.87z\"\n          ></path>\n          <path\n            fill=\"#545451\"\n            d=\"M2144.81 2031.87l-208.67-.24.67-568.01c-.08-41.28-18.77-84.77-49.99-116.34-44.3-44.79-115.13-68.47-204.84-68.47-98.32 0-170.21 26.05-213.68 77.41-33.58 39.7-41.14 84.07-41.14 96.48v382.75h-208.67V1452.7c0-60.09 23.78-152.4 90.52-231.27 58.41-69.02 170.52-151.29 372.97-151.29 185.34 0 294.38 70.92 353.21 130.41 69.97 70.75 110.17 166.58 110.29 262.92v.25l-.67 568.15\"\n          ></path>\n          <path\n            fill=\"#7F807C\"\n            d=\"M2132.45 3049.39h-192.51c-33.67 0-60.96 27.3-60.96 60.97v329.37h314.44v-329.37c0-33.67-27.3-60.97-60.97-60.97\"\n          ></path>\n          <path\n            fill=\"#7F807C\"\n            d=\"M1186.44 1787.67L1450.68 1787.67 1450.68 1650.9 1186.44 1650.9z\"\n          ></path>\n          <path\n            fill=\"#FFFFFE\"\n            d=\"M1348.42 1835L1289.29 1835 1169.36 3440 1468.35 3440 1348.42 1835\"\n          ></path>\n          <path\n            fill=\"#EEEEEA\"\n            d=\"M1300.9 2064.13l-82.41 1199.83s99.28-860.12 82.41-1199.83\"\n          ></path>\n          <path\n            fill=\"#EEEEEA\"\n            d=\"M1339.45 2280.97l67.46 963.59s-72.28-419.09-67.46-963.59\"\n          ></path>\n          <path\n            fill=\"#EEEEEA\"\n            d=\"M1326.3 2906.86l23.49 462.56s-42.67-166.18-23.49-462.56\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  )\n}","import React from 'react'\n\nexport const OutsideSvg: React.FC<{}> = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 149 114\"\n    >\n      <defs>\n        <path\n          id=\"a\"\n          d=\"M85.461 85.797H20.339V63.63h6.444a.898.898 0 00.893-.994.898.898 0 00-.893-.995h-1.178V44.298h-5.266V27.615l.001-2.205-1.031-1.172h4.916L52.89 53.055v8.779h8.734-9.912a.898.898 0 100 1.796H63.41l22.051 22.167zM12.602 16.612L1.272 3.73.495.384l12.107 12.17v4.058z\"\n        ></path>\n      </defs>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g transform=\"translate(-22 -304)\">\n          <g transform=\"translate(22.333 304.707)\">\n            <path\n              fill=\"#C4AA90\"\n              d=\"M45.8840657 100.01627L45.7730657 99.9692696 45.7760657 99.7492696 49.4960657 96.1332696 49.7150657 96.1362696 49.7120657 96.3562696 45.9930657 99.9722696 45.8840657 100.01627\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M52.1860657 101.30427L52.0740657 101.25727 52.0770657 101.03727 55.7970657 97.4212696 56.0170657 97.4242696 56.0130657 97.6442696 52.2930657 101.26027 52.1860657 101.30427\"\n            ></path>\n            <path\n              fill=\"#85674D\"\n              d=\"M49.918 87.814a7.506 7.506 0 017.507 7.505v17.976H42.412V95.32a7.506 7.506 0 017.506-7.506\"\n            ></path>\n            <path\n              fill=\"#A68B6D\"\n              d=\"M49.918 89.273a6.354 6.354 0 016.354 6.354v17.37a.298.298 0 01-.298.298h-12.11a.3.3 0 01-.299-.299V95.627a6.354 6.354 0 016.353-6.354\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M44.6660657 107.61627L44.5900657 107.58427 44.5910657 107.43327 53.4280657 98.6672696 53.5800657 98.6682696 53.5790657 98.8192696 44.7420657 107.58527 44.6660657 107.61627\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M53.504 98.66l-.06.024-8.837 8.765v.118l.12.001 8.836-8.765v-.12l-.059-.024zm-8.838 8.98l-.09-.04v-.183l8.837-8.766h.182v.184l-8.837 8.766-.092.038z\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M49.7450657 105.66327L49.7050657 105.64827 49.7060657 105.57427 54.2770657 101.31827 54.3550657 101.31927 54.3550657 101.39327 49.7840657 105.64827 49.7450657 105.66327\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M49.7450657 105.72027L49.6660657 105.68927 49.6330657 105.60927 49.6680657 105.53327 54.2390657 101.27727 54.3940657 101.27827 54.4280657 101.35627 54.3940657 101.43527 49.8220657 105.68927 49.7450657 105.72027\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M46.8840657 102.16827L46.8270657 102.14627 46.8280657 102.03627 53.4740657 95.6952696 53.5870657 95.6952696 53.5870657 95.8052696 46.9410657 102.14627 46.8840657 102.16827\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M53.53 95.73l-.018.006-6.645 6.341-.007.014.006.014h.036l6.646-6.34.006-.015-.006-.014-.018-.007zm-6.646 6.495l-.097-.04-.04-.094.042-.096 6.646-6.34h.192l.04.096-.04.095-6.648 6.342-.095.037z\"\n            ></path>\n            <path\n              fill=\"#B1D665\"\n              d=\"M30.465 113.09c-9.276.391-18.39.492-22.018-2.238-3.627-2.729-4.197-9.397-.09-11.33C3.897 97.523-.127 93.396.003 88.51c.131-4.886 6.338-9.052 10.202-6.059-1.979-5.678-3.809-12.474-.197-17.28 3.572-4.752 10.504-4.945 16.442-4.695-2.733-6.469-.565-14.656 5.011-18.923 5.577-4.268 14.046-4.222 19.575.106 1.615-4.405 8.098-5.152 11.92-2.43 3.822 2.72 5.498 7.518 6.59 12.081 4.59 19.178 2.746 39.238.876 58.87l-39.957 2.91\"\n            ></path>\n            <path\n              fill=\"#B1D665\"\n              d=\"M134.366 112.902c4.852 0 8.063-.322 10.963-2.716 1.233-1.019 2.61-2.033 3.041-3.529.432-1.496-.275-3.366-1.833-3.833.947-.335 1.312-1.423 1.391-2.379.181-2.178-.577-4.516-2.379-5.877-1.8-1.36-4.707-1.424-6.28.17 1.031-1.213.452-3.143-.798-4.154-1.249-1.01-2.945-1.333-4.564-1.592-1.009-.16-2.03-.312-3.05-.236-1.36.1-2.66.601-3.819 1.281-2.844 1.666-4.923 4.467-5.62 7.57-.699 3.101-.005 6.463 1.874 9.087 1.206 1.684 3.35 3.163 5.37 2.478l5.704 3.73\"\n            ></path>\n            <path\n              fill=\"#E5E6E8\"\n              d=\"M134.128066 113.09027L41.7010657 113.09027 41.7010657 10.0322696 134.128066 16.7542696 134.128066 113.09027\"\n            ></path>\n            <g transform=\"translate(48.667 27.293)\">\n              <mask id=\"b\" fill=\"#fff\">\n                <use xlinkHref=\"#a\"></use>\n              </mask>\n              <path\n                fill=\"#D7D9DA\"\n                d=\"M0.495 85.797L85.461 85.797 85.461 0.384 0.495 0.384z\"\n                mask=\"url(#b)\"\n              ></path>\n            </g>\n            <path\n              fill=\"#E7E6DB\"\n              d=\"M90.3590657 13.5712696L41.7010657 10.0322696 41.7010657 8.46826958 90.3590657 13.5712696\"\n            ></path>\n            <path\n              fill=\"#D6D8DD\"\n              d=\"M134.128066 26.1622696L41.7010657 14.4842696 41.7010657 10.0322696 90.3590657 13.5712696 134.128066 18.1612696 134.128066 26.1622696\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M129.52 21.763L130.084.77a.75.75 0 10-1.499-.04l-.565 20.993a.75.75 0 001.5.04\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M126.186 12.255l6.79-1.288a.75.75 0 10-.28-1.473l-6.79 1.288a.75.75 0 10.28 1.473\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M125.891 6.63l9.105.065a.75.75 0 10.01-1.5l-9.104-.066a.75.75 0 10-.01 1.5\"\n            ></path>\n            <path\n              fill=\"#5CA09F\"\n              d=\"M101.557066 49.7342696L114.561066 49.7342696 114.561066 32.1982696 101.557066 32.1982696z\"\n            ></path>\n            <path\n              fill=\"#A9B0BE\"\n              d=\"M115.738 51.531H100.38a.898.898 0 110-1.797h15.36a.899.899 0 010 1.797\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M115.738 51.338H100.38a.898.898 0 010-1.797h15.36a.898.898 0 110 1.797\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M105.267066 41.9632696L105.202066 41.9362696 105.204066 41.8092696 107.363066 39.7092696 107.491066 39.7112696 107.489066 39.8392696 105.330066 41.9382696 105.267066 41.9632696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M106.615066 44.2422696L106.550066 44.2152696 106.552066 44.0882696 108.711066 41.9882696 108.839066 41.9902696 108.837066 42.1172696 106.678066 44.2172696 106.615066 44.2422696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M108.776066 35.7982696L108.711066 35.7712696 108.713066 35.6442696 110.872066 33.5442696 111.000066 33.5462696 110.998066 33.6732696 108.838066 35.7722696 108.776066 35.7982696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M104.276066 44.1032696L104.209066 44.0722696 104.216066 43.9452696 111.054066 37.8272696 111.181066 37.8342696 111.173066 37.9612696 104.335066 44.0792696 104.276066 44.1032696\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M107.695066 50.2812696L108.423066 50.2812696 108.423066 32.1982696 107.695066 32.1982696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M101.557066 38.7692696L114.561066 38.7692696 114.561066 38.0402696 101.557066 38.0402696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M101.557066 45.8012696L114.561066 45.8012696 114.561066 45.0722696 101.557066 45.0722696z\"\n            ></path>\n            <path\n              fill=\"#5CA09F\"\n              d=\"M61.2690657 49.7342696L74.2720657 49.7342696 74.2720657 32.1982696 61.2690657 32.1982696z\"\n            ></path>\n            <path\n              fill=\"#A9B0BE\"\n              d=\"M75.45 51.531h-2.558l-.193-.193h2.751a.898.898 0 00.893-.802.898.898 0 01-.893.995\"\n            ></path>\n            <path\n              fill=\"#9FA6B2\"\n              d=\"M72.8920657 51.5312696L67.9760657 51.5312696 67.8060657 51.3382696 72.6990657 51.3382696 72.8920657 51.5312696\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M75.45 51.338H60.091a.898.898 0 010-1.797h15.36a.898.898 0 110 1.797\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M64.9780657 41.9632696L64.9140657 41.9362696 64.9160657 41.8092696 67.0750657 39.7092696 67.2020657 39.7112696 67.2010657 39.8392696 65.0410657 41.9382696 64.9780657 41.9632696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M66.3270657 44.2422696L66.2620657 44.2152696 66.2640657 44.0882696 68.4230657 41.9882696 68.5500657 41.9902696 68.5490657 42.1172696 66.3890657 44.2172696 66.3270657 44.2422696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M68.4870657 35.7982696L68.4230657 35.7712696 68.4250657 35.6442696 70.5840657 33.5442696 70.7110657 33.5462696 70.7100657 33.6732696 68.5500657 35.7722696 68.4870657 35.7982696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M63.9870657 44.1032696L63.9200657 44.0722696 63.9270657 43.9452696 70.7650657 37.8272696 70.8920657 37.8342696 70.8850657 37.9612696 64.0470657 44.0792696 63.9870657 44.1032696\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M67.4060657 50.2812696L68.1350657 50.2812696 68.1350657 32.1982696 67.4060657 32.1982696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M61.2690657 38.7692696L74.2720657 38.7692696 74.2720657 38.0402696 61.2690657 38.0402696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M61.2690657 45.8012696L74.2720657 45.8012696 74.2720657 45.0722696 61.2690657 45.0722696z\"\n            ></path>\n            <path\n              fill=\"#5CA09F\"\n              d=\"M101.557066 89.1272696L114.561066 89.1272696 114.561066 71.5912696 101.557066 71.5912696z\"\n            ></path>\n            <path\n              fill=\"#A9B0BE\"\n              d=\"M115.738 90.923h-3.66l-1.787-1.796h5.447a.898.898 0 110 1.796\"\n            ></path>\n            <path\n              fill=\"#9FA6B2\"\n              d=\"M112.077 90.923H100.38a.898.898 0 110-1.796h9.912l1.786 1.796\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M115.738 90.73H100.38a.899.899 0 010-1.796h15.36a.898.898 0 110 1.796\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M105.267066 81.3562696L105.202066 81.3282696 105.204066 81.2012696 107.363066 79.1022696 107.491066 79.1042696 107.489066 79.2312696 105.330066 81.3302696 105.267066 81.3562696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M106.615066 83.6352696L106.550066 83.6072696 106.552066 83.4812696 108.711066 81.3812696 108.839066 81.3832696 108.837066 81.5102696 106.678066 83.6092696 106.615066 83.6352696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M108.776066 75.1902696L108.711066 75.1632696 108.713066 75.0352696 110.872066 72.9372696 111.000066 72.9392696 110.998066 73.0652696 108.838066 75.1652696 108.776066 75.1902696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M104.276066 83.4942696L104.209066 83.4652696 104.216066 83.3382696 111.054066 77.2202696 111.181066 77.2272696 111.173066 77.3542696 104.335066 83.4722696 104.276066 83.4942696\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M107.695066 89.6732696L108.423066 89.6732696 108.423066 71.5912696 107.695066 71.5912696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M101.557066 78.1602696L114.561066 78.1602696 114.561066 77.4322696 101.557066 77.4322696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M101.557066 85.1932696L114.561066 85.1932696 114.561066 84.4652696 101.557066 84.4652696z\"\n            ></path>\n            <path\n              fill=\"#5CA09F\"\n              d=\"M61.2690657 89.1272696L74.2720657 89.1272696 74.2720657 71.5912696 61.2690657 71.5912696z\"\n            ></path>\n            <path\n              fill=\"#9FA6B2\"\n              d=\"M75.45 90.923h-6.444v-.194h6.444a.898.898 0 00.893-.8.898.898 0 01-.893.994\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M75.45 90.73H60.091a.898.898 0 110-1.796h15.36a.898.898 0 110 1.795\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M64.9780657 81.3562696L64.9140657 81.3282696 64.9160657 81.2012696 67.0750657 79.1022696 67.2020657 79.1042696 67.2010657 79.2312696 65.0410657 81.3302696 64.9780657 81.3562696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M66.3270657 83.6352696L66.2620657 83.6072696 66.2640657 83.4812696 68.4230657 81.3812696 68.5500657 81.3832696 68.5490657 81.5102696 66.3890657 83.6092696 66.3270657 83.6352696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M68.4870657 75.1902696L68.4230657 75.1632696 68.4250657 75.0352696 70.5840657 72.9372696 70.7110657 72.9392696 70.7100657 73.0652696 68.5500657 75.1652696 68.4870657 75.1902696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M63.9870657 83.4942696L63.9200657 83.4652696 63.9270657 83.3382696 70.7650657 77.2202696 70.8920657 77.2272696 70.8850657 77.3542696 64.0470657 83.4722696 63.9870657 83.4942696\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M67.4060657 89.6732696L68.1350657 89.6732696 68.1350657 71.5912696 67.4060657 71.5912696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M61.2690657 78.1602696L74.2720657 78.1602696 74.2720657 77.4322696 61.2690657 77.4322696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M61.2690657 85.1932696L74.2720657 85.1932696 74.2720657 84.4652696 61.2690657 84.4652696z\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M36.2100657 4.84726958L36.2100657 11.7602696 139.620066 24.6262696 139.620066 16.5692696 36.2100657 4.84726958\"\n            ></path>\n            <path\n              fill=\"#F5F6F8\"\n              d=\"M69.0060657 113.09027L26.2460657 113.09027 26.2460657 50.5812696 47.6260657 29.4202696 69.0060657 53.5042696 69.0060657 113.09027\"\n            ></path>\n            <path\n              fill=\"#A5C960\"\n              d=\"M26.2460657 55.4242696L26.2040657 51.3082696 26.2460657 51.2652696 26.2460657 55.4242696\"\n            ></path>\n            <path\n              fill=\"#C9CCD0\"\n              d=\"M69.0060657 54.9082696L69.0060657 53.5042696 67.2550657 51.5312696 67.9760657 51.5312696 69.0070657 52.7032696 69.0060657 54.9082696\"\n            ></path>\n            <path\n              fill=\"#569698\"\n              d=\"M66.2260657 49.5412696L65.4880657 49.5412696 62.1680657 45.8012696 62.9360657 45.8012696 66.2260657 49.5412696\"\n            ></path>\n            <path\n              fill=\"#949CAA\"\n              d=\"M67.9760657 51.5312696L67.2550657 51.5312696 67.0830657 51.3382696 67.8060657 51.3382696 67.9760657 51.5312696\"\n            ></path>\n            <path\n              fill=\"#536385\"\n              d=\"M67.8060657 51.3382696L67.0830657 51.3382696 65.4880657 49.5412696 66.2260657 49.5412696 67.8060657 51.3382696\"\n            ></path>\n            <path\n              fill=\"#D6D8DD\"\n              d=\"M50.255 32.382l-2.414-2.72a1.458 1.458 0 011.323.479l.775.882.316 1.36\"\n            ></path>\n            <path\n              fill=\"#C9CCD0\"\n              d=\"M61.2690657 44.7892696L50.2550657 32.3822696 49.9390657 31.0232696 61.2690657 43.9052696 61.2690657 44.7892696\"\n            ></path>\n            <path\n              fill=\"#569698\"\n              d=\"M62.2960657 45.0722696L61.5210657 45.0722696 61.2690657 44.7892696 61.2690657 43.9052696 62.2960657 45.0722696\"\n            ></path>\n            <path\n              fill=\"#546485\"\n              d=\"M62.9360657 45.8012696L62.1680657 45.8012696 61.5210657 45.0722696 62.2960657 45.0722696 62.9360657 45.8012696\"\n            ></path>\n            <path\n              fill=\"#E5E7EC\"\n              d=\"M69.005 57.113L49.293 34.546a1.454 1.454 0 00-1.1-.499c-.373 0-.748.142-1.034.43L26.246 55.423v-4.159l20.777-21.183c.23-.234.518-.374.818-.42L61.27 44.79l.252.283.647.73 4.915 5.536.172.193 1.751 1.973v3.609\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M72.866 54.63L49.162 27.677a1.46 1.46 0 00-2.14-.058L20.49 54.67a1.407 1.407 0 00.01 1.978c.571.571 1.497.57 2.067 0l24.591-24.635a1.46 1.46 0 012.134.071L70.63 56.511c.504.576 1.376.72 1.995.27.708-.516.805-1.51.242-2.15\"\n            ></path>\n            <path\n              fill=\"#5CA09F\"\n              d=\"M50.947 45.878a3.576 3.576 0 11-7.153.001 3.576 3.576 0 017.153 0\"\n            ></path>\n            <path\n              fill=\"#E7E8EA\"\n              d=\"M58.9600657 87.0152696L65.6210657 87.0152696 65.6210657 83.5252696 58.9600657 83.5252696z\"\n            ></path>\n            <path\n              fill=\"#E7E8EA\"\n              d=\"M64.7870657 91.1032696L69.0060657 91.1032696 69.0060657 87.6132696 64.7870657 87.6132696z\"\n            ></path>\n            <path\n              fill=\"#E7E8EA\"\n              d=\"M26.2460657 103.54127L30.4650657 103.54127 30.4650657 100.05227 26.2460657 100.05227z\"\n            ></path>\n            <path\n              fill=\"#E7E8EA\"\n              d=\"M55.1090657 57.0742696L60.6140657 57.0742696 60.6140657 53.5862696 55.1090657 53.5862696z\"\n            ></path>\n            <path\n              fill=\"#5CA09F\"\n              d=\"M41.1250657 75.1492696L54.1280657 75.1492696 54.1280657 57.6122696 41.1250657 57.6122696z\"\n            ></path>\n            <path\n              fill=\"#B5BCCB\"\n              d=\"M55.306 76.945H39.947a.898.898 0 110-1.796h15.36a.898.898 0 110 1.796\"\n            ></path>\n            <path\n              fill=\"#59698B\"\n              d=\"M55.306 76.752H39.947a.898.898 0 110-1.796h15.36a.897.897 0 110 1.796\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M44.8340657 69.4642696L44.7690657 69.4372696 44.7710657 69.3092696 46.9310657 67.2102696 47.0580657 67.2122696 47.0560657 67.3392696 44.8970657 69.4382696 44.8340657 69.4642696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M46.1820657 71.7422696L46.1180657 71.7162696 46.1200657 71.5882696 48.2790657 69.4892696 48.4060657 69.4902696 48.4040657 69.6182696 46.2450657 71.7172696 46.1820657 71.7422696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M48.3430657 63.2982696L48.2780657 63.2712696 48.2800657 63.1442696 50.4390657 61.0442696 50.5670657 61.0462696 50.5650657 61.1732696 48.4060657 63.2722696 48.3430657 63.2982696\"\n            ></path>\n            <path\n              fill=\"#87CCC9\"\n              d=\"M43.8430657 71.6032696L43.7760657 71.5722696 43.7830657 71.4452696 50.6210657 65.3272696 50.7480657 65.3352696 50.7410657 65.4622696 43.9030657 71.5792696 43.8430657 71.6032696\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M47.2620657 75.6952696L47.9910657 75.6952696 47.9910657 57.6122696 47.2620657 57.6122696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M41.1250657 64.1832696L54.1280657 64.1832696 54.1280657 63.4542696 41.1250657 63.4542696z\"\n            ></path>\n            <path\n              fill=\"#5A6A8C\"\n              d=\"M41.1250657 71.2162696L54.1280657 71.2162696 54.1280657 70.4872696 41.1250657 70.4872696z\"\n            ></path>\n            <path\n              fill=\"#D5D7D8\"\n              d=\"M117.821066 59.3572696L124.482066 59.3572696 124.482066 55.8682696 117.821066 55.8682696z\"\n            ></path>\n            <path\n              fill=\"#D5D7D8\"\n              d=\"M129.441066 62.7642696L133.779066 62.7642696 133.779066 59.2742696 129.441066 59.2742696z\"\n            ></path>\n            <path\n              fill=\"#D5D7D8\"\n              d=\"M124.482066 54.8272696L131.143066 54.8272696 131.143066 51.3382696 124.482066 51.3382696z\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M43.4980657 99.5012696L43.3840657 99.4532696 43.3880657 99.2292696 47.1940657 95.5282696 47.4180657 95.5312696 47.4150657 95.7562696 43.6090657 99.4562696 43.4980657 99.5012696\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M49.9460657 100.81927L49.8320657 100.77127 49.8350657 100.54727 53.6420657 96.8462696 53.8660657 96.8502696 53.8630657 97.0732696 50.0560657 100.77427 49.9460657 100.81927\"\n            ></path>\n            <path\n              fill=\"#85674D\"\n              d=\"M47.626 87.015a7.682 7.682 0 017.682 7.681v18.394H39.945V94.696a7.681 7.681 0 017.681-7.68\"\n            ></path>\n            <path\n              fill=\"#A68B6D\"\n              d=\"M47.626 88.51a6.502 6.502 0 016.502 6.501v17.772a.307.307 0 01-.306.307H41.43a.307.307 0 01-.305-.307V95.011a6.501 6.501 0 016.501-6.502\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M42.2520657 107.27827L42.1740657 107.24627 42.1750657 107.09127 51.2170657 98.1212696 51.3720657 98.1222696 51.3720657 98.2772696 42.3290657 107.24627 42.2520657 107.27827\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M51.295 98.112l-.062.026-9.042 8.97v.121l.121.001 9.043-8.969.001-.123-.06-.026zm-9.043 9.19l-.094-.04.001-.188 9.042-8.968h.187v.187l-9.043 8.97-.093.04z\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M47.4480657 105.28027L47.4080657 105.26527 47.4080657 105.18927 52.0860657 100.83427 52.1660657 100.83527 52.1660657 100.91027 47.4880657 105.26527 47.4480657 105.28027\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M47.4480657 105.33827L47.3680657 105.30627 47.3340657 105.22627 47.3700657 105.14727 52.0470657 100.79227 52.2060657 100.79327 52.2400657 100.87327 52.2050657 100.95227 47.5270657 105.30727 47.4480657 105.33827\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M44.5210657 101.70427L44.4630657 101.68127 44.4630657 101.56827 51.2640657 95.0802696 51.3800657 95.0802696 51.3800657 95.1922696 44.5790657 101.68127 44.5210657 101.70427\"\n            ></path>\n            <path\n              fill=\"#C4AA90\"\n              d=\"M51.321 95.114l-.018.008-6.8 6.488-.006.015.005.014h.038l6.8-6.489.006-.014-.006-.014-.019-.008zm-6.8 6.648l-.099-.04-.04-.097.041-.099 6.801-6.488.196.001.041.098-.042.097-6.8 6.49-.098.038z\"\n            ></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}","import React from 'react'\n\nexport const ShoppingSvg: React.FC<{}> = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 500 500\"\n    >\n      <defs>\n        <path id=\"a\" d=\"M0.06 0L500 0 500 500 0.06 500z\"></path>\n      </defs>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g>\n          <g>\n            <mask id=\"b\" fill=\"#fff\">\n              <use xlinkHref=\"#a\"></use>\n            </mask>\n            <path\n              fill=\"#FFFFFE\"\n              d=\"M0.06 500L500 500 500 0 0.06 0z\"\n              mask=\"url(#b)\"\n            ></path>\n          </g>\n          <path\n            fill=\"#263657\"\n            d=\"M443 119L331.935 132.502 294 273 177 273 141.171 161.198 129.159 161.198 177 304 294 304 339 143 437 133z\"\n          ></path>\n          <path\n            fill=\"#008FC3\"\n            d=\"M294.165 315.707c-8.325 0-15.073-6.748-15.073-15.073s6.748-15.074 15.073-15.074c8.326 0 15.075 6.749 15.075 15.074s-6.749 15.073-15.075 15.073zm0-42.678c-15.245 0-27.604 12.359-27.604 27.605 0 15.245 12.359 27.604 27.604 27.604 15.246 0 27.606-12.359 27.606-27.604 0-15.246-12.36-27.605-27.606-27.605z\"\n          ></path>\n          <path\n            fill=\"#008FC3\"\n            d=\"M181.572 318.734c-7.924 0-14.347-6.423-14.347-14.346 0-7.924 6.423-14.347 14.347-14.347 7.923 0 14.345 6.423 14.345 14.347 0 7.923-6.422 14.346-14.345 14.346zm0-38.198c-13.173 0-23.852 10.679-23.852 23.852 0 13.172 10.679 23.85 23.852 23.85 13.172 0 23.85-10.678 23.85-23.85 0-13.173-10.678-23.852-23.85-23.852z\"\n          ></path>\n          <path\n            fill=\"#F0AA3E\"\n            d=\"M217.827 158.203c-1.02 0-2.013.113-2.972.318-.048-.155-.092-.31-.141-.463-.166-.523-.324-1.045-.526-1.554-.211-.528-.458-1.174-.912-1.544-.369-.3-.874-.194-1.034.274-.1.29-.113.611-.089.932-.471-.124-.977-.175-1.411-.232a14.622 14.622 0 00-2.726-.127c-1.563.088-3.063.533-4.115 1.751-.255.295-.491.61-.712.93-.166.241-.274.462-.116.734.319.55 1.326.75 1.891.829 1.482.205 3.062-.175 4.439-.71.755-.293 1.477-.665 2.117-1.165.27-.211.577-.472.839-.766.09.407.192.811.297 1.215l.131.517c-5.336 2.034-9.135 7.185-9.135 13.236 0 7.829 6.346 14.176 14.175 14.176 7.829 0 14.175-6.347 14.175-14.176 0-7.828-6.346-14.175-14.175-14.175\"\n          ></path>\n          <path\n            fill=\"#008FC3\"\n            d=\"M180.88 203.583s.317-4.079 1.772-4.583c0 0 8.008.549 10.919 2.579 2.91 2.028 6.596 3.344 11.907 4.209 5.31.863 6.946.984 10.526 2.647 3.579 1.664 10.185 2.544 10.185 2.544s-.657 3.975-1.644 5.381c0 0 .23 27.212-11.182 46.308l-1.815 5.33s-6.798-2.079-11.885-3.064c-5.088-.985-9.814-.723-14.084-3.166-4.27-2.444-6.862-2.477-10.877-3.325-4.014-.848-6.702-2.997-6.702-2.997l1.273-4.166s.916-32.176 11.607-47.697\"\n          ></path>\n          <path\n            fill=\"#DC5878\"\n            d=\"M270 191.756L271.266 250.988 300.122 252.761 312.273 194.034 309.235 180.112 310.5 174.037 280.631 171 279.872 177.581 270 191.756\"\n          ></path>\n          <path\n            fill=\"#008FC3\"\n            d=\"M234.66 152.719c-2.245 6.734 7.973 40.374 9.619 43.791 1.645 3.417 18.098 3.924 19.491 1.392 1.391-2.531-2.025-44.17-2.151-46.576-.127-2.404-7.215-3.544-8.734-4.176-1.518-.633-2.278-5.189-2.025-6.329.254-1.138 1.898-1.138 1.519-3.164-.38-2.025-3.418-2.404-7.341-1.518-3.923.886-4.936 2.151-4.809 3.544.126 1.391 1.645.759 2.025 1.771.379 1.013.886 5.696.506 6.708-.38 1.013-7.214 1.899-8.1 4.557\"\n          ></path>\n          <path\n            fill=\"#B3CE41\"\n            d=\"M287.514 149.079c-6.31-3.102-12.765-18.437-10.166-20.634 2.599-2.196 6.253-.092 6.253-.092s1.047-7.954 5.311-8.309c4.265-.354 6.704 3.879 6.785 4.424.081.545 3.566-6.936 8.326-5.831 4.759 1.103 5.527 6.281 5.527 6.281s5.534-6.809 8.221-3.727c2.685 3.083-.477 8.983-.477 8.983s4.835.675 5.961 3.571c1.127 2.897-4.817 6.008-4.817 6.008s4.537-.395 4.75 2.915c.213 3.311-19.007 14.605-35.674 6.411\"\n          ></path>\n          <path\n            fill=\"#F0AA3E\"\n            d=\"M278.112 159.558a114.252 114.252 0 00-1.451-3.329l-.101-.225a2.36 2.36 0 00.129-1.021c-.168-1.731-.57-3.471-.904-5.175a137.78 137.78 0 00-4.003-15.511c-.829-2.584-1.577-5.842-3.828-7.609a24.325 24.325 0 01-.137-2.243c-.009-.806.17-1.881-.373-2.572-.671-.853-1.508-.022-2.319-.002-1.026.027-1.876-.153-2.733.546-.372.304-.715.764-1.196.894-.624.168-1.264-.266-1.809-.504-.812-.357-1.941-.568-2.563.248-.637.836.21 1.687.766 2.281.91.971 1.802 1.807 2.386 3.025.195.408.324.835.436 1.269-.507 1.495-.476 3.106-.236 4.669.308 2.007.869 3.984 1.337 5.959 1.248 5.264 3.065 10.355 4.578 15.543.201.688.37 1.418.798 2.007.451.621 1.101.908 1.815 1.046.045.282.084.566.135.848.194 1.074.387 2.148.584 3.221.116.634.172 1.599 1.018 1.637.317.014.633-.118.885-.303.368-.27.653-.826 1.158-.827.686-.002 1.23.619 1.954.427.346-.092.545-.336.777-.589.261-.285.566-.456.919-.604.574-.238 1.247-.417 1.711-.853.629-.593.57-1.514.267-2.253\"\n          ></path>\n          <path\n            fill=\"#DC5878\"\n            d=\"M196.627 135.63c-6.273-2.916-13.362-2.842-20.034-1.743-3.374.556-6.76 1.37-9.898 2.789-1.037.469-2.04 1.048-3.022 1.671-.3.165-.609.311-.903.486-4.857 2.9-8.617 7.453-11.007 12.665-2.439 5.322-3.541 11.371-3.085 17.245.257 3.309 1.099 6.394 3.041 9.077 1.813 2.502 4.51 4.165 7.397 5.011 3.426 1.004 7.091.874 10.544.077 3.246-.749 6.31-2.19 8.838-4.442 2.554-2.274 4.52-5.192 6.569-7.933 2.222-2.973 4.394-5.999 6.687-8.915 1.002-1.274 2.083-2.554 3.384-3.514 1.265-.933 2.705-1.514 4.109-2.176 2.693-1.269 4.866-3.181 5.593-6.257 1.483-6.276-2.979-11.608-8.213-14.041\"\n          ></path>\n          <path\n            fill=\"#B3CE41\"\n            d=\"M248.763 122.135c-.492-4.046-3.762-6.865-7.429-8.176-4.054-1.45-8.757-1.136-12.464 1.109-3.575 2.164-5.745 5.719-6.394 9.808-.356 2.237-.375 4.506-.586 6.757-.177 1.901-.312 4.038-1.296 5.726a7.809 7.809 0 01-.691.994l-.063.074-.119.131a13.194 13.194 0 01-2.285 1.958c-1.561 1.042-3.533 1.389-4.996 2.561-1.314 1.052-1.722 2.869-.897 4.364.812 1.468 2.689 2.006 4.21 1.38.841-.345 1.45-1.496 2.365-1.545.917-.05 1.773.624 2.668.763 2.013.316 2.936-1.675 3.245-3.318.388-2.064 1.089-3.868 2.676-5.317 1.695-1.545 3.921-2.064 6.102-2.528 4.133-.879 8.153-1.808 11.492-4.566 2.93-2.42 4.931-6.315 4.462-10.175\"\n          ></path>\n          <path\n            fill=\"#B3CE41\"\n            d=\"M263.704 259.993c1.045-15.906-15.72-28.48-29.393-18.35-6.39 4.736-9.069 14.743-8.128 22.337.617 4.98 3.468 10.918 9.011 11.714 1.442.207 2.923-.077 3.95-1.18 1.018-1.093 1.405-2.676 1.75-4.087.692-2.841.92-5.85 2.18-8.52.291-.623.613-1.225 1.04-1.767.236-.302.794-1.107 1.267-.936.377.138.565.94.636 1.279.116.54.103 1.13.02 1.676-.363 2.41-1.487 4.652-1.796 7.074-.338 2.657.592 5.243 3.073 6.53 2.693 1.396 5.833.667 8.256-.93 4.886-3.216 7.756-9.101 8.134-14.84\"\n          ></path>\n        </g>\n      </g>\n    </svg>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Form, Radio } from 'antd'\nimport { OutsideSvg, InsideSvg, ShoppingSvg } from '../assets'\nimport { useTranslation } from 'react-i18next'\n\nconst { Item } = Form;\nexport const FilterTypes: React.FC<{}> = () => {\n  const { t, } = useTranslation()\n\n  return (\n    <>\n      <Container name=\"typeOfHelp\">\n        <Radio.Group style={{ width: '100%', display: 'flex' }} >\n          <CustomRadio value=\"outside\">\n            <Box>\n              <OutsideSvg />\n              <p>{t(\"filter.type.outside\")}</p>\n            </Box>\n          </CustomRadio>\n          <CustomRadio value=\"inside\">\n            <Box>\n              <InsideSvg />\n              <p>{t(\"filter.type.inside\")}</p>\n            </Box>\n          </CustomRadio>\n          <CustomRadio value=\"shopping\">\n            <Box>\n              <ShoppingSvg />\n              <p>{t(\"filter.type.shopping\")}</p>\n            </Box>\n          </CustomRadio>\n          <CustomRadio value=\"digital\">\n            <Box>\n              <InsideSvg />\n              <p>{t(\"filter.type.digital\")}</p>\n            </Box>\n          </CustomRadio>\n        </Radio.Group>\n      </Container>\n    </>\n  )\n}\n\nconst Container = styled(Item)`\nflex:2;\nwidth:100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\nwidth:100%;\npadding:10px;\nmargin:0;\n`\nconst CustomRadio = styled(Radio.Button)`\nheight: 100%; \nwidth: 100%; \npadding: 0;\nborder-left:none;\n&::before{\n  background-color:transparent !important;\n}\n`\nconst Box = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\nmargin:10px;\nborder-radius:2px;\nflex-basis:45%;\n&  svg  {\n  width:50px;\n  height:50px;\n  background:#F8F8F8;\n  border-radius:50%;\n};\n& p {\n  font-size:15px;\n}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { Form, Select } from 'antd'\nimport { useTranslation } from 'react-i18next'\n\nconst { Item } = Form\nexport const FilterLanguage: React.FC<{}> = () => {\n  const { t, } = useTranslation()\n\n  return (\n    <>\n      <Container name=\"language\" style={{ margin: 0 }}>\n        <Select defaultValue=\"swedish\" >\n          <Select.Option value=\"swedish\">{t(\"filter.swedish.language\")}</Select.Option>\n          <Select.Option value=\"arabic\">{t(\"filter.arabic.language\")}</Select.Option>\n          <Select.Option value=\"english\">{t(\"filter.english.language\")}</Select.Option>\n          <Select.Option value=\"somali\">{t(\"filter.somali.language\")}</Select.Option>\n        </Select>\n      </Container >\n    </>\n  )\n}\n\nconst Container = styled(Item)`\nflex:1;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\npadding:10px;\nwidth:100%;\npadding:10px;\n`\n","import React, { useState } from 'react'\nimport { Select, Form } from 'antd'\nimport { displayErrorMessage } from '../../../../../../lib/utils';\nimport styled from 'styled-components'\nimport { useMutation } from '@apollo/react-hooks'\nimport { AUTO_COMPLETE_CITY, GENERATE_GEOLOCATION } from '../../../../../../lib/graphql/mutations'\nimport { autoCompleteAddress, autoCompleteAddressVariables } from '../../../../../../lib/graphql/mutations/AutoCompleteAddress/__generated__/autoCompleteAddress'\n\ninterface setAddressToGroLocationProps {\n  lng: number\n  lat: number\n}\ninterface Props {\n  setAddressToGroLocation: (values: setAddressToGroLocationProps) => void\n}\n\nconst { Option } = Select;\nexport const FilterCity: React.FC<Props> = ({ setAddressToGroLocation }) => {\n  const [searchValue, setSearchValue] = useState<string>('')\n  const [addresses, setAddresses] = useState<string[]>([])\n  const [autoComplete] = useMutation<autoCompleteAddress, autoCompleteAddressVariables>(\n    AUTO_COMPLETE_CITY, {\n    onCompleted: data => {\n      if (data && data.autoCompleteAddress) {\n        setAddresses(data.autoCompleteAddress)\n      }\n    },\n    onError: error => displayErrorMessage(`there is no such place`)\n  }\n  )\n  const [generateGeoLocation] = useMutation(GENERATE_GEOLOCATION, {\n    onCompleted: (data) => {\n      if (data && data.generateGeoAddress && data.generateGeoAddress.geoLocation) {\n        setAddressToGroLocation({ ...data.generateGeoAddress.geoLocation })\n      }\n    },\n    onError: error => console.log(error)\n  })\n\n  const handleChange = (value: any) => {\n    console.log(value)\n    generateGeoLocation({\n      variables: {\n        userAddress: value\n      }\n    })\n    setSearchValue(value)\n\n  }\n  const handleSearch = (value: string) => {\n    if (value.length > 4) {\n      autoComplete({\n        variables: {\n          cityName: value\n        }\n      })\n    }\n  }\n\n  const options = addresses.length > 0 ? addresses.map((a, i) => <Option key={i} value={a}>{a}</Option>) : null\n  return (\n    <Container name=\"address\">\n      <Select\n        showSearch\n        value={searchValue}\n        placeholder='city'\n        defaultActiveFirstOption={false}\n        showArrow={false}\n        filterOption={false}\n        onChange={handleChange}\n        onSearch={handleSearch}\n        notFoundContent={null}\n      >\n        {options}\n      </Select>\n    </Container>\n  )\n}\nconst Container = styled(Form.Item)`\nflex:2;\ndisplay:flex;\nflex-basis:300px;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\nwidth:100%;\npadding:10px;\nmargin:0;\n`\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Form, Divider, Button } from 'antd'\nimport { FilterTypes, FilterLanguage, FilterCity } from './components'\nimport { useTranslation } from 'react-i18next'\n\ninterface filterValuesTypes {\n  language: string,\n  typeOfHelp: string\n  address: string\n}\ninterface setAddressToGroLocationProps {\n  lng: number\n  lat: number\n}\ninterface Props {\n  setFilterValues: (filters: filterValuesTypes) => void\n  filters: filterValuesTypes\n  setAddressToGroLocation: (data: setAddressToGroLocationProps) => void\n}\nconst { Title, Text } = Typography\nexport const Filter: React.FC<Props> = ({ setFilterValues, filters, setAddressToGroLocation }) => {\n  const { t, } = useTranslation()\n\n  const onFinish = (c: any) => {\n    setFilterValues({ ...c })\n  }\n  return (\n    <Container name=\"search\" onFinish={onFinish} className=\"filter__container\" initialValues={filters}>\n      <Title style={{ width: '100%', textAlign: 'center' }} level={4}> {t(\"filter.title\")} </Title>\n      <Text style={{ width: '100%', textAlign: 'center' }} > {t(\"filter.help.text\")} </Text>\n      <FilterTypes />\n      <FilterLanguage />\n      <FilterCity setAddressToGroLocation={setAddressToGroLocation} />\n      <Button htmlType=\"submit\" type=\"primary\">{t('filter.search')}</Button>\n    </Container >\n  )\n}\nconst Container = styled(Form)`\nflex:1;\ndisplay:flex;\njustify-content:space-around;\nalign-items:center;\nheight:100%;\nwidth:100%;\nflex-wrap:wrap;\npadding:0px 15px;\nmargin-bottom:10px;\n`","import { gql } from 'apollo-boost'\nexport const AUTH_URL = gql`\nquery AuthUrl {\n  authUrl\n}\n` ","import { gql } from 'apollo-boost'\n\nexport const USER = gql`\nquery User($id:ID!,$helpRequestsPage:Int!,$limit:Int!){\n   user(id:$id){\n     id\n    name\n    avatar\n    contact\n    address\n    salt\n    verifiedAccount\n    memberAtt {\n      avatar\n      id\n    }\n    adminAtt {\n      name\n      id\n    }\n    geoLocation {\n      lat \n      lng\n    }\n    helpRequests(limit:$limit,page:$helpRequestsPage) {\n      total\n      result { \n        title\n        description\n      }\n    }\n  }\n}\n`","import { gql } from 'apollo-boost'\n\nexport const MAP_DATA = gql`\nquery getCurrentMapData($maxLng:Float!,$minLng:Float!,$maxLat:Float!,$minLat:Float!,$page:Int!,$limit:Int!,$language:String,$typeOfHelp:String){\n   getCurrentMapData(maxLng:$maxLng,minLng:$minLng,maxLat:$maxLat,minLat:$minLat,page:$page,limit:$limit,language:$language,typeOfHelp:$typeOfHelp){\n      total\n      helpRequests{\n       total\n       result {\n          title\n          description\n          id\n          by\n          language\n        }\n      }\n      result { \n        name\n        avatar\n        id\n        geoLocation{\n          lat \n           lng\n        }\n        \n      }\n  }\n}\n`","import { gql } from 'apollo-boost'\n\nexport const GROUP = gql`\nquery group($id:ID!){\n   group(id:$id){\n     id\n     name\n     description\n     by\n     address\n     avatar\n     creatorId\n     groupMembers {\n       id\n       avatar\n       name\n     } \n     joinRequests {\n       id\n       avatar\n       contact\n       name\n     }\n  }\n}\n`","import React from 'react'\nimport { Modal, Select } from 'antd'\nimport { getCurrentMapData_getCurrentMapData_helpRequests_result as HelpRequestTypes } from '../../../../../../../../lib/graphql/queries/MapData/__generated__/getCurrentMapData'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n  modalData: HelpRequestTypes | null\n}\nconst { Option } = Select\nexport const HelpModal: React.FC<Props> = ({ visible, setVisible, modalData }) => {\n  const { t, } = useTranslation()\n  const handleOk = () => {\n    setVisible(false)\n  };\n\n  const handleCancel = () => {\n    setVisible(false)\n  };\n\n  return (\n    <div>\n      <Modal\n        title={modalData && modalData.title}\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        centered={false}\n      >\n        <p>{t(\"modal.description\")} : {modalData && modalData.description}</p>\n        <p>{t(\"modal.language\")} : {modalData && modalData.language}</p>\n        {t(\"modal.select\")}\n        <div>\n          <Select style={{ width: '100%' }}>\n            <Option value=\"jack\">Jack</Option>\n            <Option value=\"lucy\">Lucy</Option>\n          </Select>\n        </div>\n      </Modal>\n    </div>\n  )\n}","import React, { useState, ElementType } from 'react'\nimport styled from 'styled-components'\nimport { List } from 'antd'\nimport { MessageOutlined } from '@ant-design/icons';\n\nimport { HelpModal } from './components'\nimport { getCurrentMapData_getCurrentMapData_helpRequests_result as HelpRequestTypes, getCurrentMapData_getCurrentMapData_helpRequests as helpRequestsTypes } from '../../../../../../lib/graphql/queries/MapData/__generated__/getCurrentMapData'\nimport { Viewer } from '../../../../../../lib/types';\n\ninterface IconTextProps {\n  icon: ElementType\n  text: string\n  onClick?: () => void\n}\nconst IconText: React.FC<IconTextProps> = ({ icon, text, onClick }) => (\n  <span onClick={onClick}>\n    {React.createElement(icon, { style: { marginRight: 8 } })}\n    {text}\n  </span>\n);\n\ninterface Props {\n  helpRequests: helpRequestsTypes | null\n  page: number\n  limit: number\n  setPage: (page: number) => void\n  simplePagination: boolean\n  viewer: Viewer\n}\nexport const MapDataList: React.FC<Props> = ({ page, limit, setPage, helpRequests, simplePagination, viewer }) => {\n  const [visible, setVisible] = useState<boolean>(false)\n  const [modalData, setModalData] = useState<HelpRequestTypes | null>(null)\n  const handleOpenModal = (data: HelpRequestTypes) => {\n    setModalData(data)\n    setVisible(true)\n  }\n  const result = helpRequests ? helpRequests.result : null\n  const total = helpRequests ? helpRequests.total : 0\n  const userHelpRequestsList = helpRequests ? (\n    <List\n      itemLayout=\"vertical\"\n      dataSource={result || undefined}\n      locale={{\n        emptyText: <div style={{ color: 'black', background: \"white\" }}>there is no help requests in this area with those filters</div>\n      }}\n      pagination={{\n        size: 'small',\n        position: \"top\",\n        current: page,\n        defaultPageSize: limit,\n        hideOnSinglePage: true,\n        showLessItems: true,\n        total: total || undefined,\n        simple: simplePagination,\n        onChange: (page: number) => setPage(page)\n      }}\n      renderItem={(helpRequest: any) => {\n        return (\n          <List.Item\n            key={helpRequest.title}\n            style={{ background: '#fff', margin: '5px 0px', padding: '3px 5px', minWidth: 200 }}\n            onClick={() => viewer.adminAtt && handleOpenModal(helpRequest)}\n          >\n            <List.Item.Meta\n              title={helpRequest.title}\n              description={helpRequest.description}\n            />\n          </List.Item>\n        )\n      }}\n    />\n  ) : null\n  const userBookingsElement = userHelpRequestsList ? (\n    <div className=\"user-listings\">\n      {userHelpRequestsList}\n    </div>\n  ) : null;\n  return (\n    <Container>\n      {userBookingsElement}\n      <HelpModal visible={visible} setVisible={setVisible} modalData={modalData} />\n    </Container>\n  );\n\n}\nconst Container = styled.div`\nwidth:100%;\npadding:20px;\n`","import React, { useState, ElementType } from 'react'\nimport styled from 'styled-components'\nimport { Layout, Card, Avatar } from 'antd'\nimport { UserAddOutlined, LikeOutlined, StarOutlined, TeamOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next'\nimport { iconColor } from '../../../../../../lib/utils'\nimport GoogleMapReact, { ChangeEventValue } from 'google-map-react';\nimport { MapDataList } from '../MapDataList'\nimport { getCurrentMapData_getCurrentMapData_result } from '../../../../../../lib/graphql/queries/MapData/__generated__/getCurrentMapData';\nimport { useHistory } from 'react-router-dom';\nimport { Viewer } from '../../../../../../lib/types';\nconst { Meta } = Card;\nconst { Content } = Layout\ninterface IconTextProps {\n  icon: ElementType\n  text: string\n  onClick?: () => void\n}\nconst IconText: React.FC<IconTextProps> = ({ icon, text, onClick }) => (\n  <span onClick={onClick}>\n    {React.createElement(icon, { style: { marginRight: 8 } })}\n    {text}\n  </span>\n);\nconst Mark = ({ id, visible, zoom, text, avatar }:\n  { text: string, lat: number | null, lng: number | null, id: string, visible: string, zoom: number, avatar: string | null }) => {\n  const history = useHistory()\n  const { t, } = useTranslation()\n  return (\n    <MarkBody theme={{ zoom }}>\n      <Dot />\n      {visible === id && <CustomCard\n        loading={false}\n        actions={[\n          <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n          <IconText icon={TeamOutlined} text=\"300\" key=\"list-vertical-like-o\" />,\n          <IconText icon={UserAddOutlined} text={t(\"map.mark.join\")} key=\"list-vertical-like-o\" onClick={() => { history.push(`/group/${id}`) }} />,\n        ]}\n      >\n        <Meta\n          avatar={\n            avatar && <Avatar src={avatar} />\n          }\n          title={text}\n          description=\"This is the description\"\n        />\n      </CustomCard>}\n    </MarkBody>\n  )\n}\ninterface addressToGeoLocationProps {\n  lat: number\n  lng: number\n}\ninterface MapProps {\n  addressToGeoLocation: addressToGeoLocationProps\n  users: getCurrentMapData_getCurrentMapData_result[]\n  setCurrentData: (\n    { maxLng, minLng, maxLat, minLat }: {\n      maxLng: number,\n      minLng: number,\n      maxLat: number,\n      minLat: number\n    }\n  ) => void\n  helpRequests: any\n  page: number\n  limit: number\n  setPage: (page: number) => void\n  viewer: Viewer\n}\nexport const GoogleMap: React.FC<MapProps> = ({\n  setCurrentData, users, helpRequests, page, limit, setPage, addressToGeoLocation, viewer\n}) => {\n  const [visible, setVisible] = useState<string>('0')\n  const [zoom, setZoom] = useState<number>(12)\n  const handleChange = (event: ChangeEventValue) => {\n    const { bounds } = event\n    const boundsData = {\n      maxLat: 0,\n      minLat: 0,\n      maxLng: 0,\n      minLng: 0\n    }\n    boundsData.maxLat = bounds.nw.lat\n    boundsData.minLat = bounds.se.lat\n    boundsData.maxLng = bounds.se.lng\n    boundsData.minLng = bounds.nw.lng\n    setCurrentData({ ...boundsData })\n\n  }\n  return (\n    <Container>\n      <div style={{ height: \"100%\", width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: 'AIzaSyDuIb87xybM6TxGhi0PZBUlb7mG4-PEU8A',\n          }}\n          defaultCenter={{\n            lat: 1,\n            lng: 1\n          }}\n          center={{\n            lat: addressToGeoLocation.lat,\n            lng: addressToGeoLocation.lng,\n          }}\n          debounced={true}\n          onChange={handleChange}\n          defaultZoom={10}\n          onChildClick={e => setVisible(e)}\n          onClick={e => setVisible('')}\n          onZoomAnimationStart={(e) => setZoom(e)}\n          onZoomAnimationEnd={(e) => setZoom(e)}\n          options={{\n            backgroundColor: 'white'\n          }}\n          onTilesLoaded={() => console.log(1)}\n        >\n          {\n            users.map(({ id, geoLocation, name, avatar }, index) => geoLocation ?\n              <Mark\n                lat={geoLocation.lat}\n                lng={geoLocation.lng}\n                text={name}\n                id={id}\n                visible={visible}\n                zoom={zoom}\n                key={id}\n                avatar={avatar} />\n              : null)\n          }\n        </GoogleMapReact>\n        <MapLeftList>\n          <MapDataList page={page} setPage={setPage} helpRequests={helpRequests} limit={limit} simplePagination={true} viewer={viewer} />\n        </MapLeftList>\n      </div>\n    </Container >\n  )\n}\nconst Container = styled(Content)`\ndisplay:flex;\njustify-content:center;\nalign-items:center;\nmin-height:400px;\nwidth:100%;\nheight:100%;\nposition:relative;\n`\nconst MapLeftList = styled.div`\nposition:absolute;\nheight:100%;\nleft:0;\nbottom:0px;\nbackground:#ffffff30;\n& .user-listings .ant-list-pagination{\n  padding-bottom: 15px;\n  margin-top:0px;\n};\n& .ant-list-item {\n  padding:4px 0;\n};\n& .ant-list-split .ant-list-item{\n  border-bottom:none;\n}\n& .ant-list-something-after-last-item .ant-spin-container > .ant-list-items > .ant-list-item:last-child{\n  border-bottom:none;\n}\n @media (max-width: 600px) {\n        display:none;\n    }\n`\nconst MarkBody = styled.div`\nwidth:${({ theme: { zoom } }) => `${zoom * .8}px`};\nheight:${({ theme: { zoom } }) => `${zoom * .8}px`};;\nbackground-color:${iconColor};\nposition: relative;\nborder-radius:50%;\n`\nconst Dot = styled.div`\nwidth:300%;\nheight:300%;\nborder-radius:50%;\nbackground-color:${iconColor};\nopacity:.4;\ntransform:translate(-32%,-32%);\n`\nconst CustomCard = styled(Card)`\n width: 300px;\n margin-top: 16px;\n position: absolute;\n top: 5; \n &::after {\n   content:' ';\n   position:absolute;\n   top:-20px;\n   width:0px;\n   height:0px;\n   border-bottom: 20px solid white;\n   border-right: 20px solid transparent;\n }\n`","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { MAP_DATA } from '../../../../lib/graphql/queries'\nimport { getCurrentMapData as MapCurrentData, getCurrentMapDataVariables } from '../../../../lib/graphql/queries/MapData/__generated__/getCurrentMapData'\nimport styled from 'styled-components'\nimport { GoogleMap, MapDataList } from './components'\nimport { displayErrorMessage } from '../../../../lib/utils'\nimport { Typography } from 'antd'\nimport { Viewer } from '../../../../lib/types'\nimport { useTranslation } from 'react-i18next'\nconst PAGE_LIMIT = 4;\ninterface addressToGeoLocationProps {\n  lat: number\n  lng: number\n}\ninterface Props {\n  addressToGeoLocation: addressToGeoLocationProps\n  language: string\n  typeOfHelp: string\n  viewer: Viewer\n}\nconst { Title, Paragraph } = Typography;\nexport const Map: React.FC<Props> = ({ addressToGeoLocation, language, typeOfHelp, viewer }) => {\n  const { t, } = useTranslation()\n  const [currentData, setCurrentData] = useState({\n    maxLng: 12.718080963134753,\n    minLng: 12.672419036865222,\n    maxLat: 56.05526818095288,\n    minLat: 56.0384899947872\n  })\n  const [page, setPage] = useState<number>(1)\n  const { data, error } = useQuery<MapCurrentData, getCurrentMapDataVariables>(MAP_DATA, {\n    onError: () => displayErrorMessage(\"we can't get any data from map, please try agin later\"),\n    variables: {\n      ...currentData,\n      language,\n      typeOfHelp,\n      page,\n      limit: PAGE_LIMIT\n    },\n    fetchPolicy: 'network-only'\n  })\n  if (error) {\n    displayErrorMessage('something went wrong, try agin later')\n    return null;\n  }\n  const users = data ? data.getCurrentMapData.result : [];\n  const helpRequests = data ? data.getCurrentMapData.helpRequests : null\n  const count = users.length > 0 ? users.length : 0;\n  const helpRequestsTotal = helpRequests ? helpRequests.total : 0\n  return (\n    <Container>\n      <Title style={{ textAlign: 'center' }} level={4}>\n        {t('home.map.count')}\n        {count}\n        {t('home.map.count_2')}\n        {helpRequestsTotal}\n        {t('home.map.count_3')}\n      </Title>\n      <Paragraph style={{ textAlign: 'center' }}> {t('home.map.join')} </Paragraph>\n      <GoogleMap\n        setCurrentData={setCurrentData}\n        addressToGeoLocation={addressToGeoLocation}\n        users={users}\n        page={page}\n        setPage={setPage}\n        helpRequests={helpRequests}\n        limit={PAGE_LIMIT}\n        viewer={viewer}\n      />\n      <HideElement>\n        <MapDataList page={page} setPage={setPage} helpRequests={helpRequests} limit={PAGE_LIMIT} simplePagination={false} viewer={viewer} />\n      </HideElement>\n    </Container>\n  )\n}\nconst Container = styled.div`\nheight:500px;\nwidth:100%;\nposition:relative\n`\nconst HideElement = styled.div`\n @media (min-width: 600px) {\n        display:none;\n    }\n`\n\n\n","import React from \"react\";\n\nexport const Person = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 254 310\"\n    >\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g transform=\"translate(-23 -162)\">\n          <g transform=\"translate(23.35 162.317)\">\n            <path\n              fill=\"#2C1B34\"\n              d=\"M241.901 247.244c-11.232 22.289-27.91 37.624-47.12 47.43-.228.114-.465.238-.693.352a115.755 115.755 0 01-7.708 3.524c-16.606 6.892-34.689 10.033-52.525 10.25h-.806a167.14 167.14 0 01-16.906-.744 124.97 124.97 0 01-2.014-.196 170.203 170.203 0 01-20.698-3.503c-.693-.166-1.375-.331-2.046-.496-.848-.217-1.685-.435-2.5-.651a87.53 87.53 0 01-2.367-.641 144.32 144.32 0 01-4.599-1.385 96.968 96.968 0 01-1.643-.516c-.289-.093-.578-.186-.868-.29a117.729 117.729 0 01-5.662-2.025 135.084 135.084 0 01-6.707-2.75c-34.089-15.023-53.444-40.815-34.172-66.05 48.98-64.12 2.842-77.47.826-135.44C32.62 63.33 49.98 44.256 70.523 35.483c16.481-7.016 38.831-7.14 59.312.279 24.046 8.7 57.195 26.66 67.126 61.205 16.161 56.162 81.8 77.19 44.94 150.278\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M35.784 127.096c-3.392-6.246-12.899-2.903-11.702 4.103.988 5.787 3.49 12.037 9.585 13.38 7.116 1.568 6.396-9.602 2.117-17.483\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M205.596 101.156c5.898 11.246 22.968 5.52 21.011-7.025-1.617-10.364-5.923-21.593-16.777-24.15-12.67-2.985-11.673 16.987-4.234 31.175\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M247.587 157.792c-.419 22.118-2.397 36.97-6.567 46.708-2.676 6.244-6.255 10.37-10.908 12.96-3.084 1.71-6.405 2.558-9.78 2.558-2.128 0-4.266-.333-6.362-1-2.569-.816-5.094-2.116-7.47-3.9-5.556-4.17-10.897-9.942-15.99-17.272-3.054-4.406-6.02-9.371-8.878-14.874a189.243 189.243 0 01-5.46-11.434c-6.35-14.434-9.898-26.74-10.049-27.255l15.39-4.546 15.25-6.416c.033.118 3.321 12.864 8.824 25.31 1.741 3.933 3.428 7.393 5.04 10.424a113.633 113.633 0 003.955 6.835c.011-.161.022-.333.043-.494.527-5.74.925-13.36.978-23.407.065-10.866-.3-21.011-.59-27.233-.205-4.342 2.213-8.394 6.136-10.135 5.76-2.547 11.865-3.064 18.356-1.226 4.288 1.204 7.297 5.116 7.512 9.619.366 7.685.828 20.957.57 34.778\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M241.02 204.5c-2.676 6.244-6.255 10.37-10.908 12.96-3.084 1.71-6.405 2.558-9.78 2.558-2.128 0-4.266-.333-6.362-1 4.922-7.576 13.305-17.453 23.052-16.11 1.645.226 2.966.785 3.998 1.592\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M190.513 197.845c-3.057-4.4-6.02-9.364-8.886-14.877 3.515-19.093 13.711-46.306 13.903-46.82-7.084 47.57-5.833 51.766-5.017 61.697\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M214.636 175.894s-1.54 10.017-4.005 19.407v-26.25a110.468 110.468 0 003.947 6.84c.015-.166.031-.331.05-.501.006.166.008.335.008.504\"\n            ></path>\n            <path\n              fill=\"#EC9989\"\n              d=\"M245.442 104s2.675 16.914-8.325 19.028a49.637 49.637 0 01-6.005.782c-7.046.452-10.644-1.085-10.644-1.085s-9.514-6.946-9.81-12.986c-.245-4.968 4.135-7.278 5.7-7.945.338-.143.543-.21.543-.21s-.253-.528-.57-1.412c-1.226-3.404.575-13.724 3.236-14.737 4.93-1.878 24.685 1.049 25.875 7.995a39.191 39.191 0 01.42 3.287c.394 4.798-.42 7.284-.42 7.284\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M227.707 111.07a2.412 2.412 0 01-.196.297c-.71.92-2.119 1.377-3.877 1.377-1.979 0-4.4-.58-6.754-1.718a.763.763 0 01-.354-1.006.738.738 0 01.99-.36c3.928 1.9 7.9 1.975 8.826.773.56-.717-.26-1.96-.802-2.633-1.95-2.437-4.968-4.167-7.379-5.257l-.136-.061-.203-.088-.21-.094a32.88 32.88 0 00-1.255-.506c.34-.143.544-.21.544-.21s-.253-.528-.57-1.412c.695.247 1.565.586 2.526 1.026l.05.02c.467.216.955.452 1.448.71.636.33 1.291.702 1.94 1.116a20.379 20.379 0 012.632 1.963 14.771 14.771 0 011.767 1.839c.716.897 1.082 1.664 1.233 2.307v.003c.2.849.021 1.483-.22 1.915\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M233.106 123.634c-.692.08-1.358.136-1.994.176a11.019 11.019 0 01-1.02-1.29c-.609-.9-1.08-1.866-1.436-2.853a16.65 16.65 0 01-.592-2.078c-.502-2.353-.502-4.691-.357-6.518.06-.733.14-1.383.22-1.918.137-.896.271-1.471.291-1.56a.74.74 0 01.898-.55.754.754 0 01.548.912c-.02.084-1.96 8.384 1.656 13.714a9.159 9.159 0 001.786 1.965\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M225.075 121.82a.747.747 0 01-.728-.611.754.754 0 01.585-.885c.111-.023 2.607-.564 3.181-2.914a.742.742 0 01.901-.551c.398.1.641.51.542.914-.806 3.299-4.194 4.004-4.338 4.032l-.143.015\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M222.451 103.684a.74.74 0 01-.669-.425c-2.106-4.397-1.34-10.43-1.307-10.684a.746.746 0 01.835-.648.753.753 0 01.638.849c-.007.058-.736 5.84 1.17 9.822a.761.761 0 01-.343 1.01.723.723 0 01-.324.076\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M228.991 105.799a.746.746 0 01-.669-.426c-2.105-4.397-1.34-10.43-1.307-10.684a.746.746 0 01.835-.647.75.75 0 01.638.847c-.007.059-.736 5.84 1.171 9.824a.76.76 0 01-.343 1.009.731.731 0 01-.325.077\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M236.672 106.115a.742.742 0 01-.669-.425c-2.099-4.384-1.58-10.127-1.558-10.37a.743.743 0 01.811-.678c.408.04.708.409.67.824-.007.055-.5 5.568 1.414 9.564a.761.761 0 01-.344 1.009.729.729 0 01-.324.076\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M245.861 96.717c-.797.845-1.719 1.43-2.47 1.815a9.305 9.305 0 01-1.419.595l-.042.01-.205.032a.74.74 0 01-.713-.546.754.754 0 01.508-.934c.048-.015 2.854-.873 4.094-3.156.11.773.193 1.504.247 2.184\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M235.082 106.773c-7.56 0-16.979-4.247-17.55-4.508a.76.76 0 01-.373-.998.739.739 0 01.983-.38c.192.088 19.236 8.679 23.856 1.638.228-.367.174-2.23-.114-3.987a.755.755 0 01.611-.87c.406-.07.788.21.855.622.194 1.178.57 4.03-.114 5.073-1.662 2.53-4.716 3.41-8.154 3.41\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M194.088 295.026a115.25 115.25 0 01-7.708 3.524c-16.606 6.892-34.689 10.033-52.525 10.25h-.806a166.56 166.56 0 01-16.906-.744 124.97 124.97 0 01-2.014-.196 170.203 170.203 0 01-20.698-3.503c-.693-.166-1.375-.331-2.047-.496-.847-.217-1.684-.435-2.5-.651a87.53 87.53 0 01-2.366-.641 144.32 144.32 0 01-4.599-1.385c-.547-.165-1.095-.341-1.643-.516-.289-.093-.579-.186-.868-.29a117.342 117.342 0 01-5.662-2.025 135.084 135.084 0 01-6.707-2.75 875.978 875.978 0 01-5.384-48.091c-1.673-19.912-.485-42.408 2.408-63.911a418.105 418.105 0 011.974-13.092 377.57 377.57 0 014.216-21.308c.031-.113.051-.228.083-.331v-.01c6.81-29.605 16.068-52.152 23.55-54.664 15.675-5.25 100.72 19.83 103.2 38.234-.755 13.64-14.56 51.037-16.09 58.714-5.312 26.568 5.033 73.667 13.092 103.882\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M102.478 134.264s-20.555 44.567-38.42 49.333a394.675 394.675 0 011.981-13.083 375.902 375.902 0 014.218-21.316c.028-.112.052-.226.077-.332 8.433-4.876 19.45-8.732 32.144-14.602\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M149.597 125.507c-.497 0-1.01-.017-1.545-.052-12.996-.843-20.413-14.07-20.722-14.632a1.172 1.172 0 01.441-1.582 1.135 1.135 0 011.556.447c.07.127 7.133 12.686 18.871 13.447 11.206.726 12.167-7.384 12.203-7.73a1.15 1.15 0 011.251-1.04 1.153 1.153 0 011.026 1.264c-.009.102-1.064 9.878-13.08 9.878\"\n            ></path>\n            <path\n              fill=\"#EC9989\"\n              d=\"M126.72 101.342c15.808 23.379 29.507 16.153 29.507 16.153l6.192-24.36-19.724-17.098-5.08-4.401-.293.795-10.603 28.91\"\n            ></path>\n            <path\n              fill=\"#261A30\"\n              d=\"M136.79 73.883c1.335 5.565 11.254 33.66 23.566 27.37l2.063-8.117-19.724-17.1-5.373-3.605-.532 1.452\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M169.865 42.12s12.233-5.705 16.71 6.146c4.477 11.852-5.599 19.824-16.318 15.86l-.392-22.006\"\n            ></path>\n            <path\n              fill=\"#EC9989\"\n              d=\"M184.144 62.276c-.009.372-.018.748-.034 1.12a58.74 58.74 0 01-.23 3.374c-.796 8.214-3.38 16.292-9.1 22.712-13.496 15.162-29.075.27-40.063-17.2a134.77 134.77 0 01-3.796-6.441c-3.21-5.816-5.842-11.55-7.64-16.22a41.732 41.732 0 01-.809-2.288c-7.25-22.938 12.406-37.571 23.624-39.164 10.868-1.556 20.343 1.656 27.464 11.75 1.297 1.835 2.514 3.897 3.648 6.204 0 0 6.46 15.572 6.927 32.688.034 1.148.037 2.306.01 3.465\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M151.574 48.718l-.12-.017a.442.442 0 01-.306-.547c.015-.055 1.6-5.467 7.114-6.136a.443.443 0 11.107.88c-4.935.599-6.354 5.447-6.368 5.497a.441.441 0 01-.427.323\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M179.84 44.588a.445.445 0 01-.358-.18c-2.444-3.3-6.942-3.341-6.988-3.341a.444.444 0 010-.887h.003c.24 0 4.995.049 7.698 3.7a.442.442 0 01-.093.62.44.44 0 01-.263.088\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M163.884 60.058a.462.462 0 10-.924.044c.001.017.06 1.73-1.195 2.64l-.174.114a.436.436 0 00-.178.579l.034.066a.433.433 0 00.601.17c.091-.053.18-.11.264-.171 1.66-1.214 1.576-3.352 1.572-3.442\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M175.473 59.835a.462.462 0 11.795-.472c.01.015.905 1.477 2.452 1.545l.208-.001a.437.437 0 01.467.386l.007.073a.432.432 0 01-.407.474 3.29 3.29 0 01-.314.002c-2.055-.098-3.162-1.93-3.208-2.007\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M157.874 62.627c-1.31 0-2.893-.391-4.733-1.174a.472.472 0 01-.249-.614.46.46 0 01.605-.252c2.924 1.243 5.145 1.433 6.422.55 1.275-.878 1.257-2.593 1.257-2.61a.467.467 0 01.452-.48.461.461 0 01.472.457c.003.09.037 2.23-1.652 3.404-.689.479-1.548.719-2.574.719\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M179.027 59.906c-.349 0-.694-.04-1.037-.117-2.316-.53-3.599-2.662-3.652-2.753a.473.473 0 01.158-.644.46.46 0 01.634.16c.015.026 1.146 1.887 3.07 2.322 1.162.263 2.397-.041 3.672-.905a.458.458 0 01.641.13.474.474 0 01-.128.652c-1.135.769-2.26 1.155-3.358 1.155\"\n            ></path>\n            <path\n              fill=\"#261A30\"\n              d=\"M173.56 19.919c-3.186 5.429-22.94 5.337-28.518 4.232-6.014-1.191-14.995.599-14.995.599l6.606.995s2.527 5.809 1.242 10.759c-1.285 4.95 3.026 15.885 3.026 15.885l-5.117 1.504-3.2-8.828c-5.12-2.271-10.13 2.266-10.13 2.266-2.588-8.181-1.75-15.307.907-21.16 4.79-10.556 15.5-16.978 22.716-18.003 10.866-1.555 20.343 1.658 27.463 11.75\"\n            ></path>\n            <path\n              fill=\"#EE9A49\"\n              d=\"M178.337 25.768c-28.304-5.77-58.633 18.042-58.633 18.042-.82-2.906-.207-7.188-1.397-11.215-1.88-6.337-1.662-15.562 3.202-22.512.66-.941 1.4-1.84 2.231-2.682 2.203-2.228 5.038-4.075 8.63-5.31.16-.061.322-.112.487-.167.431-.137.856-.271 1.28-.392C136.772.766 139.28.31 141.662.114c.558-.047 1.11-.077 1.656-.096a30.724 30.724 0 019.798 1.236h.004c.895.26 1.758.564 2.6.9h.004c15.598 6.194 22.613 23.614 22.613 23.614\"\n            ></path>\n            <path\n              fill=\"#D07339\"\n              d=\"M124.65 36.53a.83.83 0 01-.378.032.826.826 0 01-.659-.567c-3.376-10.435-3.14-19.522-2.104-25.912.66-.941 1.4-1.84 2.231-2.682-1.375 6.162-2.376 16.313 1.432 28.076a.843.843 0 01-.523 1.053\"\n            ></path>\n            <path\n              fill=\"#D07339\"\n              d=\"M138.345 29.264a.818.818 0 01-.556.119.817.817 0 01-.573-.386C131.108 19.077 131.523 8 132.37 2.09c.161-.061.323-.112.488-.167.431-.137.856-.271 1.28-.392-.846 5.425-1.582 16.748 4.471 26.584a.845.845 0 01-.263 1.148\"\n            ></path>\n            <path\n              fill=\"#D07339\"\n              d=\"M148.851 20.772a.814.814 0 01-1.155-.119c-4.787-5.992-5.845-15.245-6.034-20.54.558-.046 1.11-.076 1.656-.095.19 5.084 1.195 14.013 5.65 19.584a.836.836 0 01-.117 1.17\"\n            ></path>\n            <path\n              fill=\"#D07339\"\n              d=\"M162.847 21.899a.85.85 0 01-.32.015.83.83 0 01-.677-.624c-2.287-9.316-5.886-15.92-8.73-20.036.895.26 1.758.564 2.6.9h.004c2.67 4.26 5.681 10.43 7.718 18.735a.834.834 0 01-.595 1.01\"\n            ></path>\n            <path\n              fill=\"#D07339\"\n              d=\"M117.417 34.276s-.61 7.482 1.963 11.765c0 0 34.18-25.016 59.411-19.007 0 0 .16-7.7-4.446-12.497 0 0-29.612-5.301-56.928 19.739\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M130.923 65.843a134.716 134.716 0 003.791 6.438c2.97-2.586 4.321-6.565 4.321-6.565l-8.112.127\"\n            ></path>\n            <path\n              fill=\"#EC9989\"\n              d=\"M133.238 44.509s-13.326-1.925-14.29 10.73c-.966 12.658 10.93 17.38 20.091 10.477l-5.8-21.207\"\n            ></path>\n            <path\n              fill=\"#261A30\"\n              d=\"M159.09 51.649a62.078 62.078 0 00-3.264 1.168c-.05.739.024 1.59.241 2.474.587 2.386 1.991 4.085 3.135 3.795 1.145-.29 1.597-2.461 1.01-4.848-.252-1.024-.655-1.92-1.123-2.59\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M151.47 54.604a.472.472 0 01-.146-.915l11.093-3.756a.459.459 0 01.584.297.47.47 0 01-.292.593l-11.093 3.757-.146.024\"\n            ></path>\n            <path\n              fill=\"#261A30\"\n              d=\"M176.295 50.03a60.473 60.473 0 013.46-.026c.294.677.508 1.505.6 2.409.244 2.448-.508 4.53-1.682 4.65-1.173.122-2.324-1.763-2.569-4.21-.105-1.051-.026-2.033.191-2.823\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M184.45 50.182a.47.47 0 00.304-.453.466.466 0 00-.473-.458l-11.689.29a.466.466 0 00-.45.482.465.465 0 00.472.458l11.69-.291.145-.028\"\n            ></path>\n            <path\n              fill=\"#261A30\"\n              d=\"M180.196 36.812c-1.612-1.303-4.877-3.516-8.332-3.393-.984.035-1.795.802-1.94 1.79l-.068.469c-.172 1.179.638 2.288 1.803 2.426 1.554.184 3.793.716 6.186 2.157a2.061 2.061 0 003.064-1.257 2.124 2.124 0 00-.713-2.192\"\n            ></path>\n            <path\n              fill=\"#261A30\"\n              d=\"M150.136 38.725c1.524-1.407 4.64-3.833 8.096-3.94.984-.03 1.843.68 2.051 1.659l.103.488c.248 1.162-.5 2.299-1.65 2.514-1.539.288-3.738.968-6.032 2.564a2.058 2.058 0 01-3.138-1.051 2.126 2.126 0 01.57-2.234\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M165.467 45.882s10.948 13.713 11.005 17.993c.017 1.284-.686 2.107-1.678 2.629-3.078 1.618-6.842-.402-7.607-3.835-.756-3.393-1.566-8.812-1.72-16.787\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M134.113 62.637a.837.837 0 01-.666-.56c-.023-.065-2.356-6.584-8.72-7.423l-.015-.003a.845.845 0 01-.705-.948.838.838 0 01.935-.732l.225.032c7.236 1.09 9.751 8.21 9.856 8.517a.851.851 0 01-.515 1.079.827.827 0 01-.395.038\"\n            ></path>\n            <path\n              fill=\"#E0726A\"\n              d=\"M126.233 61.808l-.128-.03a.85.85 0 01-.547-1.063c.886-2.873 3.965-5.197 4.096-5.294a.827.827 0 011.167.18.858.858 0 01-.178 1.186c-.044.033-2.773 2.104-3.492 4.435a.835.835 0 01-.918.586\"\n            ></path>\n            <path\n              fill=\"#E77E73\"\n              d=\"M151.48 66.939l-.316-.003c-3.65-.06-6.594-1.136-6.573-2.403.02-1.231 2.825-2.191 6.33-2.191.105 0 .21 0 .316.002 3.65.06 6.594 1.136 6.573 2.404-.019 1.23-2.825 2.19-6.33 2.19\"\n            ></path>\n            <path\n              fill=\"#E77E73\"\n              d=\"M183.88 66.77c-2.965-.272-5.168-1.223-5.153-2.325.015-1.124 2.348-2.016 5.417-2.17-.009.373-.018.749-.034 1.12a58.74 58.74 0 01-.23 3.375\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M147.234 67.678s.725 12.517-4.76 17.2c0 0 13.454 14.029 25.617 10.882 10.536-2.724 16.257-17.602 15.275-25.134 0 0-19.542 7.943-36.132-2.948\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M168.09 89.188c-5.123 0-9.924-2.488-10.226-2.648a.592.592 0 01.552-1.046c.106.055 10.626 5.502 16.581.085a.592.592 0 01.796.875c-2.256 2.053-5.025 2.734-7.704 2.734\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M144.08 85.618a.74.74 0 01-.42-.132c-.198-.137-4.876-3.443-9.588-11.674a.74.74 0 111.283-.734c4.55 7.944 9.102 11.16 9.148 11.193a.74.74 0 01-.423 1.347\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M148.072 70.439a.741.741 0 01-.72-.578c-.042-.184-4.21-18.401-13.153-23.6-2.462-1.431-5.099-1.732-7.836-.894a.739.739 0 11-.433-1.413c3.147-.965 6.18-.618 9.014 1.03 9.5 5.524 13.677 23.779 13.85 24.554a.739.739 0 01-.56.883l-.162.018\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M170.231 268.742c-7.916 0-16.196-1.427-24.726-4.27-9.537-3.176-19.407-8.121-29.337-14.696-16.877-11.175-28.26-23.386-28.373-23.508a1.174 1.174 0 01.05-1.642 1.134 1.134 0 011.617.049c.111.122 11.34 12.16 28 23.183 15.294 10.12 38.44 21.439 61.835 17.887a1.142 1.142 0 011.3.976 1.16 1.16 0 01-.962 1.322c-3.07.466-6.207.699-9.404.699\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M164.243 258.215l-.123-.007c-9.12-.986-19.755-6.51-31.605-16.416-8.767-7.33-14.984-14.478-15.045-14.55a1.176 1.176 0 01.103-1.64 1.131 1.131 0 011.615.106c.242.279 24.42 27.945 45.174 30.189.63.068 1.084.64 1.017 1.278a1.15 1.15 0 01-1.136 1.04\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M81.92 301.184c-.548-.165-1.096-.341-1.644-.516-.289-.093-.579-.186-.868-.29a506.422 506.422 0 01-5.156-32.777c-2.542-20.543-3.699-40.786-3.452-60.13.424-32.974 4.868-52.255 4.92-52.453a1.13 1.13 0 011.373-.857c.61.144.982.775.837 1.395-.04.186-4.422 19.292-4.836 52.039-.289 22.33 1.292 54.56 8.825 93.589\"\n            ></path>\n            <path\n              fill=\"#FCE6DD\"\n              d=\"M183.515198 84.8086664L195.224198 81.3656664 197.689198 85.4346664 213.096198 83.8696664 196.457198 89.1906664 193.376198 83.8696664 183.515198 84.8086664\"\n            ></path>\n            <path\n              fill=\"#FCE6DD\"\n              d=\"M180.335198 91.0476664L191.986198 94.6886664 191.851198 99.4646664 205.581198 106.734666 188.794198 101.919666 189.088198 95.7536664 180.335198 91.0476664\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M.263 198.458c.493 4.193 1.68 8.677 3.62 13.71.063.166.127.33.196.498 2.638 6.733 6.751 14.663 12.213 23.574 9.008 14.688 18.861 27.485 19.277 28.024 4.414 5.72 11.297 8.329 17.914 7.485a19.389 19.389 0 009.652-4.096c8.534-6.8 10.024-19.338 3.336-28.003-.072-.088-6.862-8.91-13.877-19.787-7.687-11.92-10.969-19.075-12.349-22.81-.117-.312-.218-.6-.307-.862a96.225 96.225 0 014.172-5.456c16.982-20.765 51.598-49.442 65.343-60.115 8.618-6.687 10.272-19.201 3.685-27.955-6.582-8.754-18.9-10.43-27.519-3.743-.639.492-15.772 12.256-33.194 27.717-23.866 21.17-40.068 38.685-48.179 52.068-.14.239-.285.474-.422.708-3.208 5.434-4.408 11.842-3.56 19.043\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M.263 198.458c.493 4.193 1.68 8.677 3.62 13.71.063.166.127.33.196.498 10.72-15.852 4.681-28.096.167-33.96-.14.24-.285.475-.422.709-3.208 5.434-4.408 11.842-3.56 19.043\"\n            ></path>\n            <path\n              fill=\"#BB2D41\"\n              d=\"M40.245 197.053c-.117-.312-.218-.6-.307-.862a96.225 96.225 0 014.172-5.456c-6.756-1.436-17.334-2.892-25.227-.302 0 0 12.351 2.392 21.362 6.62\"\n            ></path>\n            <path\n              fill=\"#EC9989\"\n              d=\"M55.156 248.255c2.191-.9 5.6-.893 8.694-.465 4.081.563 10.028 2.67 13.071 4.739 4.568 3.106 17.52 12.989 18.172 17.53.655 4.54-11.176-3.118-13.633-4.641-2.458-1.524-4.687-1.646-4.687-1.646s25.781 19.675 25.897 23.335c.116 3.66-15.677-6.066-19.564-8.497 0 0 18.603 15.904 17.944 18.25-1.323 4.707-22.489-12.356-22.489-12.356S93.53 298.68 91.13 301.073c-2.543 2.534-18.537-12.692-18.537-12.692s8.41 10.667 7.28 13.675c-1.13 3.009-20.51-18.027-23.1-21.62-2.592-3.593-10.37-12.7-12.916-17.898-1.729-3.533 4.365-11.44 11.3-14.283\"\n            ></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from \"react\";\n\nexport const World = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100%\"\n      height=\"100%\"\n      viewBox=\"0 0 317 187\"\n    >\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g transform=\"translate(-236 -169)\">\n          <g transform=\"translate(236.903 169.907)\">\n            <path\n              fill=\"#2C1B34\"\n              d=\"M315.197 37.214c-.648 2.56-3.466 5.033-7.56 5.17-.364.01-.736.005-1.117-.022a4.648 4.648 0 00-.511-.01c-4.137.137-3.487 5.864-3.491 8.872-.014 3.128.542 2.741-.662 3.594-1.142.81-4.192 4.427-5.785 4.48-1.757-.462-1.423-3.108-1.285-6.847.14-3.737 1.925-3.908 4.17-5.718 2.25-1.816.417-3.98-.336-4.776a2.768 2.768 0 00-.608-.042c-1.644.055-3.972 1.237-5.625 1.608a6.845 6.845 0 01-1.22.146c-.483.018-.977-.01-1.466-.064-1.37-.147-2.736-.484-3.958-.619a7.214 7.214 0 00-.956-.034c-1.788.061-3.647.787-4.332 2.152-.811 1.611-.456 3.081.695 4.721 1.146 1.64.24 6.376.374 8.532.132 2.03-2.547 4.793-5.17 5.232-.163.03-.326.048-.49.056-2.763.155-2.853.142-5.096 1.96-2.248 1.816 1.276 3.89-.31 5.152a.884.884 0 01-.521.203c-1.661-.166-3.596-4.039-5.182-5.377-.334-.284-.787-.453-1.278-.503-2.542.053-4.955 2.033-2.82 5.783 2.82 4.948 4.272 7.431 2.533 11.18-1.543 3.322-5.906 5.712-9.268 5.827-.321.01-.635 0-.936-.033-.473-.068-.65-.094-.813-.11a5.993 5.993 0 00-.893-.04c-1.948.064-1.814 1.322-2.104 2.412-.345 1.302 2.739 4.764-.002 5.988-.206.09-.408.135-.612.143-2.736-.274-5.28-5.95-6.11-6.76a.834.834 0 00-.517-.229 4.625 4.625 0 00-1.075.132c-.293.063-.59.127-.875.134-.776-.06-1.211-.345-1.471-1.174-.745-2.408-3.331-3.086-6.318-4.48-.347-.16-.632-.25-.882-.279-1.77.043-1.462 3.068-5.035 5.145-.127.075-.26.148-.397.22-4.685 2.448-.567 5.037-3.2 6.63-.443.266-.782.39-1.05.4-1.31-.129-.986-2.757-2.705-4.558-2.138-2.239-.503-7.158-.908-9.346-.314-1.725-2.254-2.628-4.501-2.868a12.819 12.819 0 00-1.746-.057c-.658.023-1.022.01-1.353-.024-1.886-.205-2.415-1.2-3.671-2.692-.43-.505-.875-.689-1.35-.737-.151-.016-.306-.02-.47-.016-.208.008-.426.03-.656.048-.178.013-.363.026-.552.034a5.428 5.428 0 01-.738-.02c-.63-.069-1.325-.283-2.107-.83-1.746-1.212-2.201-2.215-2.813-2.278-.418.007-.81.281-1.466.924-1.988 1.935 2.256 3.821 5.91 5.283 3.652 1.463 1.805 5.466-1.33 8.8-1.984 2.1-3.508 3.144-5.37 3.204a5.618 5.618 0 01-.803-.03c-.874-.093-1.833-.38-2.955-.85-3.994-1.68-2.818-6.469-2.698-8.425.115-1.952-4.093-1.188-3.52-5.159.578-3.97-.525-5.996-1.663-6.299-1.251.037-2.934 5.364-1.148 7.207 1.845 1.896 4.91 7.137 4.23 9.567-.678 2.434.354 1.56 1.727 3.853 1.376 2.291 2.417 2.76 5.448 4.161.879.402 1.453.618 1.864.663 1.012-.02 1.09-.924 2.072-2.478.483-.763.882-1.14 1.172-1.15.598.063.69 1.577.058 4.32-.871 3.79-3.618 4.744-5.048 4.79-1.782.028-3.997 2.631-5.85 4.767-1.913 2.21-1.781 2.934.189 5.741 1.967 2.8 1.048 3.328.407 8-.637 4.666-3.157 3.684-4.711 5.841-1.551 2.154-.776 6.973-1.927 8.371-1.151 1.4-1.488 1.093-3.897 2.623-.85.537-2.002.824-3.326.866a12.196 12.196 0 01-1.74-.07c-2.044-.222-4.315-.912-6.43-2.034-4.223-2.237-4.386-8.513-4.513-10.76-.134-2.254 1.64-8.05-.392-9.788-2.028-1.737-1.727-5.279-.901-11.626.824-6.347-.961-9.214-1.677-10.544-.38-.703-1.438-1.277-2.705-1.41-.247-.03-.503-.04-.76-.03a5.162 5.162 0 00-2.83.94c-1.636 1.158-3.25 1.906-4.902 1.962a6.032 6.032 0 01-2.4-.425c-2.522-.98-6.58-5.974-8.813-8.782-2.238-2.812-1.148-9-.158-10.68.99-1.68 5.633-4.938 7.51-6.52 1.802-1.528-.892-6.178 4.335-6.352.214-.006.437-.006.676.002.685.024 1.239.027 1.689.011 3.57-.119.62-1.348 5.644-2.08.38-.056.745-.087 1.086-.1.396-.013.767.002 1.112.04 3.834.412 4.908 3.7 5.522 4.91.566 1.127 3.013 2.79 5.572 3.065.308.035.614.048.919.037a5.702 5.702 0 001.072-.139c2.29-.524 3.329-1.993 4.529-2.033.598.052 1.022.258 1.517.711 2.107 1.922 4.49 2.265 7.218 2.741 2.607-.052 1.94-2.749 1.096-4.798-.937-2.246-5.541-1.132-6.036-3.33-.487-2.194 3.734-4.333 5.988-4.812 1.514.05 2.155.527 2.839 1.014.685.48 1.414.97 2.367 1.07.156.017.317.023.485.017 3.105-.35 2.167-4.026 1.172-5.206-.511-.6-1.415-1.053-2.368-1.158a3.603 3.603 0 00-.518-.02c-.761.025-1.512.296-2.086.915-.401.434-.68.603-.941.613-.715-.07-1.305-1.082-3.36-1.61a5.34 5.34 0 00-.834-.162c-1.6.026-.608 1.457-2.491 2.212-2.28.922-.39 2.017-1.185 3.363-.313.532-.59.677-.885.687-.616-.068-.903-.097-1.127-.089a1.423 1.423 0 00-.52.111c-.94.394-1.017 1.327-1.474 1.342a3.282 3.282 0 01-.7-.619c-.735-.87-.793-1.974-.793-3.189 0-1.516-1.746-3.489-3.344-5.089-.532-.538-.982-.764-1.367-.804-.837.016-1.282.611-1.585 1.022-.482.661 3.684 3.88 4.584 5.23.899 1.343-.565 1.99-1.93 2.472-1.132.395-1.287 1.886-1.53 1.894-.566-1.048-.526-4.709-1.17-5.852-.641-1.137-3.017-1.574-5.125-2.066a3.62 3.62 0 00-.543-.027c-1.581.053-1.733 1.34-3.01 1.43-1.523.108-2.22 1.374-2.744 2.657-.451 1.116-1.304 3.265-3.705 3.344a4.27 4.27 0 01-.632-.024 7.557 7.557 0 01-.572-.09c-3.341-.715-3.307-4.202-2.994-6.496.193-1.385.784-1.809 1.973-1.848.51-.016 1.129.037 1.875.116.376.04.789.09 1.234.137.21.024.409.031.59.026 2.732-.092 2.476-3.239 2.937-5.37.492-2.267 6.74-5.529 9.003-7.612.716-.659 1.696-.859 2.799-.895.61-.022 1.262.01 1.928.04.305.012.613.028.92.036.37.01.738.013 1.105.002 1.248-.042 2.464-.263 3.5-.987 3.16-2.21.079-4.24 2.789-7.877 2.712-3.642 2.254-4.945.152-5.527-1.83.04-.861 2.747-3.97 3.863-3.454 1.238-1.186 7.92-2.492 8.848a1.177 1.177 0 01-.68.221c-1.685-.157-3.795-1.777-6.286-2.757-3.131-1.23-4.942-6.606-2.07-8.442 2.87-1.838 5.112-6.6 9.747-9.68 1.146-.759 2.24-1.077 3.275-1.11.277-.012.55 0 .82.027 2.775.298 5.035 2.471 6.462 3.11.55.248 1.296.382 2.117.47.495.052 1.016.091 1.54.128.53.04 1.059.074 1.57.132 1.357.145 2.578.408 3.21 1.074 1.506 1.588.403 2.186-2.291 2.61-2.696.427-.956 4.011 3.268 4.822.374.07.724.121 1.056.157.469.051.9.066 1.293.053 2.457-.082 3.536-1.277 4.708-2.136.556-.407 1.42-.56 2.284-.587a12.69 12.69 0 011.716.071c.696.08 1.157.174 1.183.177a46.46 46.46 0 003.987.044 30.263 30.263 0 002.79-.21c2.845-.358 1.532-3.82 5.679-3.958.292-.01.613-.003.964.021 1.484.158 2.414.43 3.246.693.833.261 1.569.513 2.334.592.216.024.434.035.655.026 1.686-.055 3.632-1.1 6.963-4.718 3.687-3.998 7.317-5.115 10.465-5.22a17.3 17.3 0 012.398.098c1.849.2 3.44.616 4.667.748 3.628.39 4.279 5.82 8.74 7.105 4.46 1.284 12.719 1.637 13.749 3.713.587 1.182 7.47 2.198 13.769 2.875 4.767.511 9.196.824 10.308.866 2.472.256 1.554 1.765 2.643 3.326.724 1.035 1.388 1.28 2.86 1.441.867.092 2.014.155 3.62.326 2.734.295 4.317.253 5.553.385.72.076 1.324.213 1.96.511 1.73.816 2.71 2.256 2.013 5.045\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M174.91 50.92c.493 1.968.64 4.683.119 6.881-.735-.87-.793-1.974-.793-3.189 0-1.516-1.746-3.489-3.344-5.089-.532-.538-.982-.764-1.367-.804-.837.016-1.282.611-1.585 1.022-.482.661 3.684 3.88 4.584 5.23.899 1.343-.565 1.99-1.93 2.472-1.132.395-1.287 1.886-1.53 1.894-.566-1.048-.526-4.709-1.17-5.852-.641-1.137-3.017-1.574-5.125-2.066a3.62 3.62 0 00-.543-.027c-1.581.053-1.733 1.34-3.01 1.43-1.523.108-2.22 1.374-2.744 2.657-.451 1.116-1.304 3.265-3.705 3.344a4.27 4.27 0 01-.632-.024 7.557 7.557 0 01-.572-.09c-3.341-.715-3.307-4.202-2.994-6.496.193-1.385.784-1.809 1.973-1.848.51-.016 1.129.037 1.875.116.376.04.789.09 1.234.137.21.024.409.031.59.026 2.732-.092 2.476-3.239 2.937-5.37.492-2.267 6.74-5.529 9.003-7.612.716-.659 1.696-.859 2.799-.895.61-.022 1.262.01 1.928.04.305.012.613.028.92.036 1.392.927 2.582 2.233 3.082 4.071 1.58 5.793-1.053 5.793 0 10.006\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M270.459 70.757a.884.884 0 01-.522.203c-1.661-.166-3.596-4.039-5.182-5.377-.334-.284-.787-.453-1.278-.503-2.542.053-4.955 2.033-2.82 5.783 2.82 4.948 4.272 7.431 2.533 11.18-1.543 3.322-5.906 5.712-9.268 5.827-.321.01-.635 0-.936-.033-.473-.068-.65-.094-.813-.11a5.993 5.993 0 00-.893-.04c-1.948.064-1.814 1.322-2.104 2.412-.345 1.302 2.739 4.764-.002 5.988-.206.09-.408.135-.612.143-2.736-.274-5.28-5.95-6.11-6.76a.834.834 0 00-.517-.229 4.625 4.625 0 00-1.075.132c-.293.063-.59.127-.875.134-.776-.06-1.211-.345-1.471-1.174-.745-2.408-3.331-3.086-6.318-4.48-.347-.16-.632-.25-.882-.279-1.77.043-1.462 3.068-5.035 5.145-1.013-2.643-.724-5.64 2.088-8.832 9.743-11.06 5.004-5.53 10.797-18.17 5.794-12.64 23.174-11.323 31.337-5.266 2.254 1.672 4.287 4.168 5.854 7.138-.164.03-.327.048-.49.056-2.764.155-2.854.142-5.097 1.96-2.248 1.816 1.276 3.89-.31 5.152\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M120.285.017c.386-.014.799-.019 1.23-.017 2.778.007 6.304.305 8.187.8 2.544.671 2.633 2.28 6.598 2.961 3.96.672 5.562 1.344 5.94 2.48.378 1.137-2.741 2.831-5.294 5.86-2.55 3.018 1.039 2.37 2.073 3.888 1.036 1.52-1.798 4.353-2.558 5.58-.752 1.232 1.224 3.035.373 5.687-.615 1.896-2.29 2.726-4.3 2.793a10.14 10.14 0 01-2.499-.259 3.918 3.918 0 00-.894-.106c-2.164.07-2.446 2.217-4.676 3.781-2.547 1.795-2.93 4.826-2.84 7.29.059 1.593-1.026 3.06-3.201 3.131l-.176.003c-1.161-.009-2.618-.396-4.36-1.362-5.183-2.857-4.143-5.032-4.042-7.402.093-2.365-.377-2.843-1.788-4.077-1.415-1.239-.565-4.552-.56-7.303.003-2.755-2.631-3.98-5.931-7.786-1.312-1.51-2.07-1.968-2.884-1.972-.665.02-1.286.267-2.17.517a14.22 14.22 0 01-3.628.565l-.37.01c-.11.002-.21.006-.314.004-5.524-.017-2.684-2.509-1.57-4.272 1.135-1.802 4.435-.557 6.42-3.299 1.47-2.03 2.11-2.968 4.372-3.043.112-.004.227-.006.347-.005.733.002 1.623.082 2.737.235a16.626 16.626 0 002.78.15c3.059-.102 4.414-1.116 4.488-1.168l.226.014c2-.065 4.433-3.329 6.947-3.594.388-.04.84-.068 1.337-.084\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M84.36 4.56c.298-.01.596-.016.89-.016 2.483.012 4.819.354 5.486.58.848.291.468 1.044-1.823 2.836-1.015.796-1.661.977-2.29.997l-.164.003c-.168 0-.34-.01-.515-.015-.181-.01-.366-.025-.567-.023l-.221.003a5.799 5.799 0 00-1.505.253c-2.546.746-1.205 2.46-1.132 2.552.05.071 1.033 1.425-.478 3.978-1.162 1.961-2.713 2.75-5.082 2.828-.153.005-.31.007-.47.007-.587-.002-1.22-.04-1.905-.11-3.771-.396-3.864-4.182-3.67-6.744.194-2.552 2.834-3.21 4.632-5.38 1.056-1.28 2.438-1.537 4.03-1.59.416-.014.845-.014 1.287-.014.436-.002.885-.003 1.343-.018.323-.01.649-.029.98-.06.387-.033.78-.055 1.174-.068\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M77.857 19.468l.25-.003c2.04.006 3.832.928 3.929.977.272-.374.747-.578 1.33-.597l.117-.002c1.006.004 2.302.517 3.458 1.565 1.88 1.712 2.159 3.32 5.557 5.705 3.39 2.38 1.882 1.801 2.445 3.603.563 1.803-1.51 1.703-1.986 3.314-.472 1.606 2.73 4.271.843 5.493-.255.166-.574.247-.936.258l-.077.002c-2.31-.008-6.307-2.82-7.751-4.929-1.7-2.468-.844-4.265-1.978-5.692-.601-.756-1.204-.952-2.193-.956-.113 0-.23.003-.352.006-.38.013-.81.043-1.31.076a45.314 45.314 0 01-2.065.1h-.167c-3.495-.01-3.821-2.98-4.471-4.76-.654-1.804 0-1.034 2.646-3.205.81-.668 1.77-.924 2.71-.955\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M120.27 134.255c-3.023 4.54-.203 8.335-3.223 12.875-1.006 1.506-1.78 1.952-2.491 1.975-.503-.003-.92-.16-1.354-.313-.437-.16-.887-.319-1.398-.317-.672.022-1.327.242-2.118.903-3.402 2.832-5.295 7.187-5.677 10.963-.385 3.777-11.526 10.586-12.664 15.126-1.135 4.545 6.028 8.166 4.519 9.681-.28.278-.716.408-1.26.426-2.561-.005-6.893-2.046-9.302-3.115-3.018-1.332-2.831-7.816-2.821-8.158.2-7.768.198-6.252 2.845-9.272 2.644-3.024.205-12.509.779-19.513.574-7.01-1.122-6.263-6.402-9.309-5.277-3.047-3.186-13.652-3.56-16.877-.372-3.22 3.395-6.623 3.592-6.805-3.2-4.938-9.796-9.693-14.325-10.09-4.525-.395-9.517-9.362-9.325-12.015.186-2.657-5.544-10.962-7.43-12.102-.402-.245-.815-.377-1.19-.377-1.39.045-2.035 1.857 1.18 6.407 3.31 4.674 1.688 6.853 1.383 6.862-3.95-2.632-10.428-13.49-9.477-20.689.066-.5.144-.996.237-1.483 1.177-6.496 3.995-11.666-.211-15.38-4.524-3.993-9.612-7.609-13.944-11.227-2.067-1.722-4.305-2.626-6.488-2.63-2.591.078-4.824 1.163-6.723 3.348-2.312 2.66-5.762 4.538-8.561 4.63-1.91 0-3.321-.666-4.084-2.209-2.07-4.179.384-4.548 2.84-7.003 2.458-2.454 1.518-5.108 2.655-10.936.572-2.904 3.608-4.068 7.07-4.182.214-.008.43-.01.649-.01 3.297.013 6.86.91 8.982 2.117a665.948 665.948 0 007.634 4.287c2.265-.084 2.265-1.224 3.4-2.546.703-.824 3.602-.977 6.28-1.064l.669-.023c1.609-.053 2.708-.093 3.429-.206 2.965-.026 6.37 2.265 8.298 4.39 2.072 2.277 8.113 1.73 12.637 1.933 4.469-.142 3.747-4.106 3.028-7.379-.158-.735-.086-1.059.16-1.067.925 0 4.083 4.08 6.44 7.345 3.007 4.176-.006 3.218-6.431 9.067-6.423 5.854 5.08 9.116 7.908 12.344.929 1.067 1.735 1.591 2.436 1.594 1.448-.048 2.409-2.236 3.038-6.504.538-3.608 2.789-4.709 5.826-4.812.176-.005.355-.008.537-.008 2.267.006 4.922.495 7.608.888 6.6.97 7.536 7.792 4.695 13.47-.885 1.77-1.801 2.322-2.75 2.354-.776-.003-1.47-.263-2.17-.516-.7-.26-1.408-.522-2.122-.525-.803.024-1.504.303-2.204 1.077-3.213 3.548-4.161 7.416-6.617 10.442-2.457 3.02.563 1.898-2.273 5.485-2.834 3.59-3.021 1.696-4.535 6.24-1.52 4.541 4.706 5.513 3.194 6.832l-.221.142c-.142.07-.308.1-.492.108-.113 0-.232-.008-.356-.027-1-.136-2.335-.792-3.878-1.45-1.733-.74-3.73-1.477-5.754-1.483a4.285 4.285 0 00-1.594.408c-3.587 1.746-2.588 8.33-.505 8.335.36-.048.632-.074.879-.082 2.32.003 4.216 1.16 5.683 4.448 1.454 3.263 4.716 8.208 11.355 8.232.17 0 .345-.003.522-.008a16.137 16.137 0 003.015-.403c1.216-.277 2.243-.414 3.133-.443.143-.005.279-.008.414-.008 5.359.02 5.482 4.078 11.544 4.095 7.165.026 8.488.981 9.054 3.442.558 2.465 6.217 5.328 9.604 10.836 3.39 5.504-.195 4.92-3.221 9.46\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M95.87 43.795c-2.686-.393-5.341-.882-7.608-.888-.182 0-.361.003-.537.008-3.037.103-5.288 1.204-5.826 4.812-.63 4.268-1.59 6.456-3.038 6.504-.701-.003-1.507-.527-2.436-1.594-2.828-3.228-14.331-6.49-7.908-12.344 6.425-5.849 9.438-4.89 6.43-9.067-2.356-3.266-5.514-7.345-6.438-7.345-.247.008-.32.332-.161 1.067.719 3.273 1.44 7.237-3.028 7.38-4.524-.204-10.565.343-12.637-1.934-1.928-2.125-5.333-4.416-8.298-4.39-.721.113-1.82.153-3.43.206l-.668.023c-2.678.087-5.577.24-6.28 1.064-1.135 1.322-1.135 2.462-3.4 2.546a665.948 665.948 0 01-7.634-4.287c-2.122-1.208-5.685-2.104-8.982-2.117-.22 0-.435.002-.648.01-3.463.114-6.5 1.278-7.071 4.182-1.137 5.828-.197 8.482-2.654 10.936C1.16 41.022-1.293 41.391.777 45.57c.763 1.543 2.175 2.21 4.084 2.21 2.799-.093 6.249-1.97 8.56-4.63 1.9-2.186 4.133-3.27 6.724-3.35 2.183.005 4.42.91 6.488 2.631 4.332 3.618 9.42 7.234 13.944 11.226 4.206 3.715 1.388 8.885.21 15.381 4.23-.684 11.134-.853 15.298 4.003.322.375.642.76.962 1.153 3.245 3.984 7.595 6.96 12.517 8.433.22.065.444.13.667.191a47.446 47.446 0 007.589 1.424c-.22-.675-.244-1.469.074-2.42 1.514-4.544 1.7-2.65 4.535-6.24 2.836-3.587-.184-2.465 2.273-5.485 2.456-3.026 3.404-6.894 6.617-10.442.7-.774 1.4-1.053 2.204-1.077.714.003 1.422.264 2.122.525.7.253 1.394.513 2.17.516.949-.032 1.865-.585 2.75-2.355 2.84-5.677 1.906-12.5-4.695-13.469\"\n            ></path>\n            <path\n              fill=\"#2C1B34\"\n              d=\"M290.097 140.342c-4.691.88-1.025 4.36-6.5 8.851-1.404 1.148-2.453 1.648-3.291 1.675-.098.003-.195 0-.287-.008-2.181-.224-2.841-3.884-5-7.01-3.035-4.382 1.276-5.496-3.424-7.719-.59-.279-1.064-.42-1.46-.46-.105-.01-.204-.013-.3-.01-.992.034-1.363.821-1.698 1.608-.334.806-.635 1.617-1.506 1.647l-.211-.008c-.27-.03-.585-.122-.961-.3-3.763-1.744-2.783-2.028-6.594-2.935a3.713 3.713 0 00-.574-.102c-.15-.016-.29-.019-.42-.016-1.028.034-1.486.645-1.795 1.264-.326.664-.484 1.35-.987 1.367-.27-.024-.503-.12-.795-.332-.611-.435-1.111-.64-1.538-.683l-.237-.009c-.988.034-1.641.92-2.718 1.592-.545.34-1.124.587-1.717.606a1.8 1.8 0 01-.303-.008c-1.054-.107-2.122-1.006-3.033-3.439-1.512-4.036.685-5.174.495-8.679-.187-3.516-4.29-6.067-.58-10.152 1.265-1.396 1.78-1.846 2.22-1.859.398.03.687.266 1.209.522.516.26 1.26.54 2.475.663.564.055 1.225.08 2.009.052.262-.007.532-.02.822-.04 7.074-.517 3.113-10.22 6.507-10.335.087-.002.179.002.277.011.27.03.585.108.937.241 1.909.736 2.923 1.123 3.524 1.181l.2.008c.897-.029.695-1.05 1.985-2.934.5-.734 1.054-1.058 1.614-1.077l.214.008c1.733.18 3.479 3.123 3.897 5.717.566 3.54 2.32 3.355 5.156 4.422.419.155.756.242 1.027.27l.224.01c1.293-.044.737-1.908.743-4.733.005-2.779 1.214-3.105 1.709-3.122l.155.006c.134-.037.235-.058.322-.06 1.087.102 1.369 2.854 1.737 5.516.414 2.947 1.822 1.931 1.017 5.925-.81 3.99 3.034 4.382 5.94 7.592 2.908 3.211 3.624 4.251 3.593 8.124-.027 3.882.61 6.272-4.08 7.152\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M290.097 140.342c-4.691.88-1.025 4.36-6.5 8.851-1.404 1.148-2.453 1.648-3.291 1.675-.098.003-.195 0-.287-.008-2.181-.224-2.841-3.884-5-7.01-3.035-4.382 1.276-5.496-3.424-7.719-.59-.279-1.064-.42-1.46-.46-.105-.01-.204-.013-.3-.01-.992.034-1.363.821-1.698 1.608-.334.806-.635 1.617-1.506 1.647l-.211-.008c-.27-.03-.585-.122-.961-.3-3.763-1.744-2.783-2.028-6.594-2.935a3.713 3.713 0 00-.574-.102c-.15-.016-.29-.019-.42-.016-1.028.034-1.486.645-1.795 1.264-.326.664-.484 1.35-.987 1.367-.27-.024-.503-.12-.795-.332-.611-.435-1.111-.64-1.538-.683l-.237-.009c-.988.034-1.641.92-2.718 1.592-.545.34-1.124.587-1.717.606a1.8 1.8 0 01-.303-.008c-1.054-.107-2.122-1.006-3.033-3.439-1.512-4.036.685-5.174.495-8.679-.187-3.516-4.29-6.067-.58-10.152 1.265-1.396 1.78-1.846 2.22-1.859.398.03.687.266 1.209.522.516.26 1.26.54 2.475.663.564.055 1.225.08 2.009.052.262-.007.532-.02.822-.04 7.074-.517 3.113-10.22 6.507-10.335.087-.002.179.002.277.011.27.03.585.108.937.241 1.909.736 2.923 1.123 3.524 1.181l.2.008c.897-.029.695-1.05 1.985-2.934.5-.734 1.054-1.058 1.614-1.077l.214.008c1.733.18 3.479 3.123 3.897 5.717.566 3.54 2.32 3.355 5.156 4.422.419.155.756.242 1.027.27l.224.01c1.293-.044.737-1.908.743-4.733.005-2.779 1.214-3.105 1.709-3.122l.155.006c.134-.037.235-.058.322-.06 1.087.102 1.369 2.854 1.737 5.516.414 2.947 1.822 1.931 1.017 5.925-.81 3.99 3.034 4.382 5.94 7.592 2.908 3.211 3.624 4.251 3.593 8.124-.027 3.882.61 6.272-4.08 7.152\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M205.059 30.002l-.061-.002a44.008 44.008 0 00-2.66-.097.906.906 0 01.007-1.81h.006c.913.005 1.843.038 2.766.1a.907.907 0 01-.058 1.81zm-9.626.426a.905.905 0 01-.143-1.799 42.088 42.088 0 012.75-.35.905.905 0 11.17 1.803c-.882.083-1.768.195-2.632.335l-.145.011zm16.489.52l-.185-.019a51.558 51.558 0 00-2.622-.474.905.905 0 11.276-1.79c.894.137 1.807.303 2.714.491a.905.905 0 01-.183 1.792zm-23.21 1.18a.906.906 0 01-.297-1.762 40.984 40.984 0 012.653-.823.905.905 0 11.477 1.747c-.847.231-1.7.495-2.534.786a.92.92 0 01-.298.051zm29.9.632a.891.891 0 01-.285-.047 63.329 63.329 0 00-2.554-.789.906.906 0 01.496-1.741c.866.246 1.75.52 2.629.812a.906.906 0 01-.286 1.765zm-36.222 2.204a.906.906 0 01-.44-1.697c.812-.45 1.643-.876 2.469-1.265a.906.906 0 11.772 1.637c-.791.374-1.586.781-2.363 1.212a.905.905 0 01-.438.113zm42.69.317a.902.902 0 01-.366-.079 76.44 76.44 0 00-2.473-1.049.905.905 0 11.677-1.679c.836.336 1.687.697 2.532 1.074a.905.905 0 01-.37 1.733zm6.22 3.094a.916.916 0 01-.436-.112 84.87 84.87 0 00-2.378-1.259.905.905 0 01.823-1.614c.808.413 1.625.845 2.427 1.285a.906.906 0 01-.436 1.7zm-54.692.417a.905.905 0 01-.556-1.621 48.216 48.216 0 012.234-1.634.906.906 0 011.026 1.493 45.124 45.124 0 00-2.15 1.572.905.905 0 01-.554.19zm60.655 3.148a.905.905 0 01-.491-.145 97.284 97.284 0 00-2.283-1.433.906.906 0 01.943-1.547c.774.472 1.556.962 2.324 1.46a.905.905 0 01-.493 1.665zm-65.474 1.101a.903.903 0 01-.638-1.547c.533-.53 1.077-1.05 1.619-1.547a.905.905 0 111.225 1.334 54.68 54.68 0 00-1.567 1.497.902.902 0 01-.64.263zm71.184 2.861a.893.893 0 01-.538-.178 115.21 115.21 0 00-2.187-1.58.906.906 0 111.043-1.48c.737.52 1.485 1.06 2.223 1.606a.905.905 0 01-.541 1.632zm5.452 4.314a.897.897 0 01-.583-.213 107.18 107.18 0 00-2.085-1.714.907.907 0 011.133-1.413c.712.57 1.424 1.157 2.119 1.743a.904.904 0 01-.584 1.597zm5.158 4.685a.9.9 0 01-.647-.272c-.007-.006-.696-.709-1.942-1.854a.907.907 0 011.226-1.334 57.422 57.422 0 012.01 1.922.905.905 0 01-.647 1.538z\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M125.596 26.896a.906.906 0 01-.032-1.81 42.713 42.713 0 012.773-.012.906.906 0 01-.051 1.811 41.312 41.312 0 00-2.658.011h-.032zm9.612.722l-.153-.013c-.36-.06-.722-.122-1.09-.182a44.744 44.744 0 00-1.554-.223.905.905 0 11.224-1.797c.54.068 1.085.146 1.62.233.372.06.74.122 1.105.184a.905.905 0 01-.152 1.798zm-16.494.091a.906.906 0 01-.177-1.794 44.357 44.357 0 012.732-.46.905.905 0 11.245 1.795c-.87.118-1.752.267-2.621.441l-.18.018zm23.289 1.302l-.213-.026a98.28 98.28 0 00-2.623-.594.905.905 0 11.376-1.771c.904.192 1.804.395 2.672.605a.906.906 0 01-.212 1.786zm-29.958.59a.905.905 0 01-.313-1.756 48.73 48.73 0 012.626-.88.905.905 0 11.524 1.734c-.841.254-1.69.54-2.525.845a.898.898 0 01-.312.056zm36.625 1.316a.905.905 0 01-.288-.047 72.001 72.001 0 00-2.558-.805.904.904 0 11.513-1.737c.89.262 1.77.54 2.62.824a.906.906 0 01-.287 1.765zm-42.95 1.533a.907.907 0 01-.427-1.704 53.265 53.265 0 012.47-1.24.906.906 0 01.77 1.64c-.796.372-1.598.775-2.386 1.197a.894.894 0 01-.426.107zm49.392 1.026a.905.905 0 01-.384-.086 54.367 54.367 0 00-2.444-1.072.907.907 0 01.688-1.676c.865.355 1.714.728 2.526 1.11a.906.906 0 01-.386 1.724zm-55.293 2.628a.906.906 0 01-.523-1.645 60.276 60.276 0 012.29-1.54.906.906 0 01.975 1.526c-.744.476-1.491.978-2.221 1.494a.899.899 0 01-.521.165zm61.32.791a.914.914 0 01-.513-.16 37.03 37.03 0 00-2.234-1.42.906.906 0 11.918-1.563 39.03 39.03 0 012.343 1.491.906.906 0 01-.513 1.652zM94.378 40.42a.906.906 0 01-.6-1.583 67.654 67.654 0 012.102-1.784.905.905 0 111.143 1.405 65.344 65.344 0 00-2.045 1.735.898.898 0 01-.6.227zm71.952 1.051a.9.9 0 01-.69-.32 21.75 21.75 0 00-1.81-1.873.905.905 0 011.23-1.33 23.63 23.63 0 011.96 2.031.905.905 0 01-.69 1.492zm-76.912 3.816a.906.906 0 01-.666-1.519 68.87 68.87 0 011.907-1.99.905.905 0 111.282 1.278 66.494 66.494 0 00-1.856 1.938.903.903 0 01-.667.293zm-4.406 5.39a.904.904 0 01-.75-1.413c.024-.035.595-.877 1.688-2.24a.906.906 0 111.413 1.132c-1.042 1.301-1.595 2.114-1.601 2.122a.903.903 0 01-.75.398z\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M79.35 85.043a.906.906 0 01-.757-.407 46.938 46.938 0 01-1.485-2.367.904.904 0 111.572-.898c.005.007.487.848 1.424 2.267a.905.905 0 01-.754 1.405zm147.986 1.07a.906.906 0 01-.811-1.309c.18-.362.27-.562.274-.573a.907.907 0 011.655.735s-.1.225-.307.643a.906.906 0 01-.811.504zM83.414 90.691a.904.904 0 01-.716-.35 103.445 103.445 0 01-1.655-2.194.906.906 0 011.46-1.07 96.586 96.586 0 001.626 2.153.906.906 0 01-.715 1.461zM223.8 92.105a.906.906 0 01-.752-1.409c.504-.752.992-1.513 1.449-2.26a.906.906 0 011.545.944 69.433 69.433 0 01-1.49 2.324.907.907 0 01-.752.401zM87.854 96.041a.903.903 0 01-.678-.305c-.604-.682-1.207-1.38-1.793-2.076a.905.905 0 111.385-1.166 103.1 103.1 0 001.764 2.041.906.906 0 01-.678 1.506zm131.802 1.643a.905.905 0 01-.7-1.479 77.38 77.38 0 001.664-2.11.906.906 0 111.44 1.095 74.402 74.402 0 01-1.702 2.161.9.9 0 01-.702.333zM92.628 101.09a.904.904 0 01-.637-.26 114.138 114.138 0 01-1.923-1.957.906.906 0 011.307-1.253c.617.643 1.253 1.29 1.89 1.922a.906.906 0 01-.637 1.548zm122.393 1.767a.903.903 0 01-.646-1.539 80.314 80.314 0 001.847-1.95.906.906 0 011.337 1.22 76.946 76.946 0 01-1.891 1.997.904.904 0 01-.647.272zm-117.3 2.96a.899.899 0 01-.593-.223 97.356 97.356 0 01-2.047-1.824.905.905 0 111.222-1.336c.66.605 1.337 1.208 2.01 1.792a.905.905 0 01-.592 1.59zm112.226 1.78a.906.906 0 01-.589-1.594 76.655 76.655 0 002.013-1.78.907.907 0 011.223 1.335 80.211 80.211 0 01-2.06 1.821.902.902 0 01-.587.217zm-106.826 2.586a.899.899 0 01-.543-.182 97.594 97.594 0 01-2.17-1.679.907.907 0 011.129-1.416c.7.557 1.417 1.112 2.128 1.647a.906.906 0 01-.544 1.63zm101.355 1.683a.904.904 0 01-.526-1.644 72.869 72.869 0 002.16-1.594.907.907 0 011.1 1.44 82.392 82.392 0 01-2.21 1.631.91.91 0 01-.524.167zm-95.656 2.284a.898.898 0 01-.49-.145 96.219 96.219 0 01-2.286-1.515.906.906 0 011.023-1.494 92.558 92.558 0 002.243 1.486.906.906 0 01-.49 1.668zm89.829 1.486a.906.906 0 01-.46-1.687 74.923 74.923 0 002.294-1.398.906.906 0 01.969 1.531c-.768.486-1.558.967-2.346 1.43a.902.902 0 01-.457.124zm-83.847 2.034a.908.908 0 01-.428-.107 91.646 91.646 0 01-2.397-1.335.906.906 0 01.905-1.569c.776.448 1.567.888 2.349 1.308a.906.906 0 01-.43 1.703zm77.715 1.211a.904.904 0 01-.389-1.723 76.82 76.82 0 002.405-1.194.906.906 0 11.832 1.609c-.806.417-1.634.828-2.46 1.221a.912.912 0 01-.388.087zm-71.471 1.82a.899.899 0 01-.36-.077 84.602 84.602 0 01-2.5-1.136.906.906 0 11.776-1.637c.808.384 1.63.758 2.445 1.112a.906.906 0 01-.361 1.737zm65.083.884a.905.905 0 01-.318-1.752 84.666 84.666 0 002.5-.984.904.904 0 11.69 1.674c-.843.348-1.702.686-2.555 1.005a.904.904 0 01-.317.057zm-58.608 1.608a.912.912 0 01-.29-.048 81.82 81.82 0 01-2.587-.92.905.905 0 11.636-1.695c.832.311 1.683.614 2.53.898a.906.906 0 01-.29 1.765zm52.017.556a.906.906 0 01-.247-1.777 85.656 85.656 0 002.572-.774.904.904 0 11.55 1.725c-.861.275-1.745.54-2.628.791l-.247.035zm-45.352 1.365l-.212-.026a80.452 80.452 0 01-2.66-.689.905.905 0 11.486-1.745c.86.238 1.734.466 2.598.674a.905.905 0 01-.212 1.786zm38.61.264a.906.906 0 01-.178-1.793 89.1 89.1 0 002.626-.57.905.905 0 11.411 1.764c-.876.205-1.777.4-2.68.582l-.18.017zm-31.802 1.06l-.135-.01a79.195 79.195 0 01-2.708-.452.905.905 0 11.329-1.78c.877.161 1.768.31 2.647.441a.906.906 0 01-.133 1.801zm24.957.057a.905.905 0 01-.112-1.804 93.242 93.242 0 002.663-.374.905.905 0 11.276 1.79c-.891.138-1.804.267-2.713.381l-.114.007zm-6.907.631a.905.905 0 01-.051-1.81c.9-.052 1.804-.115 2.685-.189a.905.905 0 01.151 1.804c-.895.075-1.815.14-2.732.193l-.053.002zm-11.153.032l-.055-.002a82.37 82.37 0 01-2.738-.212.905.905 0 11.17-1.803c.89.084 1.79.154 2.676.207a.906.906 0 01-.053 1.81zm4.87.145a72 72 0 01-.658-.003.905.905 0 01.008-1.81h.007c.9.008 1.804 0 2.693-.017h.016a.905.905 0 01.016 1.812c-.69.011-1.382.018-2.082.018z\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M235.372 85.078a.906.906 0 01-.685-1.498c1.153-1.33 1.992-2.018 2.027-2.046a.903.903 0 011.273.132.903.903 0 01-.131 1.272c-.02.017-.77.637-1.8 1.827a.907.907 0 01-.684.313zm-3.816 5.782a.904.904 0 01-.811-1.307c.414-.84.87-1.664 1.359-2.45a.907.907 0 011.54.953 27.415 27.415 0 00-1.276 2.3.906.906 0 01-.812.504zm-2.287 6.536l-.195-.02a.907.907 0 01-.69-1.08c.2-.91.445-1.82.728-2.704a.907.907 0 011.725.553 28.435 28.435 0 00-.685 2.54.904.904 0 01-.883.711zm-.702 6.89a.907.907 0 01-.905-.899l-.001-.32c0-.828.03-1.658.093-2.47a.906.906 0 011.806.138c-.06.766-.088 1.55-.088 2.332l.002.305a.907.907 0 01-.9.913h-.007zm.759 6.888a.908.908 0 01-.887-.722 39.25 39.25 0 01-.464-2.742.903.903 0 01.777-1.016.906.906 0 011.017.777c.115.861.264 1.74.445 2.614a.908.908 0 01-.704 1.071l-.184.018zm2.097 6.595a.906.906 0 01-.826-.532 29.631 29.631 0 01-1.03-2.604.906.906 0 011.715-.585c.288.843.612 1.664.965 2.442a.906.906 0 01-.824 1.28zm3.725 5.816a.899.899 0 01-.677-.304 22.54 22.54 0 01-1.738-2.229.905.905 0 011.495-1.022 20.953 20.953 0 001.597 2.05.905.905 0 01-.677 1.505zm5.39 4.316a.905.905 0 01-.435-.112 21.186 21.186 0 01-2.387-1.532.905.905 0 111.078-1.455c.69.512 1.426.984 2.183 1.4a.906.906 0 01-.438 1.7zm6.537 2.267l-.147-.012a20.974 20.974 0 01-2.767-.65.907.907 0 01.532-1.731c.84.258 1.692.458 2.527.594a.906.906 0 01-.145 1.8z\"\n            ></path>\n            <path\n              fill=\"#DD4457\"\n              d=\"M274.219 62.816a.92.92 0 01-.277-.043c-1.515-.486-2.49-.637-2.5-.638a.905.905 0 01.269-1.79c.045.005 1.115.168 2.784.704a.905.905 0 01-.276 1.767zm6.286 2.92a.902.902 0 01-.476-.137 28.501 28.501 0 00-2.3-1.28.905.905 0 11.807-1.622c.833.414 1.656.873 2.447 1.363a.905.905 0 01-.478 1.675zm5.4 4.336a.899.899 0 01-.648-.274 27.378 27.378 0 00-1.921-1.793.905.905 0 111.17-1.382c.712.603 1.4 1.247 2.049 1.913a.906.906 0 01-.65 1.536zm4.192 5.51a.904.904 0 01-.781-.448c-.447-.758-.93-1.5-1.436-2.204a.907.907 0 011.47-1.057 30.47 30.47 0 011.526 2.343.905.905 0 01-.78 1.365zm2.839 6.312a.906.906 0 01-.86-.62 33.65 33.65 0 00-.926-2.475.906.906 0 011.669-.702c.355.842.683 1.718.977 2.607a.906.906 0 01-.86 1.19zm1.648 6.735a.905.905 0 01-.893-.76 40.915 40.915 0 00-.507-2.61.906.906 0 011.765-.402c.207.907.386 1.823.53 2.724a.904.904 0 01-.75 1.037l-.145.011zm.475 6.915h-.025a.905.905 0 01-.881-.929 36.511 36.511 0 00-.029-2.647.905.905 0 111.809-.088 37.491 37.491 0 01.03 2.784.906.906 0 01-.904.88zm-.905 6.87l-.214-.028a.904.904 0 01-.667-1.092c.205-.848.377-1.719.512-2.589a.903.903 0 011.033-.756.904.904 0 01.756 1.032c-.141.92-.324 1.841-.541 2.738a.906.906 0 01-.88.694zm-2.352 6.515a.904.904 0 01-.813-1.303c.386-.788.742-1.6 1.059-2.417a.904.904 0 111.687.654 32.255 32.255 0 01-1.12 2.558.901.901 0 01-.813.508zm-3.706 5.86a.906.906 0 01-.707-1.472 30.225 30.225 0 001.556-2.133.906.906 0 011.507 1.004 32.7 32.7 0 01-1.647 2.26.909.909 0 01-.71.34zm-3.446 3.603a.91.91 0 01-.374-.09l.367-.828-.554-.716c.002 0 .195-.153.522-.45a.907.907 0 011.28.063.907.907 0 01-.064 1.28c-.515.466-.818.741-1.177.741z\"\n            ></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Typography, Row, Col } from 'antd'\nimport { Person, World } from './assets'\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next'\nimport { Viewer } from '../../../../lib/types';\ninterface Props {\n  viewer: Viewer\n}\nconst { Title, Paragraph, Text } = Typography;\nexport const HomeHero: React.FC<Props> = ({ viewer }) => {\n  const { t, } = useTranslation()\n  return (\n    <Container>\n      {!viewer.id ?\n        <> <div style={{ position: 'absolute', top: 0, width: '100%', height: '100%', zIndex: 0, opacity: .1 }}>\n          <World />\n        </div>\n          <Row style={{ width: '100%' }}>\n            <Col xs={24} md={12} >\n              <Left>\n                <Person />\n              </Left>\n            </Col>\n            <Col xs={24} md={12} >\n              <Right>\n                <TextHolder>\n                  <Title>{t(\"home.title\")}</Title>\n                  <Text>{t(\"home.text_1\")}</Text>\n                  <Text>{t(\"home.text_2\")}</Text>\n                  <Paragraph>{t(\"home.text_3\")}</Paragraph>\n                  <Link to=\"/login\">{t(\"home.signin.button\")}</Link>\n                </TextHolder>\n              </Right>\n            </Col>\n          </Row>\n        </> : null\n      }\n    </Container>\n  )\n}\nconst Container = styled.div`\nwidth:100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-wrap:wrap;\npadding:10px;\npadding-bottom:0;\nposition:relative;\n`\nconst TextHolder = styled.div`\nflex:1;\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\njustify-content:center;\ntext-align:center;\nheight:100%;\n`\nconst Right = styled.div`\nheight:100%;\nflex:1;\nmargin-bottom:20px;\nz-index:99;\npadding:20px;\npadding-bottom:0px;\n& .ant-row.ant-form-item {\n  width:100%;\n  & .ant-form-item-label{\n      max-width:100%;\n  }\n  & .ant-radio-group{\n        display:flex\n      }\n}\n`\nconst Left = styled.div`\nflex:1;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nheight:100%;\n& svg{\n  max-width:400px;\n}\n`","import React, { useState } from 'react'\nimport { Map, Filter, HomeHero } from './components'\nimport styled from 'styled-components'\nimport { Layout, Typography } from 'antd'\nimport { Viewer } from '../../lib/types'\ninterface Props {\n  viewer: Viewer\n}\ninterface filterValuesTypes {\n  language: string,\n  typeOfHelp: string\n  address: string\n}\ninterface addressToGeoLocationProps {\n  lat: number\n  lng: number\n}\nconst { Content } = Layout\nexport const Home: React.FC<Props> = ({ viewer }) => {\n  const [filters, setFilterValues] = useState<filterValuesTypes>({ language: 'arabic', typeOfHelp: 'outside', address: 'Åragatan, Helsingborg, Sweden' })\n  const [addressToGeoLocation, setAddressToGroLocation] = useState<addressToGeoLocationProps>({ lat: 56.069530, lng: 12.701720 })\n  return (\n    <Container>\n      <HomeHero viewer={viewer} />\n      <Filter filters={filters} setFilterValues={setFilterValues} setAddressToGroLocation={setAddressToGroLocation} />\n      <Map addressToGeoLocation={addressToGeoLocation} language={filters.language} typeOfHelp={filters.typeOfHelp} viewer={viewer} />\n    </Container>\n  )\n}\n\n\nconst Container = styled(Content)`\ndisplay:flex;\nflex:1;\nflex-direction:column;\njustify-content:center;\nalign-items:center;\nflex:1;\npadding-bottom:20px;\n`","import React from 'react'\nimport { Layout, Typography } from 'antd'\nimport logo from './assets/solidarity.png'\nconst { Header } = Layout\nconst { Title } = Typography;\nexport const AppHeaderSkeleton = () => {\n  return (\n    <Header className=\"app-header\">\n      <div className=\"app-header__logo-search-section\">\n        <div className=\"app-header__logo\" style={{ display: 'flex', alignContent: 'center', marginTop: 10 }}>\n          <Title style={{ margin: 0 }}>V</Title>\n          <img src={logo} alt=\"app -logo\" />\n          <Title style={{ margin: 0 }}>B</Title>\n        </div>\n      </div>\n    </Header>\n  )\n}","import React from 'react'\nimport Alert from 'antd/lib/alert'\n\ntype Props = {\n  message?: string\n  description?: string\n}\nexport const ErrorBanner: React.FC<Props> = ({ message, description }) => {\n  return (\n    <Alert message={message} description={description} closable banner type=\"error\" className=\"error-banner\" />\n  )\n}","import React from 'react'\nimport { Skeleton } from 'antd'\nexport const PageSkeleton: React.FC<{}> = () => {\n  const skeletonParagraph = (<Skeleton active paragraph={{ rows: 4 }} className=\"page-skeleton__paragraph\" />)\n  return (\n    <>\n      {skeletonParagraph}\n      {skeletonParagraph}\n      {skeletonParagraph}\n    </>\n  )\n}","import React from 'react'\nimport { Card, Typography } from 'antd'\nimport { UserAddOutlined } from '@ant-design/icons'\nimport { formatListingPrice, iconColor } from '../../../lib/utils'\nimport { Link } from 'react-router-dom';\ninterface Props {\n  listing: {\n    id: string;\n    title: string;\n    image: string;\n    address: string;\n    price: number;\n    numOfGuests: number;\n  }\n}\nconst { Text, Title } = Typography;\nexport const ListingCard: React.FC<Props> = ({ listing }) => {\n  const { title, price, image, address, numOfGuests, id } = listing\n  return (\n    <Link to={`/listing/${id}`}>\n      <Card\n        hoverable\n        cover={<div className=\"listing-card__cover-img\" style={{ backgroundImage: `url(${image})` }}></div>}\n      >\n        <div className=\"listing-card__details\">\n          <div className=\"listing-card__description\">\n            <Title level={4} className=\"listing-card__price\">\n              {formatListingPrice(price)}\n              <span>/day</span>\n            </Title>\n            <Text strong ellipsis className=\"listing-card__title\">\n              {title}\n            </Text>\n            <Text ellipsis className=\"listing-card__address\">\n              {address}\n            </Text>\n          </div>\n          <div className=\"listing-card__dimensions listing-card__dimensions--guests\">\n            <UserAddOutlined style={{ color: iconColor }} />\n\n            <Text>{numOfGuests} guests</Text>\n          </div>\n        </div>\n      </Card>\n    </Link>\n  )\n}","import React from 'react'\nimport { Button } from 'antd'\nimport facebookLogo from '../../assets/facebook.png'\nimport { useTranslation } from 'react-i18next'\n\nexport const FaceBookButton: React.FC<{}> = () => {\n  const { t, } = useTranslation()\n  return (\n    <Button className=\"log-in-card__login-button log-in-card__login-button-facebook\" disabled>\n      <img src={facebookLogo} className=\"log-in-card__google-button-logo\" alt=\"google-logo\" />\n\n      <span className=\"log-in-card__google-button-text\">{t(\"login.facebook.button\")}</span>\n      <span className=\"log-in-card__google-button-text\">soon! </span>\n    </Button>\n  )\n}","import React from 'react'\nimport { useApolloClient } from '@apollo/react-hooks'\nimport { AUTH_URL } from '../../../../lib/graphql/queries/AuthUrl'\nimport { AuthUrl as AuthUrlData } from '../../../../lib/graphql/queries/AuthUrl/__generated__/AuthUrl'\nimport { useTranslation } from 'react-i18next'\nimport { Button } from 'antd'\nimport googleLogo from '../../assets/google.png'\nimport { displayErrorMessage } from '../../../../lib/utils'\nexport const GoogleButton: React.FC<{}> = () => {\n  const { t, } = useTranslation()\n  const client = useApolloClient()\n\n  const handleGoogleAuthorize = async () => {\n    try {\n      const { data } = await client.query<AuthUrlData>({\n        query: AUTH_URL\n      })\n      window.location.href = data.authUrl;\n    } catch (error) {\n      displayErrorMessage(t(\"login.google.error.message\"))\n    }\n  }\n  return (\n    <Button className=\"log-in-card__login-button log-in-card__login-button-google \" onClick={handleGoogleAuthorize}>\n      <img src={googleLogo} className=\"log-in-card__google-button-logo\" alt=\"google-logo\" />\n      <span className=\"log-in-card__google-button-text\">{t(\"login.google.button\")}</span>\n    </Button>\n  )\n}","import React from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { useMutation } from '@apollo/react-hooks'\nimport { LOGIN_EMAIL } from '../../../../../../lib/graphql/mutations'\nimport { LoginEmail as LoginData, LoginEmailVariables } from '../../../../../../lib/graphql/mutations/LoginEmail/__generated__/LoginEmail'\nimport { Redirect } from 'react-router-dom'\nimport { displaySuccessNotification, displayErrorMessage } from '../../../../../../lib/utils';\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { Viewer } from '../../../../../../lib/types';\n\ninterface Props {\n  setViewer: (viewer: Viewer) => void\n}\nconst { Item, useForm } = Form\nexport const Login: React.FC<Props> = ({ setViewer }) => {\n  const [form] = useForm()\n  const [login, { data, loading }] = useMutation<LoginData, LoginEmailVariables>(LOGIN_EMAIL, {\n    onCompleted: (data) => {\n      displaySuccessNotification('you logged in successfully')\n      form.resetFields()\n      setViewer(data.loginEmail)\n      if (data.loginEmail.token) {\n        window.sessionStorage.setItem('token', data.loginEmail.token)\n      } else {\n        window.sessionStorage.removeItem('token')\n      }\n    },\n    onError: (error) => {\n      displayErrorMessage(`${error}`)\n      form.resetFields()\n    }\n  })\n  const onFinish = (values: any) => {\n    login({\n      variables: {\n        input: {\n          ...values\n        }\n      }\n    })\n  };\n  if (data && data.loginEmail) {\n    const { id: viewerId } = data.loginEmail;\n    return <Redirect to={`/user/${viewerId}`} />\n  }\n  return (\n    <Form\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      form={form}\n    >\n      <Item name=\"contact\" rules={[{ required: true, message: 'Please input your username!' }]}>\n        <Input placeholder=\"Email\" />\n      </Item>\n      <Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]}>\n        <Input.Password placeholder=\"Password\" />\n      </Item>\n      <Item >\n        <Button type=\"primary\" htmlType=\"submit\">\n          {\n            loading ? <LoadingOutlined /> : 'Login'\n          }\n        </Button>\n      </Item>\n    </Form>\n  )\n}","import React, { useState } from 'react'\nimport { Form, Input, Button, Upload } from 'antd';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { displayErrorMessage, displaySuccessNotification } from '../../../../../../lib/utils';\nimport { LoadingOutlined, PlusCircleOutlined } from '@ant-design/icons'\nimport { useMutation } from '@apollo/react-hooks'\nimport { SIGNUP } from '../../../../../../lib/graphql/mutations'\nimport { SignupVariables, Signup as SignupData } from '../../../../../../lib/graphql/mutations/Signup/__generated__/Signup'\ninterface Props {\n  setActiveTab: (key: string) => void\n}\nconst { Item, useForm } = Form;\nexport const Signup: React.FC<Props> = ({ setActiveTab }) => {\n  const [imageLoading, setImageLoading] = useState(false);\n  const [imageBase64Value, setImageBase64Value] = useState<string | null>(null);\n  const [form] = useForm()\n  const [signup, { loading }] = useMutation<SignupData, SignupVariables>(SIGNUP, {\n    onCompleted: data => {\n      if (data) {\n        displaySuccessNotification('your account created successfully,use your email and password to login')\n        setActiveTab('1')\n        form.resetFields();\n        setImageBase64Value(null)\n      }\n    },\n    onError: (error) => { console.log(error); displayErrorMessage(`Error : ${error}`) }\n  })\n  const onFinish = (values: any) => {\n    if (!imageBase64Value) {\n      return displayErrorMessage(\"Image is required\")\n    }\n    signup({\n      variables: {\n        input: {\n          ...values,\n          avatar: imageBase64Value\n        }\n      }\n    })\n  };\n\n  const handleImageUpload = (info: UploadChangeParam) => {\n    const { file } = info;\n\n    if (file.status === \"uploading\") {\n      setImageLoading(true);\n      return;\n    }\n\n    if (file.status === \"done\" && file.originFileObj) {\n      getBase64Value(file.originFileObj, imageBase64Value => {\n        setImageBase64Value(imageBase64Value);\n        setImageLoading(false);\n      });\n    }\n  };\n  return (\n    <Form\n      form={form}\n      name=\"basic\"\n      initialValues={{ remember: false }}\n      onFinish={onFinish}\n    >\n      <Item name=\"contact\" rules={[{ required: true, message: 'Please insert your email!' }]}>\n        <Input placeholder=\"Email\" required />\n      </Item>\n      <Item name=\"name\" rules={[{ required: true, message: 'Please insert your name!' }]}>\n        <Input placeholder=\"Name\" required />\n      </Item>\n      <Item name=\"password\" rules={[{ required: true, message: 'Please insert your password!' }]}>\n        <Input.Password placeholder=\"Password\" />\n      </Item>\n      <Upload\n        name=\"image\"\n        listType=\"picture-card\"\n        showUploadList={false}\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        beforeUpload={beforeImageUpload}\n        onChange={handleImageUpload}\n      >\n        {imageBase64Value ? (\n          <img src={imageBase64Value} alt=\"profile\" style={{ width: 70 }} />\n        ) : (\n            <div>\n              {imageLoading ? <LoadingOutlined /> : <PlusCircleOutlined />}\n              <div className=\"ant-upload-text\">Upload</div>\n            </div>\n          )}\n      </Upload>\n      <Item >\n        <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>\n          {\n            loading ? <LoadingOutlined /> : 'Signup'\n          }\n        </Button>\n      </Item>\n    </Form>\n  )\n}\n\n\nconst beforeImageUpload = (file: File) => {\n  const fileIsValidImage = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  const fileIsValidSize = file.size / 1024 / 1024 < 1;\n\n  if (!fileIsValidImage) {\n    displayErrorMessage(\"You're only able to upload valid JPG or PNG files!\");\n    return false;\n  }\n\n  if (!fileIsValidSize) {\n    displayErrorMessage(\n      \"You're only able to upload valid image files of under 1MB in size!\"\n    );\n    return false;\n  }\n\n  return fileIsValidImage && fileIsValidSize;\n};\n\nconst getBase64Value = (\n  img: File | Blob,\n  callback: (imageBase64Value: string) => void\n) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(img);\n  reader.onload = () => {\n    callback(reader.result as string);\n  };\n};\n","import React, { useState } from 'react'\nimport { Tabs } from 'antd';\nimport { Login, Signup } from './components'\nimport { Viewer } from '../../../../lib/types';\ninterface Props {\n  setViewer: (viewer: Viewer) => void\n}\nconst { TabPane } = Tabs;\nexport const LgoInForm: React.FC<Props> = ({ setViewer }) => {\n  const [activeTab, setActiveTab] = useState(\"1\")\n  return (\n    <Tabs activeKey={activeTab} onChange={setActiveTab} >\n      <TabPane tab=\"Login\" key=\"1\">\n        <Login setViewer={setViewer} />\n      </TabPane>\n      <TabPane tab=\"Signup\" key=\"2\">\n        <Signup setActiveTab={setActiveTab} />\n      </TabPane>\n    </Tabs>\n  )\n}","import React, { useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { Card, Layout, Typography, Spin, Divider } from 'antd'\nimport { useMutation } from '@apollo/react-hooks'\nimport { LOG_IN } from '../../lib/graphql/mutations'\nimport { LogIn as LogInData, LogInVariables } from '../../lib/graphql/mutations/LogIn/__generated__/LogIn'\nimport { ErrorBanner } from '../../lib/components'\nimport { displaySuccessNotification } from '../../lib/utils'\nimport { useTranslation } from 'react-i18next'\nimport { Viewer } from '../../lib/types'\nimport styled from 'styled-components';\nimport { GoogleButton, FaceBookButton, LgoInForm } from './components'\n\ninterface Props {\n  viewer: Viewer,\n  setViewer: (viewer: Viewer) => void\n}\nconst { Content } = Layout;\nconst { Text, Title } = Typography\n\nexport const Login: React.FC<Props> = ({ setViewer, viewer }) => {\n  const { t, } = useTranslation()\n  const [\n    logIn,\n    { data: logInData, loading: logInLoading, error: logInError }\n  ] = useMutation<LogInData, LogInVariables>(\n    LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.logIn) {\n          setViewer(data.logIn);\n          displaySuccessNotification(t(\"login.google.success.message\"))\n          if (data.logIn.token) {\n            window.sessionStorage.setItem('token', data.logIn.token)\n          } else {\n            window.sessionStorage.removeItem('token')\n          }\n        }\n      },\n      onError: (error) => console.log(error)\n    }\n  )\n\n  const logInRef = useRef(logIn)\n  useEffect(() => {\n    const code = new URL(window.location.href).searchParams.get('code')\n    if (code) { logInRef.current({ variables: { input: { code } } }) }\n  }, [])\n\n  const loInErrorBannerElement = logInError ? <ErrorBanner description={t(\"login.google.error.banner\")} /> : null;\n\n  if (logInData && logInData.logIn) {\n    const { id: viewerId } = logInData.logIn;\n    return <Redirect to={`/user/${viewerId}`} />\n  }\n  if (viewer && viewer.id) {\n    const { id: viewerId } = viewer;\n    return <Redirect to={`/user/${viewerId}`} />\n  }\n  if (logInLoading) {\n    return <Content className=\"log-in\"><Spin size=\"large\" tip={t(\"login.google.loading.message\")} /></Content>\n  }\n  return (\n    <Content className=\"log-in\">\n      {loInErrorBannerElement}\n      <Card className=\"log-in-card\">\n        <div className=\"log-in-card__intro\">\n          <Title level={3} className=\"log-in-card__intro-title\">\n            {t(\"login.title\")}\n          </Title>\n          <Text>{t(\"login.google.text\")}</Text>\n        </div>\n        <ButtonsHolder>\n          <GoogleButton />\n          <FaceBookButton />\n          <Divider />\n          <LgoInForm setViewer={setViewer} />\n        </ButtonsHolder>\n        <Divider />\n        <Text type=\"secondary\">{t(\"login.google.helpText\")}</Text>\n      </Card>\n    </Content>\n  )\n}\nconst ButtonsHolder = styled.div`\nwidth:100%;\ndisplay:flex;\nflex-direction:column;\nalign-items:stretch;\njustify-content:center;\n`","import React from 'react'\n\nexport const NotFound: React.FC<{}> = () => {\n  return (\n    <div>\n\n    </div>\n  )\n}","import React from 'react'\nimport { User } from '../../../../../../lib/graphql/queries/User/__generated__/User'\nimport { Typography, List, Card } from 'antd'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  helpRequests: User['user']['helpRequests']\n  helpRequestsPage: number\n  limit: number\n  setHelpRequestsPage: (page: number) => void\n}\nconst { Title, Paragraph } = Typography\nexport const UserHelpRequests: React.FC<Props> = ({ helpRequests, helpRequestsPage, limit, setHelpRequestsPage }) => {\n  const { t, } = useTranslation()\n  const total = helpRequests ? helpRequests.total : null\n  const result = helpRequests ? helpRequests.result : null\n  const userHelpRequestsList = helpRequests ? (\n    <List\n      grid={{\n        gutter: 8,\n        xs: 1,\n        sm: 2,\n        lg: 4\n      }}\n      dataSource={result || undefined}\n      locale={{ emptyText: t(\"user.profile.help.requests.empty\") }}\n      pagination={{\n        position: \"top\",\n        current: helpRequestsPage,\n        total: total || undefined,\n        defaultPageSize: limit,\n        hideOnSinglePage: true,\n        showLessItems: true,\n        onChange: (page: number) => setHelpRequestsPage(page)\n      }}\n      renderItem={(helpRequest: any) => {\n        return (\n          <List.Item\n          >\n            <Card title={helpRequest.title} >\n              {helpRequest.description}\n            </Card>\n          </List.Item>\n        )\n      }}\n    />\n  ) : null\n  const userBookingsElement = userHelpRequestsList ? (\n    <div className=\"user-listings\">\n      <Title level={4} className=\"user-listings__title\">{t(\"user.profile.help.requests.title\")}</Title>\n      <Paragraph className=\"user-listings__description\">\n        {t(\"user.profile.help.requests.help.text\")}\n      </Paragraph>\n      {userHelpRequestsList}\n    </div>\n  ) : null;\n  return userBookingsElement;\n}","import React from 'react'\nimport { Form, Input, Button, Radio, Select } from 'antd';\nimport { useMutation } from '@apollo/react-hooks'\nimport { HELP_REQUEST } from '../../../../lib/graphql/mutations'\nimport styled from 'styled-components';\nimport { displaySuccessNotification, displayErrorMessage } from '../../../../lib/utils';\nimport { useTranslation } from 'react-i18next'\nimport { SizeType } from 'antd/lib/config-provider/SizeContext';\nconst { Item } = Form;\ninterface Props {\n  refetchUserData: () => void\n  size: SizeType\n}\nexport const AskForHelpContent: React.FC<Props> = ({ refetchUserData, size }) => {\n  const { t, } = useTranslation()\n  const [createAskHelp, { loading }] = useMutation(HELP_REQUEST, {\n    onCompleted: () => {\n      displaySuccessNotification(t(\"user.profile.creat.request.success\"));\n      refetchUserData();\n    },\n    onError: (error) => {\n      displayErrorMessage(t(\"user.profile.create.request.error\"))\n    }\n  })\n  const HandleOnFinish = (data: any) => {\n    createAskHelp({\n      variables: { input: { ...data } }\n    })\n  }\n  return (\n    <CustomForm\n      labelCol={{ span: 24 }}\n      wrapperCol={{ span: 24 }}\n      layout=\"horizontal\"\n      style={{ width: '100%' }}\n      onFinish={HandleOnFinish}\n      scrollToFirstError\n      validateMessages={{ default: 'all' }}\n      initialValues={{ type: 'shopping', language: 'swedish' }}\n      size={size}\n    >\n      <CustomItem name=\"title\" required>\n        <Input required placeholder={t(\"user.profile.input.title\")} />\n      </CustomItem>\n      <CustomItem name=\"description\" required>\n        <Input required placeholder={t(\"user.profile.input.description\")} />\n      </CustomItem>\n      <CustomItem label={t(\"user.profile.input.type\")} name=\"type\" required>\n        <Radio.Group defaultValue=\"shopping\">\n          <Radio.Button value=\"outside\">{t(\"filter.type.outside\")}</Radio.Button>\n          <Radio.Button value=\"inside\">{t(\"filter.type.inside\")}</Radio.Button>\n          <Radio.Button value=\"shopping\">{t(\"filter.type.shopping\")}</Radio.Button>\n          <Radio.Button value=\"digital\">{t(\"filter.type.digital\")}</Radio.Button>\n        </Radio.Group>\n      </CustomItem>\n      <CustomItem label={t(\"user.profile.input.language\")} name=\"language\" required>\n        <Select defaultValue=\"swedish\" >\n          <Select.Option value=\"swedish\">{t(\"filter.swedish.language\")}</Select.Option>\n          <Select.Option value=\"arabic\">{t(\"filter.arabic.language\")}</Select.Option>\n          <Select.Option value=\"english\">{t(\"filter.english.language\")}</Select.Option>\n          <Select.Option value=\"somali\">{t(\"filter.somali.language\")}</Select.Option>\n        </Select>\n      </CustomItem>\n      <CustomItem>\n        <Button htmlType=\"submit\" type=\"primary\" loading={loading}>{t('user.profile.input.submit')}</Button>\n      </CustomItem>\n    </CustomForm >\n\n  )\n}\nconst CustomForm = styled(Form)`\nflex:1;\ndisplay:flex;\nflex-direction:column;\njustify-content:stretch;\nalign-items:stretch;\nwidth:100%;\n`\nconst CustomItem = styled(Item)`\ndisplay:flex;\nflex-direction:column;\njustify-content:stretch;\nalign-items:flex-start;\n`","import React from 'react'\nimport { User as UserData } from '../../../../lib/graphql/queries/User/__generated__/User'\nimport { Avatar, Typography, Divider, Tabs, List } from 'antd'\nimport { UserHelpRequests } from './components'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { AskForHelpContent } from '../AskForHelp'\nimport { CheckCircleTwoTone, CloseCircleOutlined } from '@ant-design/icons';\n\ninterface UserProfileTabProps {\n  user: UserData[\"user\"]\n}\ninterface UserProfileContentProps {\n  user: UserData[\"user\"];\n  viewerIsUser: boolean\n  helpRequestsPage: number\n  limit: number\n  setHelpRequestsPage: (page: number) => void\n  refetchUserData: () => void\n}\nconst { Title, Paragraph, Text } = Typography\nconst { TabPane } = Tabs;\n\nexport const UserProfileTab: React.FC<UserProfileTabProps> = ({ user }) => {\n  return user && user.avatar ? <Avatar size={30} src={user.avatar} /> : null\n}\nexport const UserProfileContent: React.FC<UserProfileContentProps> = ({ user, viewerIsUser, helpRequestsPage, limit, setHelpRequestsPage, refetchUserData }) => {\n  const { t, } = useTranslation()\n  const helpRequests = user.helpRequests;\n  const helpRequestsElements = helpRequests && helpRequests.result.length > 0 ? <UserHelpRequests helpRequests={helpRequests} helpRequestsPage={helpRequestsPage} limit={limit} setHelpRequestsPage={setHelpRequestsPage} /> : null;\n  const groupMembersElement = user && user.memberAtt && user.memberAtt.map(({ id, avatar }) => <Link key={id} to={`/group/${id}`}><Avatar src={avatar ? avatar : ''} /></Link>)\n  const AskForHelpElement = viewerIsUser && user && user.address ? <AskForHelpContent refetchUserData={refetchUserData} size={\"small\"} /> : null\n\n  return (\n    <div>\n      <Title level={4}>{t(\"user.profile.details\")}</Title>\n      <Paragraph>\n        {t(\"user.profile.name\")} : <Text strong>{user.name}</Text> {user.verifiedAccount ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : <CloseCircleOutlined twoToneColor=\"#eb2f96\" />}\n      </Paragraph>\n      {viewerIsUser &&\n        <>\n          <Paragraph>\n            {t(\"user.profile.contact\")} : <Text strong>{user.contact}</Text>\n          </Paragraph>\n          {user.address && <Paragraph>\n            {t(\"user.profile.address\")} : <Text>{user.address}</Text>\n          </Paragraph>}\n        </>\n      }\n      {user.adminAtt && <Paragraph>\n        admin : <Text><Link to={`/group/${user.adminAtt.id}`}>{user.adminAtt.name}</Link></Text>\n      </Paragraph>}\n      <Divider />{\n        user && user.memberAtt && user.memberAtt.length > 0 ? <>\n          <Title level={4}>Member Att</Title>\n          {groupMembersElement}\n          <Divider />\n        </> : null\n      }\n      {viewerIsUser && <Tabs defaultActiveKey=\"1\">\n        <TabPane tab={t(\"user.profile.tabs.ask\")} key=\"1\">\n          {AskForHelpElement}\n        </TabPane>\n        <TabPane tab={t(\"user.profile.tabs.tasks\")} key=\"2\">\n          {user.memberAtt ? <List>\n            <List.Item actions={[<div>{t(\"user.profile.tabs.tasks.accept\")}</div>, <div>{t(\"user.profile.tabs.tasks.reject\")}</div>]}>\n              <List.Item.Meta\n                avatar={\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                }\n                title={<a href=\"https://ant.design\">Help Offer</a>}\n                description=\"Basel Munawwar want to help you with this task\"\n              />\n              <div>content</div>\n            </List.Item>\n            <List.Item actions={[<div>{t(\"user.profile.tabs.tasks.accept\")}</div>, <div>{t(\"user.profile.tabs.tasks.reject\")}</div>]}>\n              <List.Item.Meta\n                avatar={\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                }\n                title={<a href=\"https://ant.design\">Help Offer</a>}\n                description=\"Basel Munawwar want to help you with this task\"\n              />\n              <div>content</div>\n            </List.Item>\n          </List> :\n            'Join a group to start get tasks'\n          }  </TabPane>\n        <TabPane tab={t(\"user.profile.tabs.Requests\")} key=\"3\">\n          {helpRequestsElements}\n        </TabPane>\n        <TabPane tab={t(\"user.profile.tabs.offers\")} key=\"4\">\n          <List>\n            <List.Item actions={[<div>{t(\"user.profile.tabs.tasks.accept\")}</div>, <div>{t(\"user.profile.tabs.tasks.reject\")}</div>]}>\n              <List.Item.Meta\n                avatar={\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                }\n                title={<a href=\"https://ant.design\">Help Offer</a>}\n                description=\"Basel Munawwar want to help you with this task\"\n              />\n              <div>content</div>\n            </List.Item>\n          </List>\n        </TabPane>\n      </Tabs>\n      }\n    </div >\n  )\n}","import React, { useEffect, useRef } from 'react'\nimport { geolocated, GeolocatedProps } from \"react-geolocated\";\nimport { useMutation } from '@apollo/react-hooks'\nimport { GENERATE_ADDRESS } from '../../../../lib/graphql/mutations'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  label?: string;\n  refetchUserData: () => void\n}\nconst Geo: React.FC<Props & GeolocatedProps> = ({ refetchUserData, coords, isGeolocationAvailable, isGeolocationEnabled }) => {\n  const { t, } = useTranslation()\n  const [convertGeo, { error, loading, data }] = useMutation(GENERATE_ADDRESS, {\n    variables: {\n      lng: coords ? coords?.longitude : 12.6944,\n      lat: coords ? coords?.latitude : 56.1357\n    },\n    onCompleted: data => refetchUserData(),\n    onError: data => console.log(data)\n  })\n  const convertGeoRef = useRef(convertGeo)\n  useEffect(() => {\n    if (coords) {\n      convertGeoRef.current()\n    }\n  }, [coords])\n  if (error) {\n    return <p>{t(\"geo.error\")}</p>\n  }\n  return (\n    <div>\n      <div>\n        {!isGeolocationAvailable ? (\n          <div>{t(\"geo.browser.support\")}</div>\n        ) : !isGeolocationEnabled ? (\n          <div>{t(\"geo.disabled\")}</div>\n        ) : (coords && !loading) ? (\n          data ? <div>{data.generateUserLocation}</div> : null\n        ) : null}\n      </div>\n    </div >\n  )\n}\nexport default geolocated({\n  suppressLocationOnMount: true,\n  positionOptions: {\n    enableHighAccuracy: true\n  }\n})(Geo);\n","import React, { useRef } from 'react'\nimport { Button, Typography, Form, Input, Divider, Spin } from 'antd'\nimport styled from 'styled-components'\nimport { AimOutlined } from '@ant-design/icons'\nimport Geo from './geo'\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { GENERATE_USER_GEOLOCATION } from '../../../../lib/graphql/mutations'\nimport { generateUserAddress as GenerateAdressData, generateUserAddressVariables } from '../../../../lib/graphql/mutations/ConvertAddressToGeolocation/__generated__/generateUserAddress'\nimport { displayErrorMessage } from '../../../../lib/utils'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  refetchUserData: () => void\n}\nconst { Text } = Typography;\nconst { Item } = Form\nexport const GeoLocationButton: React.FC<Props> = ({ refetchUserData }) => {\n  const { t, } = useTranslation()\n  const [generateGeoLocation, { error, loading }] = useMutation<GenerateAdressData & generateUserAddressVariables>(GENERATE_USER_GEOLOCATION, {\n    onCompleted: () => refetchUserData(),\n    onError: error => console.log(error)\n  })\n\n  const onFinish = (values: any) => {\n    generateGeoLocation({\n      variables: {\n        userAddress: `${values.street},${values.city},${values.state},${values.country}`\n      }\n    })\n  };\n  const innerRef: any = useRef();\n  const getLocation = () => {\n    innerRef.current && innerRef.current.getLocation();\n  };\n  if (error) {\n    displayErrorMessage(t('geo.error.save'))\n  }\n  return (\n    <Container>\n      <Text>{t(\"geo.warning\")}</Text>\n      {<Geo ref={innerRef} refetchUserData={refetchUserData} />}\n      <Button type=\"primary\" onClick={getLocation}><AimOutlined />{t('geo.form.get.location')}</Button>\n      <Divider />\n      <Text>{t('geo.form.title')} </Text>\n      <Form name=\"control-hooks\" onFinish={onFinish}>\n        <Item name=\"street\" rules={[{ required: true }]}>\n          <Input placeholder={t('geo.form.street')} />\n        </Item>\n        <Item name=\"city\" rules={[{ required: true }]}>\n          <Input placeholder={t('geo.form.city')} />\n        </Item>\n        <Item name=\"state\" rules={[{ required: true }]}>\n          <Input placeholder={t('geo.form.state')} />\n        </Item>\n        <Item name=\"country\" rules={[{ required: true }]}>\n          <Input placeholder={t('geo.form.country')} />\n        </Item>\n        <Item>\n          <Button type=\"primary\" htmlType=\"submit\" disabled={loading}>{loading ? <Spin size=\"small\" /> : t(\"geo.form.submit\")}</Button>\n        </Item>\n      </Form>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\ndisplay:flex;\nflex-direction:column;\nalign-content:center;\njustify-content:center;\nmax-width:200px;\ntext-align:center;\n& > * {\n  margin :10px 0px;\n}\n`\n\n\n","import React, { useState } from 'react'\nimport { Divider, Form, Typography, Button, Input, Upload } from 'antd'\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { useMutation } from '@apollo/react-hooks'\nimport { CREATE_GROUPE } from '../../../../lib/graphql/mutations'\nimport { createGroup as createGroupData, createGroupVariables } from '../../../../lib/graphql/mutations/CreateGroupe/__generated__/createGroup'\nimport { displayErrorMessage } from '../../../../lib/utils'\nimport { LoadingOutlined, PlusCircleOutlined } from '@ant-design/icons'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  refetchUserData: () => void\n}\nconst { Item } = Form;\nconst { TextArea } = Input;\nconst { Title } = Typography;\nexport const CreateGroupe: React.FC<Props> = ({ refetchUserData }) => {\n  const { t, } = useTranslation()\n  const [imageLoading, setImageLoading] = useState(false);\n  const [imageBase64Value, setImageBase64Value] = useState<string | null>(null);\n  const [createGroup, { loading }] = useMutation<createGroupData & createGroupVariables>(CREATE_GROUPE, {\n    onCompleted: data => {\n      if (data) {\n        refetchUserData()\n      }\n    },\n    onError: error => console.log(error)\n  })\n  const handleOnFinish = (c: any) => {\n    if (!imageBase64Value) {\n      return displayErrorMessage(\"Image is required\")\n    }\n    createGroup({\n      variables: {\n        ...c,\n        avatar: imageBase64Value\n      }\n    })\n  }\n  const handleImageUpload = (info: UploadChangeParam) => {\n    const { file } = info;\n\n    if (file.status === \"uploading\") {\n      setImageLoading(true);\n      return;\n    }\n\n    if (file.status === \"done\" && file.originFileObj) {\n      getBase64Value(file.originFileObj, imageBase64Value => {\n        setImageBase64Value(imageBase64Value);\n        setImageLoading(false);\n      });\n    }\n  };\n  return (\n    <div>\n      <Divider />\n      <Title level={4}>{t(\"create.group.title\")}</Title>\n      <Form onFinish={handleOnFinish}>\n        <Item label={t(\"create.group.name\")} name=\"name\" labelCol={{ span: 24 }}>\n          <Input />\n        </Item>\n        <Item label={t(\"create.group.description\")} name=\"description\" labelCol={{ span: 24 }}>\n          <TextArea />\n        </Item>\n        <p>{t(\"create.group.logo\")}</p>\n        <Upload\n          name=\"image\"\n          listType=\"picture-card\"\n          showUploadList={false}\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          beforeUpload={beforeImageUpload}\n          onChange={handleImageUpload}\n        >\n          {imageBase64Value ? (\n            <img src={imageBase64Value} alt=\"profile\" style={{ width: 70 }} />\n          ) : (\n              <div>\n                {imageLoading ? <LoadingOutlined /> : <PlusCircleOutlined />}\n                <div className=\"ant-upload-text\">{t(\"create.group.upload\")}</div>\n              </div>\n            )}\n        </Upload>\n        <Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>{t(\"create.group.create\")}</Button>\n        </Item>\n      </Form>\n      <Divider />\n    </div>\n  )\n}\n\nconst beforeImageUpload = (file: File) => {\n  const fileIsValidImage = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  const fileIsValidSize = file.size / 1024 / 1024 < 1;\n\n  if (!fileIsValidImage) {\n    displayErrorMessage(\"You're only able to upload valid JPG or PNG files!\");\n    return false;\n  }\n\n  if (!fileIsValidSize) {\n    displayErrorMessage(\n      \"You're only able to upload valid image files of under 1MB in size!\"\n    );\n    return false;\n  }\n\n  return fileIsValidImage && fileIsValidSize;\n};\n\nconst getBase64Value = (\n  img: File | Blob,\n  callback: (imageBase64Value: string) => void\n) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(img);\n  reader.onload = () => {\n    callback(reader.result as string);\n  };\n};\n","import React, { useState } from 'react'\nimport { Viewer } from '../../lib/types'\nimport { useQuery } from '@apollo/react-hooks'\nimport { USER } from '../../lib/graphql/queries'\nimport { User as UserData, UserVariables } from '../../lib/graphql/queries/User/__generated__/User'\nimport { useParams } from 'react-router-dom'\nimport { useScrollToTop } from '../../lib/hooks'\nimport { PageSkeleton, ErrorBanner } from '../../lib/components'\nimport { UserProfileContent, AskForHelpContent, GeoLocationButton, CreateGroupe } from './components'\nimport { Layout, Row, Col, Typography } from 'antd'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  viewer: Viewer\n  setViewer: (viewer: Viewer) => void\n}\nconst { Content } = Layout\nconst { Paragraph } = Typography;\nconst PAGE_LIMIT = 4;\nexport const User: React.FC<Props> = ({ viewer, setViewer }) => {\n  const { t, } = useTranslation()\n  const { id } = useParams()\n  const [helpRequestsPage, setHelpRequestsPage] = useState(1)\n  const { data, error, loading, refetch } = useQuery<UserData & UserVariables>(USER, {\n    variables: {\n      id,\n      helpRequestsPage,\n      limit: PAGE_LIMIT\n    },\n    onError: (error) => console.log(error)\n  })\n  useScrollToTop()\n  const refetchUserData = () => refetch()\n  if (loading) {\n    return (\n      <Content className=\"user\">\n        <PageSkeleton />\n      </Content>\n    )\n  }\n  if (error) {\n    return (\n      <Content className=\"user\">\n        <ErrorBanner description={t(\"\")} />\n        <PageSkeleton />\n      </Content>)\n  }\n  const viewerIsUser = viewer.id === id;\n  const user = data ? data.user : null;\n  const NotVerifyAccount = viewerIsUser && !user?.verifiedAccount ? <Paragraph> {t(\"user.profile.auth\")}</Paragraph> : null;\n\n  const userProfileContentElement = user ? <UserProfileContent user={user} viewerIsUser={viewerIsUser} helpRequestsPage={helpRequestsPage} limit={PAGE_LIMIT} setHelpRequestsPage={setHelpRequestsPage} refetchUserData={refetchUserData} /> : null\n  const geoLocationButtonElement = viewerIsUser && user && !user.address ? <GeoLocationButton refetchUserData={refetchUserData} /> : null\n  const CreateGroupeElement = viewerIsUser && user && user.address && user.verifiedAccount && !user.adminAtt ? <CreateGroupe refetchUserData={refetchUserData} /> : null;\n  console.log(user)\n  return (\n    <Container>\n      <Row>\n        <Col md={5} sm={1}></Col>\n        <Col md={14} sm={22}>\n          {userProfileContentElement}\n          {CreateGroupeElement}\n          {NotVerifyAccount}\n          {geoLocationButtonElement}\n        </Col>\n        <Col md={5} sm={1}></Col>\n      </Row>\n    </Container >\n  )\n}\nconst Container = styled(Content)`\nwidth:100%;\nheight:100%;\nflex:1;\npadding:25px;\ndisplay:flex;\nflex-direction:column\n`\n","import { useLayoutEffect } from 'react'\nexport const useScrollToTop = () => {\n  useLayoutEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n}","import React from 'react'\nimport { group } from '../../../../lib/graphql/queries/Group/__generated__/group'\nimport { Typography, Avatar, Divider, Button, Col, Row, Statistic } from 'antd'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { HeartTwoTone, LikeOutlined } from '@ant-design/icons';\ninterface Props {\n  group: group['group']\n}\nconst { Paragraph, Title, Text } = Typography;\nexport const GroupProfile: React.FC<Props> = ({ group }) => {\n  const { t, } = useTranslation()\n  const groupMembersElement = group.groupMembers.map(({ id, avatar }) => <Link key={id} to={`/user/${id}`}><Avatar src={avatar ? avatar : ''} /></Link>)\n  return (\n    <div>\n      <Avatar src={group.avatar} />\n      <Title level={4}>{t(\"group.profile.details\")}</Title>\n      <Paragraph>\n        {t(\"group.profile.name\")} : <Text strong>{group.name}</Text>\n      </Paragraph>\n      <Paragraph>\n        {t(\"group.profile.description\")} : <Text>{group.description}</Text>\n      </Paragraph>\n      <Paragraph>\n        {t(\"group.profile.address\")} : <Text>{group.address}</Text>\n      </Paragraph>\n      <Paragraph>\n        {t(\"group.profile.by\")} : <Text>{group.by}</Text>\n      </Paragraph>\n      <Divider />\n      <Row gutter={16}>\n        <Col span={8}>\n          <Statistic title={t(\"group.profile.feedback\")} value={1128} prefix={<LikeOutlined />} />\n        </Col>\n        <Col span={8}>\n          <Statistic title={t(\"group.profile.tasksDone\")} value={193} suffix=\"/ 200\" />\n        </Col>\n        <Col span={8}>\n          <Button size=\"large\" type=\"danger\" >{t(\"group.profile.donate\")} <HeartTwoTone twoToneColor={'#5fee5f'} /> </Button> <Paragraph> {t(\"group.profile.soon\")}</Paragraph>\n        </Col>\n      </Row>\n      <Divider />\n      <Divider />\n      <Title level={4}>{t(\"group.profile.members\")}</Title>\n      {groupMembersElement}\n      <Divider />\n\n    </div >\n  )\n}","import React, { useState } from 'react'\nimport { Button, Modal, Select, Form, Spin } from 'antd'\nimport { useMutation } from '@apollo/react-hooks'\nimport { JOIN_GROUP } from '../../../../lib/graphql/mutations'\nimport { joinGroup as joinGroupData, joinGroupVariables } from '../../../../lib/graphql/mutations/JoinGroup/__generated__/joinGroup'\nimport { displayErrorMessage, displaySuccessNotification } from '../../../../lib/utils'\nimport { useTranslation } from 'react-i18next'\ninterface Props {\n  id: string\n}\nconst { Option } = Select\nconst { Item } = Form;\nexport const JoinGroup: React.FC<Props> = ({ id }) => {\n  const { t, } = useTranslation()\n  const [visible, setVisible] = useState<boolean>(false)\n  const [selectedLanguages, setSelectedLanguages] = useState<string[]>([])\n  const languages = ['Arabic', 'Swedish', 'English', 'Somali'];\n  const handleChange = (value: any) => {\n    setSelectedLanguages(value.languages)\n  }\n  const [joinGroup, { loading }] = useMutation<joinGroupData & joinGroupVariables>(JOIN_GROUP, {\n    onCompleted: data => {\n      if (data) {\n        console.log(data)\n        setVisible(false);\n        displaySuccessNotification(t('group.join.success'))\n      }\n    },\n    onError: error => {\n      if (error) {\n        setVisible(false);\n        displayErrorMessage(t('group.join.error'))\n      }\n    }\n  })\n  const handleJoinGroup = () => {\n    if (selectedLanguages.length === 0) {\n      return displayErrorMessage(t(\"group.join.error.language\"))\n    }\n    joinGroup({\n      variables: {\n        id,\n        languages: selectedLanguages\n      }\n    })\n  }\n  return (\n    <div>\n      <Modal\n        visible={visible}\n        title=\"Send Join Group Request\"\n        onOk={handleJoinGroup}\n\n      >\n        <Form onValuesChange={handleChange}>\n          {loading ? <Spin /> : <Item label=\"Languages\" name=\"languages\" help=\"chose language or insert one\" labelCol={{ span: 24 }}>\n            <Select mode=\"tags\" style={{ width: '100%' }} tokenSeparators={[',']}>\n              {\n                languages.map((lang, i) => <Option value={lang} key={lang}>{lang}</Option>)\n              }\n            </Select>\n          </Item>}\n        </Form>\n      </Modal>\n      <Button type=\"primary\" onClick={() => setVisible(true)} disabled={loading}>{t(\"group.join.now\")}</Button>\n    </div>\n  )\n}","import React from 'react'\nimport { Tabs, Badge, List, Avatar } from 'antd'\nimport { CloseCircleOutlined, CheckCircleOutlined } from '@ant-design/icons'\nimport { group } from '../../../../lib/graphql/queries/Group/__generated__/group'\nimport { useMutation } from '@apollo/react-hooks'\nimport { VERIFY_REQUEST } from '../../../../lib/graphql/mutations'\nimport { verifyRequest as verifyRequestData, verifyRequestVariables } from '../../../../lib/graphql/mutations/VerifyRequest/__generated__/verifyRequest'\nimport { useTranslation } from 'react-i18next'\nconst { TabPane } = Tabs;\nconst { Item } = List;\ninterface Props {\n  joinRequests: group['group']['joinRequests']\n  groupId: string\n}\nexport const GroupInfoAdmin: React.FC<Props> = ({ joinRequests, groupId }) => {\n  const { t, } = useTranslation()\n  const [verifyUser] = useMutation<verifyRequestData & verifyRequestVariables>(VERIFY_REQUEST, {\n    onCompleted: data => console.log(data),\n    onError: Error => console.log(Error)\n  })\n  const handleVerifyUser = (id: string) => {\n    verifyUser({\n      variables: {\n        id,\n        groupId\n      }\n    })\n  }\n  return (\n    <div>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab={t('group.admin.tabs.tasks')} key=\"1\">\n          {t('group.admin.tabs.tasks')}\n        </TabPane>\n        <TabPane tab={<div>{t(\"group.admin.tabs.joinRequests\")}<Badge count={joinRequests.length} overflowCount={99} /></div>} key=\"2\">\n          <List\n            dataSource={joinRequests}\n            renderItem={item => (\n              <Item\n                actions={[\n                  <div onClick={() => item ? handleVerifyUser(item.id) : console.log('')} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}><CheckCircleOutlined style={{ color: '#5fee5f', fontSize: 20, marginRight: 5 }} /> {t('group.admin.join.accept')}</div>,\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}><CloseCircleOutlined style={{ color: '#ff4d4e', fontSize: 20, marginRight: 5 }} /> {t('group.admin.join.reject')}</div>]}\n              >\n                <Item.Meta\n                  avatar={<Avatar src={item && item.avatar ? item.avatar : \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"} />}\n                  title={<a href=\"https://ant.design\">{item?.name}</a>}\n                  description={<div>{item?.contact}</div>}\n                />\n              </Item>\n            )}\n          />\n        </TabPane>\n      </Tabs>\n    </div>\n  )\n}","import React from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { Row, Col, Spin, Button } from 'antd'\nimport { useQuery } from '@apollo/react-hooks'\nimport { GROUP } from '../../lib/graphql/queries'\nimport { group as groupData, groupVariables } from '../../lib/graphql/queries/Group/__generated__/group'\nimport { displayErrorMessage } from '../../lib/utils'\nimport { GroupProfile, JoinGroup, GroupInfoAdmin } from './components'\nimport { Viewer } from '../../lib/types'\n\ninterface Props {\n  viewer: Viewer\n}\nexport const Group: React.FC<Props> = ({ viewer }) => {\n  const { id } = useParams()\n  const history = useHistory()\n  const { data, error, loading } = useQuery<groupData & groupVariables>(GROUP, {\n    variables: {\n      id\n    },\n    onCompleted: data => console.log(data),\n    onError: error => console.log(error)\n  })\n\n  const group = data && data.group ? data.group : null;\n  let viewerIsCreator = false;\n  if (group) {\n    viewerIsCreator = group.creatorId === viewer.id;\n  }\n  let letGroupMember = false;\n  if (group) {\n    letGroupMember = group.groupMembers.findIndex(({ id }) => id === viewer.id) !== -1\n  }\n  const groupElement = group ? <GroupProfile group={group} /> : null;\n  const askToLogin = !viewer.id && <Button type=\"primary\" onClick={() => history.push('/login')}>Login</Button>\n  const JoinElement = viewer.id && group && !letGroupMember && !viewerIsCreator ? <JoinGroup id={group.id} /> : null;\n  const profileInfoAdminElement = group && viewerIsCreator ? <GroupInfoAdmin joinRequests={group.joinRequests} groupId={group.id} /> : null\n  if (loading) {\n    return <Spin size=\"large\" />\n  }\n  if (error) {\n    displayErrorMessage('try again later')\n  }\n  return (\n    <div>\n      <Row>\n        <Col md={5} sm={1}></Col>\n        <Col md={14} sm={22}>\n          {groupElement}\n          {JoinElement}\n          {askToLogin}\n          {profileInfoAdminElement}\n        </Col>\n        <Col md={5} sm={1}></Col>\n      </Row>\n\n    </div>\n  )\n}","\nimport i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport { initReactI18next } from 'react-i18next'\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: 'en',\n    backend: {\n      /* translation file path */\n      loadPath: '/assets/i18n/{{ns}}/{{lng}}.json'\n    },\n    fallbackLng: 'en',\n    debug: false,\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ','\n    },\n    react: {\n      wait: true,\n      useSuspense: false\n    }\n  })\n\nexport default i18n","import React, { useState, useEffect, useRef } from 'react';\nimport { useMutation } from '@apollo/react-hooks'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AppHeader, Home, User, NotFound, Login, Group } from './sections'\nimport { Layout, Spin } from 'antd'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { AppHeaderSkeleton, ErrorBanner } from './lib/components'\nimport { Viewer } from './lib/types'\nimport { LOG_IN } from './lib/graphql/mutations'\nimport { LogIn as logInData } from './lib/graphql/mutations/LogIn/__generated__/LogIn'\nimport './i18n'\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  request: async operation => {\n    const token = sessionStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        \"X-CSRF-TOKEN\": token || \"\"\n      }\n    })\n  }\n})\nconst initialViewer: Viewer = {\n  id: null,\n  token: null,\n  avatar: null,\n  didRequest: false,\n  address: null,\n  adminAtt: false\n}\n\n\nconst App = () => {\n  const [viewer, setViewer] = useState<Viewer>(initialViewer)\n  const [logIn, { error }] = useMutation<logInData>(LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.logIn) {\n        setViewer(data.logIn)\n        if (data.logIn.token) {\n          window.sessionStorage.setItem(\"token\", data.logIn.token)\n        } else {\n          window.sessionStorage.removeItem('token')\n        }\n      }\n    },\n    onError: (error) => console.log(error)\n  })\n  const logInRef = useRef(logIn)\n  useEffect(() => {\n    logInRef.current()\n  }, [])\n  if (!viewer.didRequest && !error) {\n    return (\n      <Layout className=\"app-skeleton\">\n        <AppHeaderSkeleton />\n        <div className=\"app-skeleton__spin-section\">\n          <Spin size=\"large\" tip=\"Lancing the app, pleas wait...\" />\n        </div>\n      </Layout>\n    )\n  }\n  const logInErrorBannerElement = error ? <ErrorBanner description=\"we weren't able to verify if you were logged in. Pleas try agin later\" /> : null;\n\n  return (\n    <Router>\n      {logInErrorBannerElement}\n      <AppHeader viewer={viewer} setViewer={setViewer} />\n      <Layout id=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home viewer={viewer} />\n          </Route>\n          <Route exact path=\"/Login\">\n            <Login setViewer={setViewer} viewer={viewer} />\n          </Route>\n          <Route exact path=\"/user/:id\">\n            <User viewer={viewer} setViewer={setViewer} />\n          </Route>\n          <Route exact path=\"/group/:id\">\n            <Group viewer={viewer} />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </Router>\n  )\n}\nReactDOM.render(\n  <ApolloProvider client={client}><App /></ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}